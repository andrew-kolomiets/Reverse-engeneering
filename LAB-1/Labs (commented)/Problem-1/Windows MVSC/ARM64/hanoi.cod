
;****************************************************************************************
﻿; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 
;****************************************************************************************

;тут відбувається оголошення бібліотек та зовнішніх функцій також оголошуються змінні та просто іменування вводяться для майбутніх змінних також строки є оголошені


	TTL	C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\hanoi.obj
	ARM64

	AREA	|.drectve|, DRECTVE

	EXPORT	|__local_stdio_printf_options|
	EXPORT	|_vfprintf_l|
	EXPORT	|printf|
	EXPORT	|hanoi|
	EXPORT	|main|
	IMPORT	|__acrt_iob_func|
	IMPORT	|__stdio_common_vfprintf|

	AREA	|.data|, DATA
	 COMMON	|?_OptionsStorage@?1??__local_stdio_printf_options@@9@9|, 0x8
							; `__local_stdio_printf_options'::`2'::_OptionsStorage

	AREA	|.pdata|, PDATA
|$pdata$_vfprintf_l| DCD imagerel |$LN3|
	DCD	0x1e00045
	
	
;****************************************************************************************
	;Flags[SingleProEpi] functionLength[68] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[48]
;****************************************************************************************

	AREA	|.pdata|, PDATA
|$pdata$printf| DCD imagerel |$LN3|
	DCD	imagerel |$unwind$printf|

	AREA	|.pdata|, PDATA
|$pdata$hanoi| DCD imagerel |$LN5|
	DCD	0x16000c1
	
;****************************************************************************************
	;Flags[SingleProEpi] functionLength[192] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[32]
;****************************************************************************************

|$pdata$main| DCD imagerel |$LN3|
	DCD	0xe00029
	;Flags[SingleProEpi] functionLength[40] RegF[0] RegI[0] H[0] frameChainReturn[Chained] frameSize[16]

	AREA	|.data|, DATA
|$SG5209| DCB	"Move disk 1 from %c to %c ", 0xa, 0x0
	%	4
|$SG5210| DCB	"Move disk %d from %c to %c ", 0xa, 0x0

	AREA	|.xdata|, DATA
|$unwind$printf| DCD 0x1a200018
	DCD	0xe3e385e1
	DCD	0xe404e3e3
	DCD	0xe3e40485
	;Code Words[3], Epilog Start Index[8], E[1], X[0], Function Length[24]=96 bytes
	;set_fp
	;save_fplr_x
	;nop
	;nop
	;nop
	;nop
	;alloc_s
	;end
	;save_fplr_x
	;alloc_s
	;end
	;nop
	
	
	
	
;****************************************************************************************
; Function compile flags: /Odsp
; File C:\Users\User\Desktop\hanoi.c
;****************************************************************************************

;початок реалізції функції main() 

	AREA	|.text$mn|, CODE, ARM64

  00000		 |main|	 PROC

; 19   : {

  00000		 |$LN3|
  00000	a9bf7bfd	 stp         fp,lr,[sp,#-0x10]!	;пролог функції на початку
  00004	910003fd	 mov         fp,sp

; 20   :     hanoi(3,'A','C','B');

  00008	52800843	 mov         w3,#0x42
  0000c	52800862	 mov         w2,#0x43
  00010	52800821	 mov         w1,#0x41
  00014	52800060	 mov         w0,#3			;процедура запису параметрів в регістри для hanoi(), чотири інструкції mov переміщують символи в ASCII системі кодування до регістрів
									;порядок їх передачі в регістри визначається ахітектурою та мовою ассемблера, детальніше див. в документацію
  00018	94000000	 bl          hanoi			;виклик функції hanoi()
  
; 21   : }

  0001c	52800000	 mov         w0,#0			;епілог функції в кінці
  00020	a8c17bfd	 ldp         fp,lr,[sp],#0x10
  00024	d65f03c0	 ret					;return

			 ENDP  ; |main|
			 
;кінець реалізції функції main() 


;****************************************************************************************
; Function compile flags: /Odsp
; File C:\Users\User\Desktop\hanoi.c
;****************************************************************************************


;початок реалізції функції hanoi() 

	AREA	|.text$mn|, CODE, ARM64

  00000		 |hanoi| PROC

; 5    : {

  00000		 |$LN5|
  00000	a9be7bfd	 stp         fp,lr,[sp,#-0x20]!		;пролог функції	
  00004	910003fd	 mov         fp,sp
  00008	b90017e0	 str         w0,[sp,#0x14]
  0000c	13001c28	 sxtb        w8,w1
  00010	390043e8	 strb        w8,[sp,#0x10]
  00014	13001c48	 sxtb        w8,w2
  00018	390047e8	 strb        w8,[sp,#0x11]
  0001c	13001c68	 sxtb        w8,w3
  00020	39004be8	 strb        w8,[sp,#0x12]

; 6    : 	if (n==1)

  00024	b94017e8	 ldr         w8,[sp,#0x14]
  00028	7100051f	 cmp         w8,#1				; n порівнюється з 1
  0002c	54000001	 bne         |$LN2@hanoi|			; якщо не виконується умова нас кидає в $LN2
  										; якщо все пройшло успішно, ми заходимо в блок if, і виконуємо наступні інструкції

; 7    : 	{
; 8    : 		printf("Move disk 1 from %c to %c \n" ,from,to);

  00030	39c047e2	 ldrsb       w2,[sp,#0x11]			; передача параметрів до регістрів для функції printf()
  00034	2a0203e2	 mov         w2,w2
  00038	39c043e1	 ldrsb       w1,[sp,#0x10]
  0003c	2a0103e1	 mov         w1,w1
  00040	2a0203e2	 mov         w2,w2
  00044	2a0103e1	 mov         w1,w1
  00048	90000008	 adrp        x8,|$SG5209|
  0004c	91000100	 add         x0,x8,PageOffset(|$SG5209|)
  00050	94000000	 bl          printf				;виклик функції printf()

; 9    : 	}

  00054	14000019	 b           |$LN3@hanoi|			; маємо перейти в епілог в разі виконання
  00058		 |$LN2@hanoi|

; 10   : 	else 
; 11   : 	{
; 12   : 		hanoi(n-1,from,aux,to);

  00058	b94017e8	 ldr         w8,[sp,#0x14]			; передача параметрів до регістрів для функції hanoi()
  0005c	51000500	 sub         w0,w8,#1
  00060	39c047e3	 ldrsb       w3,[sp,#0x11]
  00064	39c04be2	 ldrsb       w2,[sp,#0x12]
  00068	39c043e1	 ldrsb       w1,[sp,#0x10]
  0006c	2a0003e0	 mov         w0,w0
  00070	94000000	 bl          hanoi				;виклик функції hanoi()

; 13   : 		printf ("Move disk %d from %c to %c \n",n,from,to);

  00074	39c047e3	 ldrsb       w3,[sp,#0x11]			; передача параметрів до регістрів для функції printf()
  00078	2a0303e3	 mov         w3,w3
  0007c	39c043e2	 ldrsb       w2,[sp,#0x10]
  00080	2a0203e2	 mov         w2,w2
  00084	2a0303e3	 mov         w3,w3
  00088	2a0203e2	 mov         w2,w2
  0008c	b94017e1	 ldr         w1,[sp,#0x14]
  00090	90000008	 adrp        x8,|$SG5210|
  00094	91000100	 add         x0,x8,PageOffset(|$SG5210|)
  00098	94000000	 bl          printf				;виклик функції printf()

; 14   : 		hanoi(n-1,aux,to,from);

  0009c	b94017e8	 ldr         w8,[sp,#0x14]			; передача параметрів до регістрів для функції hanoi()
  000a0	51000500	 sub         w0,w8,#1
  000a4	39c043e3	 ldrsb       w3,[sp,#0x10]
  000a8	39c047e2	 ldrsb       w2,[sp,#0x11]
  000ac	39c04be1	 ldrsb       w1,[sp,#0x12]
  000b0	2a0003e0	 mov         w0,w0
  000b4	94000000	 bl          hanoi				;виклик функції hanoi()
  000b8		 |$LN3@hanoi|
  000b8	a8c27bfd	 ldp         fp,lr,[sp],#0x20			; епілог фунції
  000bc	d65f03c0	 ret						; return

			 ENDP  ; |hanoi|
	
;кінець реалізції функції hanoi() 
	
			 
;****************************************************************************************
; Function compile flags: /Odsp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
;****************************************************************************************

;все, що розташоване нижче це реалізація стандартних функцій бібліотек поданих в коді, в данному випадку одна
;як бачимо тут є реалізація функції printf(), вона позначена в самому початку EXTERN, тобто зовнішня, під час компіляції, компілятор сам її під'єднує, до коду С


	AREA	|.text$mn|, CODE, ARM64

  00000		 |printf| PROC

; 956  :     {

  00000		 |$LN3|
  00000	d10103ff	 sub         sp,sp,#0x40
  00004	a9008be1	 stp         x1,x2,[sp,#8]
  00008	a90193e3	 stp         x3,x4,[sp,#0x18]
  0000c	a9029be5	 stp         x5,x6,[sp,#0x28]
  00010	f9001fe7	 str         x7,[sp,#0x38]
  00014	a9bd7bfd	 stp         fp,lr,[sp,#-0x30]!
  00018	910003fd	 mov         fp,sp
  0001c	f90013e0	 str         x0,[sp,#0x20]

; 957  :         int _Result;
; 958  :         va_list _ArgList;
; 959  :         __crt_va_start(_ArgList, _Format);

  00020	9100e3e8	 add         x8,sp,#0x38
  00024	f9000fe8	 str         x8,[sp,#0x18]

; 960  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00028	52800020	 mov         w0,#1
  0002c	94000000	 bl          __acrt_iob_func
  00030	f9400fe3	 ldr         x3,[sp,#0x18]
  00034	d2800002	 mov         x2,#0
  00038	f94013e1	 ldr         x1,[sp,#0x20]
  0003c	94000000	 bl          _vfprintf_l
  00040	2a0003e0	 mov         w0,w0
  00044	b90013e0	 str         w0,[sp,#0x10]

; 961  :         __crt_va_end(_ArgList);

  00048	d2800008	 mov         x8,#0
  0004c	f9000fe8	 str         x8,[sp,#0x18]

; 962  :         return _Result;

  00050	b94013e0	 ldr         w0,[sp,#0x10]
  00054	a8c37bfd	 ldp         fp,lr,[sp],#0x30
  00058	910103ff	 add         sp,sp,#0x40
  0005c	d65f03c0	 ret

			 ENDP  ; |printf|
			 
			 
			 
			 
;****************************************************************************************
; Function compile flags: /Odsp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
;****************************************************************************************

;все, що розташоване нижче це реалізація стандартних функцій бібліотек поданих в коді, в данному випадку одна
;як бачимо тут є реалізація функції _vfprintf_l(), вона позначена в самому початку EXTERN, тобто зовнішня, під час компіляції, компілятор сам її під'єднує, до коду С


	AREA	|.text$mn|, CODE, ARM64

  00000		 |_vfprintf_l| PROC

; 644  :     {

  00000		 |$LN3|
  00000	a9bd7bfd	 stp         fp,lr,[sp,#-0x30]!
  00004	910003fd	 mov         fp,sp
  00008	f90017e0	 str         x0,[sp,#0x28]
  0000c	f90013e1	 str         x1,[sp,#0x20]
  00010	f9000fe2	 str         x2,[sp,#0x18]
  00014	f9000be3	 str         x3,[sp,#0x10]

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00018	94000000	 bl          __local_stdio_printf_options
  0001c	f9400be4	 ldr         x4,[sp,#0x10]
  00020	f9400fe3	 ldr         x3,[sp,#0x18]
  00024	f94013e2	 ldr         x2,[sp,#0x20]
  00028	f94017e1	 ldr         x1,[sp,#0x28]
  0002c	f9400000	 ldr         x0,[x0]
  00030	94000000	 bl          __stdio_common_vfprintf
  00034	2a0003e0	 mov         w0,w0
  00038	2a0003e0	 mov         w0,w0
  0003c	a8c37bfd	 ldp         fp,lr,[sp],#0x30
  00040	d65f03c0	 ret

			 ENDP  ; |_vfprintf_l|
			
			
			
			
			
;****************************************************************************************
; Function compile flags: /Odsp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;****************************************************************************************

	AREA	|.text$mn|, CODE, ARM64

  00000		 |__local_stdio_printf_options| PROC

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	90000008	 adrp        x8,|?_OptionsStorage@?1??__local_stdio_printf_options@@9@9|
  00004	91000100	 add         x0,x8,PageOffset(|?_OptionsStorage@?1??__local_stdio_printf_options@@9@9|)
  00008	d65f03c0	 ret

			 ENDP  ; |__local_stdio_printf_options|

	END
