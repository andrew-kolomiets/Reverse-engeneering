   1              		.file	"blowfish.c"
   2              		.text
   3              	.Ltext0:
   4              		.globl	_nettle_blowfish_initial_ctx
   5              		.section	.rodata
   6              		.align 32
   9              	_nettle_blowfish_initial_ctx:
  10 0000 A60B31D1 		.long	-785314906
  11 0004 ACB5DF98 		.long	-1730169428
  12 0008 DB72FD2F 		.long	805139163
  13 000c B7DF1AD0 		.long	-803545161
  14 0010 EDAFE1B8 		.long	-1193168915
  15 0014 967E266A 		.long	1780907670
  16 0018 45907CBA 		.long	-1166241723
  17 001c 997F2CF1 		.long	-248741991
  18 0020 4799A124 		.long	614570311
  19 0024 F76C91B3 		.long	-1282315017
  20 0028 E2F20108 		.long	134345442
  21 002c 16FC8E85 		.long	-2054226922
  22 0030 D8206963 		.long	1667834072
  23 0034 694E5771 		.long	1901547113
  24 0038 A3FE58A4 		.long	-1537671517
  25 003c 7E3D93F4 		.long	-191677058
  26 0040 8F74950D 		.long	227898511
  27 0044 58B68E72 		.long	1921955416
  28 0048 58CD8B71 		.long	1904987480
  29 004c EE4A1582 		.long	-2112533778
  30 0050 1DA4547B 		.long	2069144605
  31 0054 B5595AC2 		.long	-1034266187
  32 0058 39D5309C 		.long	-1674521287
  33 005c 1360F22A 		.long	720527379
  34 0060 23B0D1C5 		.long	-976113629
  35 0064 F0856028 		.long	677414384
  36 0068 187941CA 		.long	-901678824
  37 006c EF38DBB8 		.long	-1193592593
  38 0070 B0DC798E 		.long	-1904616272
  39 0074 0E183A60 		.long	1614419982
  40 0078 8B0E9E6C 		.long	1822297739
  41 007c 3E8A1EB0 		.long	-1340175810
  42 0080 C17715D7 		.long	-686458943
  43 0084 274B31BD 		.long	-1120842969
  44 0088 DA2FAF78 		.long	2024746970
  45 008c 605C6055 		.long	1432378464
  46 0090 F32555E6 		.long	-430627341
  47 0094 94AB55AA 		.long	-1437226092
  48 0098 62984857 		.long	1464375394
  49 009c 4014E863 		.long	1676153920
  50 00a0 6A39CA55 		.long	1439316330
  51 00a4 B610AB2A 		.long	715854006
  52 00a8 345CCCB4 		.long	-1261675468
  53 00ac CEE84111 		.long	289532110
  54 00b0 AF8654A1 		.long	-1588296017
  55 00b4 93E9727C 		.long	2087905683
  56 00b8 1114EEB3 		.long	-1276242927
  57 00bc 2ABC6F63 		.long	1668267050
  58 00c0 5DC5A92B 		.long	732546397
  59 00c4 F6311874 		.long	1947742710
  60 00c8 163E5CCE 		.long	-832815594
  61 00cc 1E93879B 		.long	-1685613794
  62 00d0 33BAD6AF 		.long	-1344882125
  63 00d4 5CCF246C 		.long	1814351708
  64 00d8 8153327A 		.long	2050118529
  65 00dc 77869528 		.long	680887927
  66 00e0 98488F3B 		.long	999245976
  67 00e4 AFB94B6B 		.long	1800124847
  68 00e8 1BE8BFC4 		.long	-994056165
  69 00ec 93212866 		.long	1713906067
  70 00f0 CC09D861 		.long	1641548236
  71 00f4 91A921FB 		.long	-81679983
  72 00f8 60AC7C48 		.long	1216130144
  73 00fc 3280EC5D 		.long	1575780402
  74 0100 5D5D84EF 		.long	-276538019
  75 0104 B17585E9 		.long	-377129551
  76 0108 022326DC 		.long	-601480446
  77 010c 881B65EB 		.long	-345695352
  78 0110 813E8923 		.long	596196993
  79 0114 C5AC96D3 		.long	-745100091
  80 0118 F36F6D0F 		.long	258830323
  81 011c 3942F483 		.long	-2081144263
  82 0120 82440B2E 		.long	772490370
  83 0124 042084A4 		.long	-1534844924
  84 0128 4AF0C869 		.long	1774776394
  85 012c 5E9B1F9E 		.long	-1642095778
  86 0130 4268C621 		.long	566650946
  87 0134 9A6CE9F6 		.long	-152474470
  88 0138 619C0C67 		.long	1728879713
  89 013c F088D3AB 		.long	-1412200208
  90 0140 D2A0516A 		.long	1783734482
  91 0144 682F54D8 		.long	-665571480
  92 0148 28A70F96 		.long	-1777359064
  93 014c A33351AB 		.long	-1420741725
  94 0150 6C0BEF6E 		.long	1861159788
  95 0154 E43B7A13 		.long	326777828
  96 0158 50F03BBA 		.long	-1170476976
  97 015c 982AFB7E 		.long	2130389656
  98 0160 1D65F1A1 		.long	-1578015459
  99 0164 7601AF39 		.long	967770486
 100 0168 3E59CA66 		.long	1724537150
 101 016c 880E4382 		.long	-2109534584
 102 0170 1986EE8C 		.long	-1930525159
 103 0174 B49F6F45 		.long	1164943284
 104 0178 C3A5847D 		.long	2105845187
 105 017c BE5E8B3B 		.long	998989502
 106 0180 D8756FE0 		.long	-529566248
 107 0184 7320C185 		.long	-2050940813
 108 0188 9F441A40 		.long	1075463327
 109 018c A66AC156 		.long	1455516326
 110 0190 62AAD34E 		.long	1322494562
 111 0194 06773F36 		.long	910128902
 112 0198 72DFFE1B 		.long	469688178
 113 019c 3D029B42 		.long	1117454909
 114 01a0 24D7D037 		.long	936433444
 115 01a4 48120AD0 		.long	-804646328
 116 01a8 D3EA0FDB 		.long	-619713837
 117 01ac 9BC0F149 		.long	1240580251
 118 01b0 C9725307 		.long	122909385
 119 01b4 7B1B9980 		.long	-2137449605
 120 01b8 D879D425 		.long	634681816
 121 01bc F7DEE8F6 		.long	-152510729
 122 01c0 1A50FEE3 		.long	-469872614
 123 01c4 3B4C79B6 		.long	-1233564613
 124 01c8 BDE06C97 		.long	-1754472259
 125 01cc BA06C004 		.long	79693498
 126 01d0 B64FA9C1 		.long	-1045868618
 127 01d4 C4609F40 		.long	1084186820
 128 01d8 C29E5C5E 		.long	1583128258
 129 01dc 63246A19 		.long	426386531
 130 01e0 AF6FFB68 		.long	1761308591
 131 01e4 B5536C3E 		.long	1047286709
 132 01e8 EBB23913 		.long	322548459
 133 01ec 6FEC523B 		.long	995290223
 134 01f0 1F51FC6D 		.long	1845252383
 135 01f4 2C95309B 		.long	-1691314900
 136 01f8 444581CC 		.long	-863943356
 137 01fc 09BD5EAF 		.long	-1352745719
 138 0200 04D0E3BE 		.long	-1092366332
 139 0204 FD4A33DE 		.long	-567063811
 140 0208 07280F66 		.long	1712269319
 141 020c B34B2E19 		.long	422464435
 142 0210 57A8CBC0 		.long	-1060394921
 143 0214 0F74C845 		.long	1170764815
 144 0218 395F0BD2 		.long	-771006663
 145 021c DBFBD3B9 		.long	-1177289765
 146 0220 BDC07955 		.long	1434042557
 147 0224 0A32601A 		.long	442511882
 148 0228 C600A1D6 		.long	-694091578
 149 022c 79722C40 		.long	1076654713
 150 0230 FE259F67 		.long	1738483198
 151 0234 CCA31FFB 		.long	-81812532
 152 0238 F8E9A58E 		.long	-1901729288
 153 023c F82232DB 		.long	-617471240
 154 0240 DF16753C 		.long	1014306527
 155 0244 156B61FD 		.long	-43947243
 156 0248 C81E502F 		.long	793779912
 157 024c AB5205AD 		.long	-1392160085
 158 0250 FAB53D32 		.long	842905082
 159 0254 608723FD 		.long	-48003232
 160 0258 487B3153 		.long	1395751752
 161 025c 82DF003E 		.long	1040244610
 162 0260 BB575C9E 		.long	-1638115397
 163 0264 A08C6FCA 		.long	-898659168
 164 0268 2E56871A 		.long	445077038
 165 026c DB6917DF 		.long	-552113701
 166 0270 F6A842D5 		.long	-717051658
 167 0274 C3FF7E28 		.long	679411651
 168 0278 C63267AC 		.long	-1402522938
 169 027c 73554F8C 		.long	-1940957837
 170 0280 B0275B69 		.long	1767581616
 171 0284 C858CABB 		.long	-1144366904
 172 0288 5DA3FFE1 		.long	-503340195
 173 028c A011F0B8 		.long	-1192226400
 174 0290 983DFA10 		.long	284835224
 175 0294 B88321FD 		.long	-48135240
 176 0298 6CB5FC4A 		.long	1258075500
 177 029c 5BD3D12D 		.long	768725851
 178 02a0 79E4539A 		.long	-1705778055
 179 02a4 6545F8B6 		.long	-1225243291
 180 02a8 BC498ED2 		.long	-762426948
 181 02ac 9097FB4B 		.long	1274779536
 182 02b0 DAF2DDE1 		.long	-505548070
 183 02b4 337ECBA4 		.long	-1530167757
 184 02b8 4113FB62 		.long	1660621633
 185 02bc E8C6E4CE 		.long	-823867672
 186 02c0 DACA20EF 		.long	-283063590
 187 02c4 014C7736 		.long	913787905
 188 02c8 FE9E7ED0 		.long	-797008130
 189 02cc B41FF12B 		.long	737222580
 190 02d0 4DDADB95 		.long	-1780753843
 191 02d4 989190AE 		.long	-1366257256
 192 02d8 718EADEA 		.long	-357724559
 193 02dc A0D5936B 		.long	1804850592
 194 02e0 D0D18ED0 		.long	-795946544
 195 02e4 E025C7AF 		.long	-1345903136
 196 02e8 2F5B3C8E 		.long	-1908647121
 197 02ec B794758E 		.long	-1904896841
 198 02f0 FBE2F68F 		.long	-1879645445
 199 02f4 642B12F2 		.long	-233690268
 200 02f8 12B88888 		.long	-2004305902
 201 02fc 1CF00D90 		.long	-1878134756
 202 0300 A05EAD4F 		.long	1336762016
 203 0304 1CC38F68 		.long	1754252060
 204 0308 91F1CFD1 		.long	-774901359
 205 030c ADC1A8B3 		.long	-1280786003
 206 0310 18222F2F 		.long	791618072
 207 0314 77170EBE 		.long	-1106372745
 208 0318 FE2D75EA 		.long	-361419266
 209 031c A11F028B 		.long	-1962795103
 210 0320 0FCCA0E5 		.long	-442446833
 211 0324 E8746FB5 		.long	-1250986776
 212 0328 D6F3AC18 		.long	413987798
 213 032c 99E289CE 		.long	-829824359
 214 0330 E04FA8B4 		.long	-1264037920
 215 0334 B7E013FD 		.long	-49028937
 216 0338 813BC47C 		.long	2093235073
 217 033c D9A8ADD2 		.long	-760370983
 218 0340 66A25F16 		.long	375366246
 219 0344 05779580 		.long	-2137688315
 220 0348 1473CC93 		.long	-1815317740
 221 034c 77141A21 		.long	555357303
 222 0350 6520ADE6 		.long	-424861595
 223 0354 86FAB577 		.long	2008414854
 224 0358 F54254C7 		.long	-950779147
 225 035c CF359DFB 		.long	-73583153
 226 0360 0CAFCDEB 		.long	-338841844
 227 0364 A0893E7B 		.long	2067696032
 228 0368 D31B41D6 		.long	-700376109
 229 036c 497E1EAE 		.long	-1373733303
 230 0370 2D0E2500 		.long	2428461
 231 0374 5EB37120 		.long	544322398
 232 0378 BB006822 		.long	577241275
 233 037c AFE0B857 		.long	1471733935
 234 0380 9B366424 		.long	610547355
 235 0384 1EB909F0 		.long	-267798242
 236 0388 1D916355 		.long	1432588573
 237 038c AAA6DF59 		.long	1507829418
 238 0390 8943C178 		.long	2025931657
 239 0394 7F535AD9 		.long	-648391809
 240 0398 A25B7D20 		.long	545086370
 241 039c C5B9E502 		.long	48609733
 242 03a0 76032683 		.long	-2094660746
 243 03a4 A9CF9562 		.long	1653985193
 244 03a8 6819C811 		.long	298326376
 245 03ac 414A734E 		.long	1316178497
 246 03b0 CA2D47B3 		.long	-1287180854
 247 03b4 4AA9147B 		.long	2064951626
 248 03b8 5200511B 		.long	458293330
 249 03bc 1529539A 		.long	-1705826027
 250 03c0 3F570FD6 		.long	-703637697
 251 03c4 E4C69BBC 		.long	-1130641692
 252 03c8 76A4602B 		.long	727753846
 253 03cc 0074E681 		.long	-2115603456
 254 03d0 B56FBA08 		.long	146436021
 255 03d4 1FE91B57 		.long	1461446943
 256 03d8 6BEC96F2 		.long	-224990101
 257 03dc 15D90D2A 		.long	705550613
 258 03e0 216563B6 		.long	-1235000031
 259 03e4 B6F9B9E7 		.long	-407242314
 260 03e8 2E0534FF 		.long	-13368018
 261 03ec 645685C5 		.long	-981117340
 262 03f0 5D2DB053 		.long	1404054877
 263 03f4 A18F9FA9 		.long	-1449160799
 264 03f8 9947BA08 		.long	146425753
 265 03fc 6A07856E 		.long	1854211946
 266 0400 E9707A4B 		.long	1266315497
 267 0404 4429B3B5 		.long	-1246549692
 268 0408 2E0975DB 		.long	-613086930
 269 040c 232619C4 		.long	-1004984797
 270 0410 B0A66EAD 		.long	-1385257296
 271 0414 7DDFA749 		.long	1235738493
 272 0418 B860EE9C 		.long	-1662099272
 273 041c 66B2ED8F 		.long	-1880247706
 274 0420 718CAAEC 		.long	-324367247
 275 0424 FF179A69 		.long	1771706367
 276 0428 6C526456 		.long	1449415276
 277 042c E19EB1C2 		.long	-1028546847
 278 0430 A5023619 		.long	422970021
 279 0434 294C0975 		.long	1963543593
 280 0438 401359A0 		.long	-1604775104
 281 043c 3E3A18E4 		.long	-468174274
 282 0440 9A98543F 		.long	1062508698
 283 0444 659D425B 		.long	1531092325
 284 0448 D6E48F6B 		.long	1804592342
 285 044c D63FF799 		.long	-1711849514
 286 0450 079CD2A1 		.long	-1580033017
 287 0454 F530E8EF 		.long	-269995787
 288 0458 E6382D4D 		.long	1294809318
 289 045c C15D25F0 		.long	-265986623
 290 0460 8620DD4C 		.long	1289560198
 291 0464 26EB7084 		.long	-2072974554
 292 0468 C6E98263 		.long	1669523910
 293 046c 5ECC1E02 		.long	35572830
 294 0470 3F6B6809 		.long	157838143
 295 0474 C9EFBA3E 		.long	1052438473
 296 0478 1418973C 		.long	1016535060
 297 047c A1706A6B 		.long	1802137761
 298 0480 84357F68 		.long	1753167236
 299 0484 86E2A052 		.long	1386275462
 300 0488 05539CB7 		.long	-1214491899
 301 048c 370750AA 		.long	-1437595849
 302 0490 1C84073E 		.long	1040679964
 303 0494 5CAEDE7F 		.long	2145300060
 304 0498 EC447D8E 		.long	-1904392980
 305 049c B8F21657 		.long	1461121720
 306 04a0 37DA3AB0 		.long	-1338320329
 307 04a4 0D0C50F0 		.long	-263189491
 308 04a8 041F1CF0 		.long	-266592508
 309 04ac FFB30002 		.long	33600511
 310 04b0 1AF50CAE 		.long	-1374882534
 311 04b4 B274B53C 		.long	1018524850
 312 04b8 587A8325 		.long	629373528
 313 04bc BD2109DC 		.long	-603381315
 314 04c0 F91391D1 		.long	-779021319
 315 04c4 F62FA97C 		.long	2091462646
 316 04c8 73473294 		.long	-1808644237
 317 04cc 0147F522 		.long	586499841
 318 04d0 81E5E53A 		.long	988145025
 319 04d4 DCDAC237 		.long	935516892
 320 04d8 3476B5C8 		.long	-927631820
 321 04dc A7DDF39A 		.long	-1695294041
 322 04e0 466144A9 		.long	-1455136442
 323 04e4 0E03D00F 		.long	265290510
 324 04e8 3EC7C8EC 		.long	-322386114
 325 04ec 411E75A4 		.long	-1535828415
 326 04f0 99CD38E2 		.long	-499593831
 327 04f4 2F0EEA3B 		.long	1005194799
 328 04f8 A1BB8032 		.long	847297441
 329 04fc 31B33E18 		.long	406762289
 330 0500 388B544E 		.long	1314163512
 331 0504 08B96D4F 		.long	1332590856
 332 0508 030D426F 		.long	1866599683
 333 050c BF040AF6 		.long	-167115585
 334 0510 9012B82C 		.long	750260880
 335 0514 797C9724 		.long	613907577
 336 0518 72B07956 		.long	1450815602
 337 051c AF89AFBC 		.long	-1129346641
 338 0520 1F779ADE 		.long	-560302305
 339 0524 100893D9 		.long	-644675568
 340 0528 12AE8BB3 		.long	-1282691566
 341 052c 2E3FCFDC 		.long	-590397650
 342 0530 1F721255 		.long	1427272223
 343 0534 24716B2E 		.long	778793252
 344 0538 E6DD1A50 		.long	1343938022
 345 053c 87CD849F 		.long	-1618686585
 346 0540 1847587A 		.long	2052605720
 347 0544 17DA0874 		.long	1946737175
 348 0548 BC9A9FBC 		.long	-1130390852
 349 054c 8C7D4BE9 		.long	-380928628
 350 0550 3AEC7AEC 		.long	-327488454
 351 0554 FA1D85DB 		.long	-612033030
 352 0558 66430963 		.long	1661551462
 353 055c D2C364C4 		.long	-1000029230
 354 0560 47181CEF 		.long	-283371449
 355 0564 08D91532 		.long	840292616
 356 0568 373B43DD 		.long	-582796489
 357 056c 16BAC224 		.long	616741398
 358 0570 434DA112 		.long	312560963
 359 0574 51C4652A 		.long	711312465
 360 0578 02009450 		.long	1351876610
 361 057c DDE43A13 		.long	322626781
 362 0580 9EF8DF71 		.long	1910503582
 363 0584 554E3110 		.long	271666773
 364 0588 D677AC81 		.long	-2119403562
 365 058c 9B19115F 		.long	1594956187
 366 0590 F1563504 		.long	70604529
 367 0594 6BC7A3D7 		.long	-677132437
 368 0598 3B18113C 		.long	1007753275
 369 059c 09A52459 		.long	1495573769
 370 05a0 EDE68FF2 		.long	-225450259
 371 05a4 FAFBF197 		.long	-1745748998
 372 05a8 2CBFBA9E 		.long	-1631928532
 373 05ac 6E3C151E 		.long	504708206
 374 05b0 7045E386 		.long	-2031925904
 375 05b4 B16FE9EA 		.long	-353800271
 376 05b8 0A5E0E86 		.long	-2045878774
 377 05bc B32A3E5A 		.long	1514023603
 378 05c0 1CE71F77 		.long	1998579484
 379 05c4 FA063D4E 		.long	1312622330
 380 05c8 B9DC6529 		.long	694541497
 381 05cc 0F1DE799 		.long	-1712906993
 382 05d0 D6893E80 		.long	-2143385130
 383 05d4 25C86652 		.long	1382467621
 384 05d8 78C94C2E 		.long	776784248
 385 05dc 6AB3109C 		.long	-1676627094
 386 05e0 BA0E15C6 		.long	-971698502
 387 05e4 78EAE294 		.long	-1797068168
 388 05e8 533CFCA5 		.long	-1510196141
 389 05ec F42D0A1E 		.long	503983604
 390 05f0 A74EF7F2 		.long	-218673497
 391 05f4 3D2B1D36 		.long	907881277
 392 05f8 0F263919 		.long	423175695
 393 05fc 6079C219 		.long	432175456
 394 0600 08A72352 		.long	1378068232
 395 0604 B61213F7 		.long	-149744970
 396 0608 6EFEADEB 		.long	-340918674
 397 060c 661FC3EA 		.long	-356311194
 398 0610 9545BCE3 		.long	-474200683
 399 0614 83C87BA6 		.long	-1501837181
 400 0618 D1377FB1 		.long	-1317062703
 401 061c 28FF8C01 		.long	26017576
 402 0620 EFDD32C3 		.long	-1020076561
 403 0624 A55A6CBE 		.long	-1100195163
 404 0628 85215865 		.long	1700274565
 405 062c 0298AB68 		.long	1756076034
 406 0630 0FA5CEEE 		.long	-288447217
 407 0634 3B952FDB 		.long	-617638597
 408 0638 AD7DEF2A 		.long	720338349
 409 063c 842F6E5B 		.long	1533947780
 410 0640 28B62115 		.long	354530856
 411 0644 70610729 		.long	688349552
 412 0648 7547DDEC 		.long	-321042571
 413 064c 10159F61 		.long	1637815568
 414 0650 30A8CC13 		.long	332179504
 415 0654 96BD61EB 		.long	-345916010
 416 0658 1EFE3403 		.long	53804574
 417 065c CF6303AA 		.long	-1442618417
 418 0660 905C73B5 		.long	-1250730864
 419 0664 39A2704C 		.long	1282449977
 420 0668 0B9E9ED5 		.long	-711025141
 421 066c 14DEAACB 		.long	-877994476
 422 0670 BC86CCEE 		.long	-288586052
 423 0674 A72C6260 		.long	1617046695
 424 0678 AB5CAB9C 		.long	-1666491221
 425 067c 6E84F3B2 		.long	-1292663698
 426 0680 AF1E8B64 		.long	1686838959
 427 0684 CAF0BD19 		.long	431878346
 428 0688 B96923A0 		.long	-1608291911
 429 068c 50BB5A65 		.long	1700445008
 430 0690 325A6840 		.long	1080580658
 431 0694 B3B42A3C 		.long	1009431731
 432 0698 D5E99E31 		.long	832498133
 433 069c F7B821C0 		.long	-1071531785
 434 06a0 190B549B 		.long	-1688990951
 435 06a4 99A05F87 		.long	-2023776103
 436 06a8 7E99F795 		.long	-1778935426
 437 06ac A87D3D62 		.long	1648197032
 438 06b0 9A8837F8 		.long	-130578278
 439 06b4 772DE397 		.long	-1746719369
 440 06b8 5F93ED11 		.long	300782431
 441 06bc 81126816 		.long	375919233
 442 06c0 2988350E 		.long	238389289
 443 06c4 D61FE6C7 		.long	-941219882
 444 06c8 A1DFDE96 		.long	-1763778655
 445 06cc 99BA5878 		.long	2019080857
 446 06d0 A584F557 		.long	1475708069
 447 06d4 6372221B 		.long	455242339
 448 06d8 FFC3839B 		.long	-1685863425
 449 06dc 9646C21A 		.long	448939670
 450 06e0 EB0AB3CD 		.long	-843904277
 451 06e4 54302E53 		.long	1395535956
 452 06e8 E448D98F 		.long	-1881585436
 453 06ec 2831BC6D 		.long	1841049896
 454 06f0 EFF2EB58 		.long	1491858159
 455 06f4 EAFFC634 		.long	885456874
 456 06f8 61ED28FE 		.long	-30872223
 457 06fc 733C7CEE 		.long	-293847949
 458 0700 D9144A5D 		.long	1565136089
 459 0704 E3B764E8 		.long	-396052509
 460 0708 145D1042 		.long	1108368660
 461 070c E0133E20 		.long	540939232
 462 0710 B6E2EE45 		.long	1173283510
 463 0714 EAABAAA3 		.long	-1549095958
 464 0718 154F6CDB 		.long	-613658859
 465 071c D04FCBFA 		.long	-87339056
 466 0720 42F442C7 		.long	-951913406
 467 0724 B5BB6AEF 		.long	-278217803
 468 0728 1D3B4F65 		.long	1699691293
 469 072c 0521CD41 		.long	1103962373
 470 0730 9E791ED8 		.long	-669091426
 471 0734 C74D8586 		.long	-2038084153
 472 0738 6A474BE4 		.long	-464828566
 473 073c 5062813D 		.long	1031889488
 474 0740 F2A162CF 		.long	-815619598
 475 0744 46268D5B 		.long	1535977030
 476 0748 A08388FC 		.long	-58162272
 477 074c A3B6C7C1 		.long	-1043876189
 478 0750 C324157F 		.long	2132092099
 479 0754 9274CB69 		.long	1774941330
 480 0758 0B8A8447 		.long	1199868427
 481 075c 85B29256 		.long	1452454533
 482 0760 00BF5B09 		.long	157007616
 483 0764 9D4819AD 		.long	-1390851939
 484 0768 74B16214 		.long	342012276
 485 076c 000E8223 		.long	595725824
 486 0770 2A8D4258 		.long	1480756522
 487 0774 EAF5550C 		.long	206960106
 488 0778 3EF4AD1D 		.long	497939518
 489 077c 61703F23 		.long	591360097
 490 0780 92F07233 		.long	863170706
 491 0784 417E938D 		.long	-1919713727
 492 0788 F1EC5FD6 		.long	-698356495
 493 078c DB3B226C 		.long	1814182875
 494 0790 5937DE7C 		.long	2094937945
 495 0794 6074EECB 		.long	-873565088
 496 0798 A7F28540 		.long	1082520231
 497 079c 6E3277CE 		.long	-831049106
 498 07a0 848007A6 		.long	-1509457788
 499 07a4 9E50F819 		.long	435703966
 500 07a8 55D8EFE8 		.long	-386934699
 501 07ac 3597D961 		.long	1641649973
 502 07b0 AAA769A9 		.long	-1452693590
 503 07b4 C2060CC5 		.long	-989067582
 504 07b8 FCAB045A 		.long	1510255612
 505 07bc DCCA0B80 		.long	-2146710820
 506 07c0 2E7A449E 		.long	-1639679442
 507 07c4 843445C3 		.long	-1018874748
 508 07c8 0567D5FD 		.long	-36346107
 509 07cc C99E1E0E 		.long	236887753
 510 07d0 D3DB73DB 		.long	-613164077
 511 07d4 CD885510 		.long	274041037
 512 07d8 79DA5F67 		.long	1734335097
 513 07dc 404367E3 		.long	-479771840
 514 07e0 6534C4C5 		.long	-976997275
 515 07e4 D8383E71 		.long	1899903192
 516 07e8 9EF8283D 		.long	1026095262
 517 07ec 20FF6DF1 		.long	-244449504
 518 07f0 E7213E15 		.long	356393447
 519 07f4 4A3DB08F 		.long	-1884275382
 520 07f8 2B9FE3E6 		.long	-421290197
 521 07fc F7AD83DB 		.long	-612127241
 522 0800 685A3DE9 		.long	-381855128
 523 0804 F7408194 		.long	-1803468553
 524 0808 1C264CF6 		.long	-162781668
 525 080c 34296994 		.long	-1805047500
 526 0810 F7201541 		.long	1091903735
 527 0814 F7D40276 		.long	1979897079
 528 0818 2E6BF4BC 		.long	-1124832466
 529 081c 6800A2D4 		.long	-727580568
 530 0820 712408D4 		.long	-737663887
 531 0824 6AF42033 		.long	857797738
 532 0828 B7D4B743 		.long	1136121015
 533 082c AF610050 		.long	1342202287
 534 0830 2EF6391E 		.long	507115054
 535 0834 46452497 		.long	-1759230650
 536 0838 744F2114 		.long	337727348
 537 083c 40888BBF 		.long	-1081374656
 538 0840 1DFC954D 		.long	1301675037
 539 0844 AF91B596 		.long	-1766485585
 540 0848 D3DDF470 		.long	1895095763
 541 084c 452FA066 		.long	1721773893
 542 0850 EC09BCBF 		.long	-1078195732
 543 0854 8597BD03 		.long	62756741
 544 0858 D06DAC7F 		.long	2142006736
 545 085c 0485CB31 		.long	835421444
 546 0860 B327EB96 		.long	-1762973773
 547 0864 4139FD55 		.long	1442658625
 548 0868 E64725DA 		.long	-635090970
 549 086c 9A0ACAAB 		.long	-1412822374
 550 0870 25785028 		.long	676362277
 551 0874 F4290453 		.long	1392781812
 552 0878 DA862C0A 		.long	170690266
 553 087c FB6DB6E9 		.long	-373920261
 554 0880 6214DC68 		.long	1759253602
 555 0884 006948D7 		.long	-683120384
 556 0888 A4C00E68 		.long	1745797284
 557 088c EE8DA127 		.long	664899054
 558 0890 A2FE3F4F 		.long	1329594018
 559 0894 8CAD87E8 		.long	-393761396
 560 0898 06E08CB5 		.long	-1249058810
 561 089c B6D6F47A 		.long	2062866102
 562 08a0 7C1ECEAA 		.long	-1429332356
 563 08a4 EC5F37D3 		.long	-751345684
 564 08a8 99A378CE 		.long	-830954599
 565 08ac 422A6B40 		.long	1080764994
 566 08b0 359EFE20 		.long	553557557
 567 08b4 B985F3D9 		.long	-638351943
 568 08b8 ABD739EE 		.long	-298199125
 569 08bc 8B4E123B 		.long	991055499
 570 08c0 F7FAC91D 		.long	499776247
 571 08c4 56186D4B 		.long	1265440854
 572 08c8 3166A326 		.long	648242737
 573 08cc B297E3EA 		.long	-354183246
 574 08d0 74FA6E3A 		.long	980351604
 575 08d4 32435BDD 		.long	-581221582
 576 08d8 F7E74168 		.long	1749149687
 577 08dc FB2078CA 		.long	-898096901
 578 08e0 4EF50AFB 		.long	-83167922
 579 08e4 97B3FED8 		.long	-654396521
 580 08e8 AC564045 		.long	1161844396
 581 08ec 279548BA 		.long	-1169648345
 582 08f0 3A3A5355 		.long	1431517754
 583 08f4 878D8320 		.long	545492359
 584 08f8 B7A96BFE 		.long	-26498633
 585 08fc 4B9596D0 		.long	-795437749
 586 0900 BC67A855 		.long	1437099964
 587 0904 589A15A1 		.long	-1592419752
 588 0908 6329A9CC 		.long	-861329053
 589 090c 33DBE199 		.long	-1713251533
 590 0910 564A2AA6 		.long	-1507177898
 591 0914 F925313F 		.long	1060185593
 592 0918 1C7EF45E 		.long	1593081372
 593 091c 7C312990 		.long	-1876348548
 594 0920 02E8F8FD 		.long	-34019326
 595 0924 702F2704 		.long	69676912
 596 0928 5C15BB80 		.long	-2135222948
 597 092c E32C2805 		.long	86519011
 598 0930 4815C195 		.long	-1782508216
 599 0934 226DC6E4 		.long	-456757982
 600 0938 3F13C148 		.long	1220612927
 601 093c DC860FC7 		.long	-955283748
 602 0940 EEC9F907 		.long	133810670
 603 0944 0F1F0441 		.long	1090789135
 604 0948 A4794740 		.long	1078426020
 605 094c 176E885D 		.long	1569222167
 606 0950 EB515F32 		.long	845107691
 607 0954 D1C09BD5 		.long	-711212847
 608 0958 8FC1BCF2 		.long	-222510705
 609 095c 64351141 		.long	1091646820
 610 0960 34787B25 		.long	628848692
 611 0964 609C2A60 		.long	1613405280
 612 0968 A3E8F8DF 		.long	-537335645
 613 096c 1B6C631F 		.long	526609435
 614 0970 C2B4120E 		.long	236106946
 615 0974 9E32E102 		.long	48312990
 616 0978 D14F66AF 		.long	-1352249391
 617 097c 1581D1CA 		.long	-892239595
 618 0980 E095236B 		.long	1797494240
 619 0984 E1923E33 		.long	859738849
 620 0988 620B243B 		.long	992217954
 621 098c 22B9BEEE 		.long	-289490654
 622 0990 0EA2B285 		.long	-2051890674
 623 0994 990DBAE6 		.long	-424014439
 624 0998 8C0C72DE 		.long	-562951028
 625 099c 28F7A22D 		.long	765654824
 626 09a0 457812D0 		.long	-804095931
 627 09a4 FD94B795 		.long	-1783130883
 628 09a8 62087D64 		.long	1685915746
 629 09ac F0F5CCE7 		.long	-405998096
 630 09b0 6FA34954 		.long	1414112111
 631 09b4 FA487D87 		.long	-2021832454
 632 09b8 27FD9DC3 		.long	-1013056217
 633 09bc 1E8D3EF3 		.long	-214004450
 634 09c0 4163470A 		.long	172450625
 635 09c4 74FF2E99 		.long	-1724973196
 636 09c8 AB6E6F3A 		.long	980381355
 637 09cc 37FDF8F4 		.long	-185008841
 638 09d0 60DC12A8 		.long	-1475158944
 639 09d4 F8DDEBA1 		.long	-1578377736
 640 09d8 4CE11B99 		.long	-1726226100
 641 09dc 0D6B6EDB 		.long	-613520627
 642 09e0 10557BC6 		.long	-964995824
 643 09e4 372C676D 		.long	1835478071
 644 09e8 3BD46527 		.long	660984891
 645 09ec 04E8D0DC 		.long	-590288892
 646 09f0 C70D29F1 		.long	-248967737
 647 09f4 A3FF00CC 		.long	-872349789
 648 09f8 920F39B5 		.long	-1254551662
 649 09fc 0BED0F69 		.long	1762651403
 650 0a00 FB9F7B66 		.long	1719377915
 651 0a04 9C7DDBCE 		.long	-824476260
 652 0a08 0BCF91A0 		.long	-1601057013
 653 0a0c A35E15D9 		.long	-652910941
 654 0a10 882F13BB 		.long	-1156370552
 655 0a14 24AD5B51 		.long	1364962596
 656 0a18 BF79947B 		.long	2073328063
 657 0a1c EBD63B76 		.long	1983633131
 658 0a20 B32E3937 		.long	926494387
 659 0a24 795911CC 		.long	-871278215
 660 0a28 97E22680 		.long	-2144935273
 661 0a2c 2D312EF4 		.long	-198299347
 662 0a30 A7AD4268 		.long	1749200295
 663 0a34 3B2B6AC6 		.long	-966120645
 664 0a38 CC4C7512 		.long	309677260
 665 0a3c 1CF12E78 		.long	2016342300
 666 0a40 3742126A 		.long	1779581495
 667 0a44 E75192B7 		.long	-1215147545
 668 0a48 E6BBA106 		.long	111262694
 669 0a4c 5063FB4B 		.long	1274766160
 670 0a50 18106B1A 		.long	443224088
 671 0a54 FAEDCA11 		.long	298511866
 672 0a58 D8BD253D 		.long	1025883608
 673 0a5c C9C3E1E2 		.long	-488520759
 674 0a60 59164244 		.long	1145181785
 675 0a64 8613120A 		.long	168956806
 676 0a68 6EEC0CD9 		.long	-653464466
 677 0a6c 2AEAABD5 		.long	-710153686
 678 0a70 4E67AF64 		.long	1689216846
 679 0a74 5FA886DA 		.long	-628709281
 680 0a78 88E9BFBE 		.long	-1094719096
 681 0a7c FEC3E464 		.long	1692713982
 682 0a80 5780BC9D 		.long	-1648590761
 683 0a84 86C0F7F0 		.long	-252198778
 684 0a88 F87B7860 		.long	1618508792
 685 0a8c 4D600360 		.long	1610833997
 686 0a90 4683FDD1 		.long	-771914938
 687 0a94 B01F38F6 		.long	-164094032
 688 0a98 04AE4577 		.long	2001055236
 689 0a9c CCFC36D7 		.long	-684262196
 690 0aa0 336B4283 		.long	-2092799181
 691 0aa4 71AB1EF0 		.long	-266425487
 692 0aa8 874180B0 		.long	-1333771897
 693 0aac 5F5E003C 		.long	1006657119
 694 0ab0 BE57A077 		.long	2006996926
 695 0ab4 24AEE8BD 		.long	-1108824540
 696 0ab8 99424655 		.long	1430667929
 697 0abc 612E58BF 		.long	-1084739999
 698 0ac0 8FF4584E 		.long	1314452623
 699 0ac4 A2FDDDF2 		.long	-220332638
 700 0ac8 38EF74F4 		.long	-193663176
 701 0acc C2BD8987 		.long	-2021016126
 702 0ad0 C3F96653 		.long	1399257539
 703 0ad4 748EB3C8 		.long	-927756684
 704 0ad8 55F275B4 		.long	-1267338667
 705 0adc B9D9FC46 		.long	1190975929
 706 0ae0 6126EB7A 		.long	2062231137
 707 0ae4 84DF1D8B 		.long	-1960976508
 708 0ae8 790E6A84 		.long	-2073424263
 709 0aec E2955F91 		.long	-1856006686
 710 0af0 8E596E46 		.long	1181637006
 711 0af4 7057B420 		.long	548689776
 712 0af8 9155D58C 		.long	-1932175983
 713 0afc 4CDE02C9 		.long	-922558900
 714 0b00 E1AC0BB9 		.long	-1190417183
 715 0b04 D00582BB 		.long	-1149106736
 716 0b08 4862A811 		.long	296247880
 717 0b0c 9EA97475 		.long	1970579870
 718 0b10 B6197FB7 		.long	-1216407114
 719 0b14 09DCA9E0 		.long	-525738999
 720 0b18 A1092D66 		.long	1714227617
 721 0b1c 334632C4 		.long	-1003338189
 722 0b20 021F5AE8 		.long	-396747006
 723 0b24 8CBEF009 		.long	166772364
 724 0b28 25A0994A 		.long	1251581989
 725 0b2c 10FE6E1D 		.long	493813264
 726 0b30 1D3DB91A 		.long	448347421
 727 0b34 DFA4A50B 		.long	195405023
 728 0b38 0FF286A1 		.long	-1584991729
 729 0b3c 69F16828 		.long	677966185
 730 0b40 83DAB7DC 		.long	-591930749
 731 0b44 FE063957 		.long	1463355134
 732 0b48 9BCEE2A1 		.long	-1578971493
 733 0b4c 527FCD4F 		.long	1338867538
 734 0b50 015E1150 		.long	1343315457
 735 0b54 FA8306A7 		.long	-1492745222
 736 0b58 C4B502A0 		.long	-1610435132
 737 0b5c 27D0E60D 		.long	233230375
 738 0b60 278CF89A 		.long	-1694987225
 739 0b64 41863F77 		.long	2000651841
 740 0b68 064C60C3 		.long	-1017099258
 741 0b6c B506A861 		.long	1638401717
 742 0b70 287A17F0 		.long	-266896856
 743 0b74 E086F5C0 		.long	-1057650976
 744 0b78 AA586000 		.long	6314154
 745 0b7c 627DDC30 		.long	819756386
 746 0b80 D79EE611 		.long	300326615
 747 0b84 63EA3823 		.long	590932579
 748 0b88 94DDC253 		.long	1405279636
 749 0b8c 3416C2C2 		.long	-1027467724
 750 0b90 56EECBBB 		.long	-1144263082
 751 0b94 DEB6BC90 		.long	-1866680610
 752 0b98 A17DFCEB 		.long	-335774303
 753 0b9c 761D59CE 		.long	-833020554
 754 0ba0 09E4056F 		.long	1862657033
 755 0ba4 88017C4B 		.long	1266418056
 756 0ba8 3D0A7239 		.long	963775037
 757 0bac 247C927C 		.long	2089974820
 758 0bb0 5F72E386 		.long	-2031914401
 759 0bb4 B99D4D72 		.long	1917689273
 760 0bb8 B45BC11A 		.long	448879540
 761 0bbc FCB89ED3 		.long	-744572676
 762 0bc0 785554ED 		.long	-313240200
 763 0bc4 B5A5FC08 		.long	150775221
 764 0bc8 D37C3DD8 		.long	-667058989
 765 0bcc C40FAD4D 		.long	1303187396
 766 0bd0 5EEF501E 		.long	508620638
 767 0bd4 F8E661B1 		.long	-1318983944
 768 0bd8 D91485A2 		.long	-1568336679
 769 0bdc 3C13516C 		.long	1817252668
 770 0be0 E7C7D56F 		.long	1876281319
 771 0be4 C44EE156 		.long	1457606340
 772 0be8 CEBF2A36 		.long	908771278
 773 0bec 37C8C6DD 		.long	-574175177
 774 0bf0 34329AD7 		.long	-677760460
 775 0bf4 12826392 		.long	-1838972398
 776 0bf8 8EFA0E67 		.long	1729034894
 777 0bfc E0006040 		.long	1080033504
 778 0c00 37CE393A 		.long	976866871
 779 0c04 CFF5FAD3 		.long	-738527793
 780 0c08 3777C2AB 		.long	-1413318857
 781 0c0c 1B2DC55A 		.long	1522871579
 782 0c10 9E67B05C 		.long	1555064734
 783 0c14 4237A34F 		.long	1336096578
 784 0c18 402782D3 		.long	-746444992
 785 0c1c BE9BBC99 		.long	-1715692610
 786 0c20 9D8E11D5 		.long	-720269667
 787 0c24 15730FBF 		.long	-1089506539
 788 0c28 7E1C2DD6 		.long	-701686658
 789 0c2c 7BC400C7 		.long	-956251013
 790 0c30 6B1B8CB7 		.long	-1215554709
 791 0c34 4590A121 		.long	564236357
 792 0c38 BEB16EB2 		.long	-1301368386
 793 0c3c B46E366A 		.long	1781952180
 794 0c40 2FAB4857 		.long	1464380207
 795 0c44 796E94BC 		.long	-1131123079
 796 0c48 D276A3C6 		.long	-962365742
 797 0c4c C8C24965 		.long	1699332808
 798 0c50 EEF80F53 		.long	1393555694
 799 0c54 7DDE8D46 		.long	1183702653
 800 0c58 1D0A73D5 		.long	-713881059
 801 0c5c C64DD04C 		.long	1288719814
 802 0c60 DBBB3929 		.long	691649499
 803 0c64 5046BAA9 		.long	-1447410096
 804 0c68 E82695AC 		.long	-1399511320
 805 0c6c 04E35EBE 		.long	-1101077756
 806 0c70 F0D5FAA1 		.long	-1577396752
 807 0c74 9A512D6A 		.long	1781354906
 808 0c78 E28CEF63 		.long	1676643554
 809 0c7c 22EE869A 		.long	-1702433246
 810 0c80 B8C289C0 		.long	-1064713544
 811 0c84 F62E2443 		.long	1126444790
 812 0c88 AA031EA5 		.long	-1524759638
 813 0c8c A4D0F29C 		.long	-1661808476
 814 0c90 BA61C083 		.long	-2084544070
 815 0c94 4D6AE99B 		.long	-1679201715
 816 0c98 5015E58F 		.long	-1880812208
 817 0c9c D65B64BA 		.long	-1167828010
 818 0ca0 F9A22628 		.long	673620729
 819 0ca4 E13A3AA7 		.long	-1489356063
 820 0ca8 8695A94B 		.long	1269405062
 821 0cac E96255EF 		.long	-279616791
 822 0cb0 D3EF2FC7 		.long	-953159725
 823 0cb4 DAF752F7 		.long	-145557542
 824 0cb8 696F043F 		.long	1057255273
 825 0cbc 590AFA77 		.long	2012875353
 826 0cc0 15A9E480 		.long	-2132498155
 827 0cc4 0186B087 		.long	-2018474495
 828 0cc8 ADE6099B 		.long	-1693849939
 829 0ccc 93E53E3B 		.long	993977747
 830 0cd0 5AFD90E9 		.long	-376373926
 831 0cd4 97D7349E 		.long	-1640704105
 832 0cd8 D9B7F02C 		.long	753973209
 833 0cdc 518B2B02 		.long	36408145
 834 0ce0 3AACD596 		.long	-1764381638
 835 0ce4 7DA67D01 		.long	25011837
 836 0ce8 D63ECFD1 		.long	-774947114
 837 0cec 282D7D7C 		.long	2088578344
 838 0cf0 CF259F1F 		.long	530523599
 839 0cf4 9BB8F2AD 		.long	-1376601957
 840 0cf8 72B4D65A 		.long	1524020338
 841 0cfc 4CF5885A 		.long	1518925132
 842 0d00 71AC29E0 		.long	-534139791
 843 0d04 E6A519E0 		.long	-535190042
 844 0d08 FDACB047 		.long	1202760957
 845 0d0c 9BFA93ED 		.long	-309069157
 846 0d10 8DC4D3E8 		.long	-388774771
 847 0d14 CC573B28 		.long	674977740
 848 0d18 2966D5F8 		.long	-120232407
 849 0d1c 282E1379 		.long	2031300136
 850 0d20 91015F78 		.long	2019492241
 851 0d24 556075ED 		.long	-311074731
 852 0d28 440E96F7 		.long	-141160892
 853 0d2c 8C5ED3E3 		.long	-472686964
 854 0d30 D46D0515 		.long	352677332
 855 0d34 BA6DF488 		.long	-1997247046
 856 0d38 2561A103 		.long	60907813
 857 0d3c BDF06405 		.long	90501309
 858 0d40 159EEBC3 		.long	-1007968747
 859 0d44 A257903C 		.long	1016092578
 860 0d48 EC1A2797 		.long	-1759044884
 861 0d4c 2A073AA9 		.long	-1455814870
 862 0d50 9B6D3F1B 		.long	457141659
 863 0d54 F521631E 		.long	509813237
 864 0d58 FB669CF5 		.long	-174299397
 865 0d5c 19F3DC26 		.long	652014361
 866 0d60 28D93375 		.long	1966332200
 867 0d64 F5FD55B1 		.long	-1319764491
 868 0d68 82345603 		.long	55981186
 869 0d6c BB3CBA8A 		.long	-1967506245
 870 0d70 11775128 		.long	676427537
 871 0d74 F8D90AC2 		.long	-1039476232
 872 0d78 6751CCAB 		.long	-1412673177
 873 0d7c 5F92ADCC 		.long	-861040033
 874 0d80 5117E84D 		.long	1307055953
 875 0d84 8EDC3038 		.long	942726286
 876 0d88 62589D37 		.long	933058658
 877 0d8c 91F92093 		.long	-1826555503
 878 0d90 C2907AEA 		.long	-361066302
 879 0d94 CE7B3EFB 		.long	-79791154
 880 0d98 64CE2151 		.long	1361170020
 881 0d9c 32BE4F77 		.long	2001714738
 882 0da0 7EE3B6A8 		.long	-1464409218
 883 0da4 463D29C3 		.long	-1020707514
 884 0da8 6953DE48 		.long	1222529897
 885 0dac 80E61364 		.long	1679025792
 886 0db0 1008AEA2 		.long	-1565652976
 887 0db4 24B26DDD 		.long	-580013532
 888 0db8 FD2D8569 		.long	1770335741
 889 0dbc 66210709 		.long	151462246
 890 0dc0 0A469AB3 		.long	-1281735158
 891 0dc4 DDC04564 		.long	1682292957
 892 0dc8 CFDE6C58 		.long	1483529935
 893 0dcc AEC8201C 		.long	471910574
 894 0dd0 DDF7BE5B 		.long	1539241949
 895 0dd4 408D581B 		.long	458788160
 896 0dd8 7F01D2CC 		.long	-858652289
 897 0ddc BBE3B46B 		.long	1807016891
 898 0de0 7E6AA2DD 		.long	-576558466
 899 0de4 45FF593A 		.long	978976581
 900 0de8 440A353E 		.long	1043663428
 901 0dec D5CDB4BC 		.long	-1129001515
 902 0df0 A8CEEA72 		.long	1927990952
 903 0df4 BB8464FA 		.long	-94075717
 904 0df8 AE12668D 		.long	-1922690386
 905 0dfc 476F3CBF 		.long	-1086558393
 906 0e00 63E49BD2 		.long	-761535389
 907 0e04 9E5D2F54 		.long	1412390302
 908 0e08 1B77C2AE 		.long	-1362987237
 909 0e0c 70634EF6 		.long	-162634896
 910 0e10 8D0D0E74 		.long	1947078029
 911 0e14 57135BE7 		.long	-413461673
 912 0e18 711672F8 		.long	-126740879
 913 0e1c 5D7D53AF 		.long	-1353482915
 914 0e20 08CB4040 		.long	1077988104
 915 0e24 CCE2B44E 		.long	1320477388
 916 0e28 6A46D234 		.long	886195818
 917 0e2c 84AF1501 		.long	18198404
 918 0e30 2804B0E1 		.long	-508558296
 919 0e34 1D3A9895 		.long	-1785185763
 920 0e38 B49FB806 		.long	112762804
 921 0e3c 48A06ECE 		.long	-831610808
 922 0e40 823B3F6F 		.long	1866414978
 923 0e44 82AB2035 		.long	891333506
 924 0e48 4B1D1A01 		.long	18488651
 925 0e4c F8277227 		.long	661792760
 926 0e50 B1601561 		.long	1628790961
 927 0e54 DC3F93E7 		.long	-409780260
 928 0e58 2B793ABB 		.long	-1153795797
 929 0e5c BD254534 		.long	876946877
 930 0e60 E13988A0 		.long	-1601685023
 931 0e64 4B79CE51 		.long	1372485963
 932 0e68 B7C9322F 		.long	791857591
 933 0e6c C9BA1FA0 		.long	-1608533303
 934 0e70 7EC81CE0 		.long	-534984578
 935 0e74 F6D1C7BC 		.long	-1127755274
 936 0e78 C31101CF 		.long	-822013501
 937 0e7c C7AAE8A1 		.long	-1578587449
 938 0e80 4987901A 		.long	445679433
 939 0e84 9ABD4FD4 		.long	-732971622
 940 0e88 CBDEDAD0 		.long	-790962485
 941 0e8c 38DA0AD5 		.long	-720709064
 942 0e90 2AC33903 		.long	54117162
 943 0e94 673691C6 		.long	-963561881
 944 0e98 7C31F98D 		.long	-1913048708
 945 0e9c 4F2BB1E0 		.long	-525259953
 946 0ea0 B7599EF7 		.long	-140617289
 947 0ea4 3ABBF543 		.long	1140177722
 948 0ea8 FF19D5F2 		.long	-220915201
 949 0eac 9C45D927 		.long	668550556
 950 0eb0 2C2297BF 		.long	-1080614356
 951 0eb4 2AFCE615 		.long	367459370
 952 0eb8 71FC910F 		.long	261225585
 953 0ebc 2515949B 		.long	-1684794075
 954 0ec0 6193E5FA 		.long	-85617823
 955 0ec4 EB9CB6CE 		.long	-826893077
 956 0ec8 5964A8C2 		.long	-1029151655
 957 0ecc D1A8BA12 		.long	314222801
 958 0ed0 5E07C1B6 		.long	-1228863650
 959 0ed4 0C6A05E3 		.long	-486184436
 960 0ed8 6550D210 		.long	282218597
 961 0edc 42A403CB 		.long	-888953790
 962 0ee0 0E6EECE0 		.long	-521376242
 963 0ee4 3BDB9816 		.long	379116347
 964 0ee8 BEA0984C 		.long	1285071038
 965 0eec 64E97832 		.long	846784868
 966 0ef0 32951F9F 		.long	-1625320142
 967 0ef4 DF92D3E0 		.long	-523005217
 968 0ef8 2B34A0D3 		.long	-744475605
 969 0efc 1EF27189 		.long	-1989021154
 970 0f00 41740A1B 		.long	453669953
 971 0f04 8C34A34B 		.long	1268987020
 972 0f08 2071BEC5 		.long	-977374944
 973 0f0c D83276C3 		.long	-1015663912
 974 0f10 8D9F35DF 		.long	-550133875
 975 0f14 2E2F999B 		.long	-1684459730
 976 0f18 476F0BE6 		.long	-435458233
 977 0f1c 1DF1E30F 		.long	266596637
 978 0f20 54DA4CE5 		.long	-447948204
 979 0f24 91D8DA1E 		.long	517658769
 980 0f28 CF7962CE 		.long	-832407089
 981 0f2c 6F7E3ECD 		.long	-851542417
 982 0f30 66B11816 		.long	370717030
 983 0f34 051D2CFD 		.long	-47440635
 984 0f38 C5D28F84 		.long	-2070949179
 985 0f3c 9922FBF6 		.long	-151313767
 986 0f40 57F323F5 		.long	-182193321
 987 0f44 237632A6 		.long	-1506642397
 988 0f48 3135A893 		.long	-1817692879
 989 0f4c 02CDCC56 		.long	1456262402
 990 0f50 6281F0AC 		.long	-1393524382
 991 0f54 B5EB755A 		.long	1517677493
 992 0f58 9736166E 		.long	1846949527
 993 0f5c CC73D288 		.long	-1999473716
 994 0f60 926296DE 		.long	-560569710
 995 0f64 D049B981 		.long	-2118563376
 996 0f68 1B90504C 		.long	1280348187
 997 0f6c 1456C671 		.long	1908823572
 998 0f70 BDC7C6E6 		.long	-423180355
 999 0f74 0A147A32 		.long	846861322
 1000 0f78 06D0E145 		.long	1172426758
 1001 0f7c 9A7BF2C3 		.long	-1007518822
 1002 0f80 FD53AAC9 		.long	-911584259
 1003 0f84 000FA862 		.long	1655181056
 1004 0f88 E2BF25BB 		.long	-1155153950
 1005 0f8c F6D2BD35 		.long	901632758
 1006 0f90 05691271 		.long	1897031941
 1007 0f94 220204B2 		.long	-1308360158
 1008 0f98 7CCFCBB6 		.long	-1228157060
 1009 0f9c 2B9C76CD 		.long	-847864789
 1010 0fa0 C03E1153 		.long	1393639104
 1011 0fa4 D3E34016 		.long	373351379
 1012 0fa8 60BDAB38 		.long	950779232
 1013 0fac F0AD4725 		.long	625454576
 1014 0fb0 9C2038BA 		.long	-1170726756
 1015 0fb4 76CE46F7 		.long	-146354570
 1016 0fb8 C5A1AF77 		.long	2007998917
 1017 0fbc 60607520 		.long	544563296
 1018 0fc0 4EFECB85 		.long	-2050228658
 1019 0fc4 D88DE88A 		.long	-1964470824
 1020 0fc8 B0F9AA7A 		.long	2058025392
 1021 0fcc 7EAAF94C 		.long	1291430526
 1022 0fd0 5CC24819 		.long	424198748
 1023 0fd4 8C8AFB02 		.long	50039436
 1024 0fd8 E46AC301 		.long	29584100
 1025 0fdc F9E1EBD6 		.long	-689184263
 1026 0fe0 69F8D490 		.long	-1865090967
 1027 0fe4 A0DE5CA6 		.long	-1503863136
 1028 0fe8 2D25093F 		.long	1057563949
 1029 0fec 9FE608C2 		.long	-1039604065
 1030 0ff0 32614EB7 		.long	-1219600078
 1031 0ff4 5BE277CE 		.long	-831004069
 1032 0ff8 E3DF8F57 		.long	1469046755
 1033 0ffc E672C33A 		.long	985887462
 1034 1000 886A3F24 		.long	608135816
 1035 1004 D308A385 		.long	-2052912941
 1036 1008 2E8A1913 		.long	320440878
 1037 100c 44737003 		.long	57701188
 1038 1010 223809A4 		.long	-1542899678
 1039 1014 D0319F29 		.long	698298832
 1040 1018 98FA2E08 		.long	137296536
 1041 101c 896C4EEC 		.long	-330404727
 1042 1020 E6212845 		.long	1160258022
 1043 1024 7713D038 		.long	953160567
 1044 1028 CF6654BE 		.long	-1101764913
 1045 102c 6C0CE934 		.long	887688300
 1046 1030 B729ACC0 		.long	-1062458953
 1047 1034 DD507CC9 		.long	-914599715
 1048 1038 B5D5843F 		.long	1065670069
 1049 103c 170947B5 		.long	-1253635817
 1050 1040 D9D51692 		.long	-1843997223
 1051 1044 1BFB7989 		.long	-1988494565
 1052              		.text
 1053              		.globl	_nettle_blowfish_encround
 1055              	_nettle_blowfish_encround:
 1056              	.LFB0:
 1057              		.file 1 "blowfish.c"
   1:blowfish.c    **** /* blowfish.c
   2:blowfish.c    **** 
   3:blowfish.c    ****    The blowfish block cipher.
   4:blowfish.c    **** 
   5:blowfish.c    ****    Copyright (C) 2014 Niels Möller
   6:blowfish.c    ****    Copyright (C) 2010  Simon Josefsson
   7:blowfish.c    ****    Copyright (C) 1998, 2001, 2002, 2003 Free Software Foundation, Inc.
   8:blowfish.c    **** 
   9:blowfish.c    ****    This file is part of GNU Nettle.
  10:blowfish.c    **** 
  11:blowfish.c    ****    GNU Nettle is free software: you can redistribute it and/or
  12:blowfish.c    ****    modify it under the terms of either:
  13:blowfish.c    **** 
  14:blowfish.c    ****      * the GNU Lesser General Public License as published by the Free
  15:blowfish.c    ****        Software Foundation; either version 3 of the License, or (at your
  16:blowfish.c    ****        option) any later version.
  17:blowfish.c    **** 
  18:blowfish.c    ****    or
  19:blowfish.c    **** 
  20:blowfish.c    ****      * the GNU General Public License as published by the Free
  21:blowfish.c    ****        Software Foundation; either version 2 of the License, or (at your
  22:blowfish.c    ****        option) any later version.
  23:blowfish.c    **** 
  24:blowfish.c    ****    or both in parallel, as here.
  25:blowfish.c    **** 
  26:blowfish.c    ****    GNU Nettle is distributed in the hope that it will be useful,
  27:blowfish.c    ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  28:blowfish.c    ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  29:blowfish.c    ****    General Public License for more details.
  30:blowfish.c    **** 
  31:blowfish.c    ****    You should have received copies of the GNU General Public License and
  32:blowfish.c    ****    the GNU Lesser General Public License along with this program.  If
  33:blowfish.c    ****    not, see http://www.gnu.org/licenses/.
  34:blowfish.c    **** */
  35:blowfish.c    **** 
  36:blowfish.c    **** /* For a description of the algorithm, see:
  37:blowfish.c    ****  *   Bruce Schneier: Applied Cryptography. John Wiley & Sons, 1996.
  38:blowfish.c    ****  *   ISBN 0-471-11709-9. Pages 336 ff.
  39:blowfish.c    ****  */
  40:blowfish.c    **** 
  41:blowfish.c    **** /* This file is derived from cipher/blowfish.c in Libgcrypt v1.4.6.
  42:blowfish.c    ****    The adaption to Nettle was made by Simon Josefsson on 2010-11-23.
  43:blowfish.c    ****    Changes include removing the selftest, renaming u32/byte types to
  44:blowfish.c    ****    uint32_t/uint8_t, renaming BLOWFISH_ROUNDS to _BLOWFISH_ROUNDS
  45:blowfish.c    ****    (from Nettle's blowfish.h), dropping the libgcrypt wrapper
  46:blowfish.c    ****    functions, fixing #include's, remove support for non-16 rounds
  47:blowfish.c    ****    (there are no test vectors), adding FOR_BLOCK iterations, and
  48:blowfish.c    ****    running indent on the code. */
  49:blowfish.c    **** 
  50:blowfish.c    **** #if HAVE_CONFIG_H
  51:blowfish.c    **** #include "config.h"
  52:blowfish.c    **** #endif
  53:blowfish.c    **** 
  54:blowfish.c    **** #include <assert.h>
  55:blowfish.c    **** 
  56:blowfish.c    **** #include "blowfish.h"
  57:blowfish.c    **** #include "blowfish-internal.h"
  58:blowfish.c    **** 
  59:blowfish.c    **** #include "macros.h"
  60:blowfish.c    **** 
  61:blowfish.c    **** /* precomputed S boxes */
  62:blowfish.c    **** const struct blowfish_ctx
  63:blowfish.c    **** _nettle_blowfish_initial_ctx = {
  64:blowfish.c    ****   {
  65:blowfish.c    ****     { /* ks0 */
  66:blowfish.c    ****       0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7, 0xB8E1AFED, 0x6A267E96,
  67:blowfish.c    ****       0xBA7C9045, 0xF12C7F99, 0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,
  68:blowfish.c    ****       0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E, 0x0D95748F, 0x728EB658,
  69:blowfish.c    ****       0x718BCD58, 0x82154AEE, 0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,
  70:blowfish.c    ****       0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF, 0x8E79DCB0, 0x603A180E,
  71:blowfish.c    ****       0x6C9E0E8B, 0xB01E8A3E, 0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,
  72:blowfish.c    ****       0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440, 0x55CA396A, 0x2AAB10B6,
  73:blowfish.c    ****       0xB4CC5C34, 0x1141E8CE, 0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,
  74:blowfish.c    ****       0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E, 0xAFD6BA33, 0x6C24CF5C,
  75:blowfish.c    ****       0x7A325381, 0x28958677, 0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,
  76:blowfish.c    ****       0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032, 0xEF845D5D, 0xE98575B1,
  77:blowfish.c    ****       0xDC262302, 0xEB651B88, 0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,
  78:blowfish.c    ****       0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E, 0x21C66842, 0xF6E96C9A,
  79:blowfish.c    ****       0x670C9C61, 0xABD388F0, 0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,
  80:blowfish.c    ****       0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98, 0xA1F1651D, 0x39AF0176,
  81:blowfish.c    ****       0x66CA593E, 0x82430E88, 0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,
  82:blowfish.c    ****       0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6, 0x4ED3AA62, 0x363F7706,
  83:blowfish.c    ****       0x1BFEDF72, 0x429B023D, 0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,
  84:blowfish.c    ****       0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7, 0xE3FE501A, 0xB6794C3B,
  85:blowfish.c    ****       0x976CE0BD, 0x04C006BA, 0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,
  86:blowfish.c    ****       0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F, 0x6DFC511F, 0x9B30952C,
  87:blowfish.c    ****       0xCC814544, 0xAF5EBD09, 0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,
  88:blowfish.c    ****       0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB, 0x5579C0BD, 0x1A60320A,
  89:blowfish.c    ****       0xD6A100C6, 0x402C7279, 0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,
  90:blowfish.c    ****       0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB, 0x323DB5FA, 0xFD238760,
  91:blowfish.c    ****       0x53317B48, 0x3E00DF82, 0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,
  92:blowfish.c    ****       0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573, 0x695B27B0, 0xBBCA58C8,
  93:blowfish.c    ****       0xE1FFA35D, 0xB8F011A0, 0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,
  94:blowfish.c    ****       0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790, 0xE1DDF2DA, 0xA4CB7E33,
  95:blowfish.c    ****       0x62FB1341, 0xCEE4C6E8, 0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,
  96:blowfish.c    ****       0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0, 0xD08ED1D0, 0xAFC725E0,
  97:blowfish.c    ****       0x8E3C5B2F, 0x8E7594B7, 0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,
  98:blowfish.c    ****       0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD, 0x2F2F2218, 0xBE0E1777,
  99:blowfish.c    ****       0xEA752DFE, 0x8B021FA1, 0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,
 100:blowfish.c    ****       0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9, 0x165FA266, 0x80957705,
 101:blowfish.c    ****       0x93CC7314, 0x211A1477, 0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,
 102:blowfish.c    ****       0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49, 0x00250E2D, 0x2071B35E,
 103:blowfish.c    ****       0x226800BB, 0x57B8E0AF, 0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,
 104:blowfish.c    ****       0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5, 0x83260376, 0x6295CFA9,
 105:blowfish.c    ****       0x11C81968, 0x4E734A41, 0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,
 106:blowfish.c    ****       0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400, 0x08BA6FB5, 0x571BE91F,
 107:blowfish.c    ****       0xF296EC6B, 0x2A0DD915, 0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,
 108:blowfish.c    ****       0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A
 109:blowfish.c    ****     },
 110:blowfish.c    ****     { /* ks1 */
 111:blowfish.c    ****       0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623, 0xAD6EA6B0, 0x49A7DF7D,
 112:blowfish.c    ****       0x9CEE60B8, 0x8FEDB266, 0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,
 113:blowfish.c    ****       0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E, 0x3F54989A, 0x5B429D65,
 114:blowfish.c    ****       0x6B8FE4D6, 0x99F73FD6, 0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,
 115:blowfish.c    ****       0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E, 0x09686B3F, 0x3EBAEFC9,
 116:blowfish.c    ****       0x3C971814, 0x6B6A70A1, 0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,
 117:blowfish.c    ****       0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8, 0xB03ADA37, 0xF0500C0D,
 118:blowfish.c    ****       0xF01C1F04, 0x0200B3FF, 0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,
 119:blowfish.c    ****       0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701, 0x3AE5E581, 0x37C2DADC,
 120:blowfish.c    ****       0xC8B57634, 0x9AF3DDA7, 0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,
 121:blowfish.c    ****       0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331, 0x4E548B38, 0x4F6DB908,
 122:blowfish.c    ****       0x6F420D03, 0xF60A04BF, 0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,
 123:blowfish.c    ****       0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E, 0x5512721F, 0x2E6B7124,
 124:blowfish.c    ****       0x501ADDE6, 0x9F84CD87, 0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,
 125:blowfish.c    ****       0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2, 0xEF1C1847, 0x3215D908,
 126:blowfish.c    ****       0xDD433B37, 0x24C2BA16, 0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,
 127:blowfish.c    ****       0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B, 0x043556F1, 0xD7A3C76B,
 128:blowfish.c    ****       0x3C11183B, 0x5924A509, 0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,
 129:blowfish.c    ****       0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3, 0x771FE71C, 0x4E3D06FA,
 130:blowfish.c    ****       0x2965DCB9, 0x99E71D0F, 0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,
 131:blowfish.c    ****       0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4, 0xF2F74EA7, 0x361D2B3D,
 132:blowfish.c    ****       0x1939260F, 0x19C27960, 0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,
 133:blowfish.c    ****       0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28, 0xC332DDEF, 0xBE6C5AA5,
 134:blowfish.c    ****       0x65582185, 0x68AB9802, 0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,
 135:blowfish.c    ****       0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510, 0x13CCA830, 0xEB61BD96,
 136:blowfish.c    ****       0x0334FE1E, 0xAA0363CF, 0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,
 137:blowfish.c    ****       0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E, 0x648B1EAF, 0x19BDF0CA,
 138:blowfish.c    ****       0xA02369B9, 0x655ABB50, 0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,
 139:blowfish.c    ****       0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8, 0xF837889A, 0x97E32D77,
 140:blowfish.c    ****       0x11ED935F, 0x16681281, 0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,
 141:blowfish.c    ****       0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696, 0xCDB30AEB, 0x532E3054,
 142:blowfish.c    ****       0x8FD948E4, 0x6DBC3128, 0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,
 143:blowfish.c    ****       0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0, 0x45EEE2B6, 0xA3AAABEA,
 144:blowfish.c    ****       0xDB6C4F15, 0xFACB4FD0, 0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,
 145:blowfish.c    ****       0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250, 0xCF62A1F2, 0x5B8D2646,
 146:blowfish.c    ****       0xFC8883A0, 0xC1C7B6A3, 0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,
 147:blowfish.c    ****       0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00, 0x58428D2A, 0x0C55F5EA,
 148:blowfish.c    ****       0x1DADF43E, 0x233F7061, 0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,
 149:blowfish.c    ****       0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E, 0xA6078084, 0x19F8509E,
 150:blowfish.c    ****       0xE8EFD855, 0x61D99735, 0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,
 151:blowfish.c    ****       0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9, 0xDB73DBD3, 0x105588CD,
 152:blowfish.c    ****       0x675FDA79, 0xE3674340, 0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,
 153:blowfish.c    ****       0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7
 154:blowfish.c    ****     },
 155:blowfish.c    ****     { /* ks2 */
 156:blowfish.c    ****       0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934, 0x411520F7, 0x7602D4F7,
 157:blowfish.c    ****       0xBCF46B2E, 0xD4A20068, 0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,
 158:blowfish.c    ****       0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840, 0x4D95FC1D, 0x96B591AF,
 159:blowfish.c    ****       0x70F4DDD3, 0x66A02F45, 0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,
 160:blowfish.c    ****       0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A, 0x28507825, 0x530429F4,
 161:blowfish.c    ****       0x0A2C86DA, 0xE9B66DFB, 0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,
 162:blowfish.c    ****       0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6, 0xAACE1E7C, 0xD3375FEC,
 163:blowfish.c    ****       0xCE78A399, 0x406B2A42, 0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,
 164:blowfish.c    ****       0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2, 0x3A6EFA74, 0xDD5B4332,
 165:blowfish.c    ****       0x6841E7F7, 0xCA7820FB, 0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,
 166:blowfish.c    ****       0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B, 0x55A867BC, 0xA1159A58,
 167:blowfish.c    ****       0xCCA92963, 0x99E1DB33, 0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,
 168:blowfish.c    ****       0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3, 0x95C11548, 0xE4C66D22,
 169:blowfish.c    ****       0x48C1133F, 0xC70F86DC, 0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,
 170:blowfish.c    ****       0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564, 0x257B7834, 0x602A9C60,
 171:blowfish.c    ****       0xDFF8E8A3, 0x1F636C1B, 0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,
 172:blowfish.c    ****       0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922, 0x85B2A20E, 0xE6BA0D99,
 173:blowfish.c    ****       0xDE720C8C, 0x2DA2F728, 0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,
 174:blowfish.c    ****       0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E, 0x0A476341, 0x992EFF74,
 175:blowfish.c    ****       0x3A6F6EAB, 0xF4F8FD37, 0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,
 176:blowfish.c    ****       0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804, 0xF1290DC7, 0xCC00FFA3,
 177:blowfish.c    ****       0xB5390F92, 0x690FED0B, 0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,
 178:blowfish.c    ****       0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB, 0x37392EB3, 0xCC115979,
 179:blowfish.c    ****       0x8026E297, 0xF42E312D, 0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,
 180:blowfish.c    ****       0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350, 0x1A6B1018, 0x11CAEDFA,
 181:blowfish.c    ****       0x3D25BDD8, 0xE2E1C3C9, 0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,
 182:blowfish.c    ****       0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE, 0x9DBC8057, 0xF0F7C086,
 183:blowfish.c    ****       0x60787BF8, 0x6003604D, 0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,
 184:blowfish.c    ****       0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F, 0x77A057BE, 0xBDE8AE24,
 185:blowfish.c    ****       0x55464299, 0xBF582E61, 0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,
 186:blowfish.c    ****       0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9, 0x7AEB2661, 0x8B1DDF84,
 187:blowfish.c    ****       0x846A0E79, 0x915F95E2, 0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,
 188:blowfish.c    ****       0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E, 0xB77F19B6, 0xE0A9DC09,
 189:blowfish.c    ****       0x662D09A1, 0xC4324633, 0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,
 190:blowfish.c    ****       0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169, 0xDCB7DA83, 0x573906FE,
 191:blowfish.c    ****       0xA1E2CE9B, 0x4FCD7F52, 0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,
 192:blowfish.c    ****       0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5, 0xF0177A28, 0xC0F586E0,
 193:blowfish.c    ****       0x006058AA, 0x30DC7D62, 0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,
 194:blowfish.c    ****       0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76, 0x6F05E409, 0x4B7C0188,
 195:blowfish.c    ****       0x39720A3D, 0x7C927C24, 0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,
 196:blowfish.c    ****       0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4, 0x1E50EF5E, 0xB161E6F8,
 197:blowfish.c    ****       0xA28514D9, 0x6C51133C, 0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,
 198:blowfish.c    ****       0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0
 199:blowfish.c    ****     },
 200:blowfish.c    ****     { /* ks3 */
 201:blowfish.c    ****       0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B, 0x5CB0679E, 0x4FA33742,
 202:blowfish.c    ****       0xD3822740, 0x99BC9BBE, 0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,
 203:blowfish.c    ****       0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4, 0x5748AB2F, 0xBC946E79,
 204:blowfish.c    ****       0xC6A376D2, 0x6549C2C8, 0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,
 205:blowfish.c    ****       0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304, 0xA1FAD5F0, 0x6A2D519A,
 206:blowfish.c    ****       0x63EF8CE2, 0x9A86EE22, 0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,
 207:blowfish.c    ****       0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6, 0x2826A2F9, 0xA73A3AE1,
 208:blowfish.c    ****       0x4BA99586, 0xEF5562E9, 0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,
 209:blowfish.c    ****       0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593, 0xE990FD5A, 0x9E34D797,
 210:blowfish.c    ****       0x2CF0B7D9, 0x022B8B51, 0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,
 211:blowfish.c    ****       0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C, 0xE029AC71, 0xE019A5E6,
 212:blowfish.c    ****       0x47B0ACFD, 0xED93FA9B, 0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,
 213:blowfish.c    ****       0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C, 0x15056DD4, 0x88F46DBA,
 214:blowfish.c    ****       0x03A16125, 0x0564F0BD, 0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,
 215:blowfish.c    ****       0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319, 0x7533D928, 0xB155FDF5,
 216:blowfish.c    ****       0x03563482, 0x8ABA3CBB, 0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,
 217:blowfish.c    ****       0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991, 0xEA7A90C2, 0xFB3E7BCE,
 218:blowfish.c    ****       0x5121CE64, 0x774FBE32, 0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,
 219:blowfish.c    ****       0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166, 0xB39A460A, 0x6445C0DD,
 220:blowfish.c    ****       0x586CDECF, 0x1C20C8AE, 0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,
 221:blowfish.c    ****       0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5, 0x72EACEA8, 0xFA6484BB,
 222:blowfish.c    ****       0x8D6612AE, 0xBF3C6F47, 0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,
 223:blowfish.c    ****       0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D, 0x4040CB08, 0x4EB4E2CC,
 224:blowfish.c    ****       0x34D2466A, 0x0115AF84, 0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,
 225:blowfish.c    ****       0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8, 0x611560B1, 0xE7933FDC,
 226:blowfish.c    ****       0xBB3A792B, 0x344525BD, 0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,
 227:blowfish.c    ****       0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7, 0x1A908749, 0xD44FBD9A,
 228:blowfish.c    ****       0xD0DADECB, 0xD50ADA38, 0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,
 229:blowfish.c    ****       0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C, 0xBF97222C, 0x15E6FC2A,
 230:blowfish.c    ****       0x0F91FC71, 0x9B941525, 0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,
 231:blowfish.c    ****       0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442, 0xE0EC6E0E, 0x1698DB3B,
 232:blowfish.c    ****       0x4C98A0BE, 0x3278E964, 0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,
 233:blowfish.c    ****       0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8, 0xDF359F8D, 0x9B992F2E,
 234:blowfish.c    ****       0xE60B6F47, 0x0FE3F11D, 0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,
 235:blowfish.c    ****       0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299, 0xF523F357, 0xA6327623,
 236:blowfish.c    ****       0x93A83531, 0x56CCCD02, 0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,
 237:blowfish.c    ****       0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614, 0xE6C6C7BD, 0x327A140A,
 238:blowfish.c    ****       0x45E1D006, 0xC3F27B9A, 0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,
 239:blowfish.c    ****       0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B, 0x53113EC0, 0x1640E3D3,
 240:blowfish.c    ****       0x38ABBD60, 0x2547ADF0, 0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,
 241:blowfish.c    ****       0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E, 0x1948C25C, 0x02FB8A8C,
 242:blowfish.c    ****       0x01C36AE4, 0xD6EBE1F9, 0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,
 243:blowfish.c    ****       0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6
 244:blowfish.c    ****     }
 245:blowfish.c    ****   },
 246:blowfish.c    ****   { /* ps */
 247:blowfish.c    ****     0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344, 0xA4093822, 0x299F31D0,
 248:blowfish.c    ****     0x082EFA98, 0xEC4E6C89, 0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,
 249:blowfish.c    ****     0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917, 0x9216D5D9, 0x8979FB1B
 250:blowfish.c    ****   }
 251:blowfish.c    **** };
 252:blowfish.c    **** 
 253:blowfish.c    **** /* It's unfortunate to have to pick the bytes apart in the round
 254:blowfish.c    ****  * function. Werner's gnupg/libgcrypt code took the address of x, and
 255:blowfish.c    ****  * then read the individual bytes depending on the endianness. But
 256:blowfish.c    ****  * since xr and xl ought to live in registers, copying via memory is a
 257:blowfish.c    ****  * bad idea. */
 258:blowfish.c    **** 
 259:blowfish.c    **** #define F(c, x) \
 260:blowfish.c    ****   ((( (c->s[0][(x>>24) &0xff] + c->s[1][(x>>16) & 0xff]) \
 261:blowfish.c    ****       ^ c->s[2][(x>>8) & 0xff]) + c->s[3][x & 0xff]) & 0xffffffff)
 262:blowfish.c    **** 
 263:blowfish.c    **** #define R(c, l,r,i)  do { l ^= c->p[i]; r ^= F(c,l); } while(0)
 264:blowfish.c    **** 
 265:blowfish.c    **** void
 266:blowfish.c    **** _nettle_blowfish_encround (const struct blowfish_ctx *ctx, uint32_t * ret_xl,
 267:blowfish.c    **** 	    uint32_t * ret_xr)
 268:blowfish.c    **** {
 1058              		.loc 1 268 1
 1059              		.cfi_startproc
 1060 0000 F30F1EFB 		endbr32
 1061 0004 55       		pushl	%ebp
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 5, -8
 1064 0005 89E5     		movl	%esp, %ebp
 1065              		.cfi_def_cfa_register 5
 1066 0007 83EC10   		subl	$16, %esp
 1067 000a E8FCFFFF 		call	__x86.get_pc_thunk.ax
 1067      FF
 1068 000f 05010000 		addl	$_GLOBAL_OFFSET_TABLE_, %eax
 1068      00
 269:blowfish.c    ****   uint32_t xl, xr;
 270:blowfish.c    **** 
 271:blowfish.c    ****   xl = *ret_xl;
 1069              		.loc 1 271 6
 1070 0014 8B450C   		movl	12(%ebp), %eax
 1071 0017 8B00     		movl	(%eax), %eax
 1072 0019 8945F8   		movl	%eax, -8(%ebp)
 272:blowfish.c    ****   xr = *ret_xr;
 1073              		.loc 1 272 6
 1074 001c 8B4510   		movl	16(%ebp), %eax
 1075 001f 8B00     		movl	(%eax), %eax
 1076 0021 8945FC   		movl	%eax, -4(%ebp)
 273:blowfish.c    **** 
 274:blowfish.c    ****   R (ctx, xl, xr, 0);
 1077              		.loc 1 274 3
 1078 0024 8B4508   		movl	8(%ebp), %eax
 1079 0027 8B800010 		movl	4096(%eax), %eax
 1079      0000
 1080 002d 3145F8   		xorl	%eax, -8(%ebp)
 1081 0030 8B45F8   		movl	-8(%ebp), %eax
 1082 0033 C1E818   		shrl	$24, %eax
 1083 0036 89C2     		movl	%eax, %edx
 1084 0038 8B4508   		movl	8(%ebp), %eax
 1085 003b 8B1490   		movl	(%eax,%edx,4), %edx
 1086 003e 8B45F8   		movl	-8(%ebp), %eax
 1087 0041 C1E810   		shrl	$16, %eax
 1088 0044 0FB6C8   		movzbl	%al, %ecx
 1089 0047 8B4508   		movl	8(%ebp), %eax
 1090 004a 81C10001 		addl	$256, %ecx
 1090      0000
 1091 0050 8B0488   		movl	(%eax,%ecx,4), %eax
 1092 0053 8D0C02   		leal	(%edx,%eax), %ecx
 1093 0056 8B45F8   		movl	-8(%ebp), %eax
 1094 0059 C1E808   		shrl	$8, %eax
 1095 005c 0FB6D0   		movzbl	%al, %edx
 1096 005f 8B4508   		movl	8(%ebp), %eax
 1097 0062 81C20002 		addl	$512, %edx
 1097      0000
 1098 0068 8B0490   		movl	(%eax,%edx,4), %eax
 1099 006b 31C1     		xorl	%eax, %ecx
 1100 006d 8B45F8   		movl	-8(%ebp), %eax
 1101 0070 0FB6D0   		movzbl	%al, %edx
 1102 0073 8B4508   		movl	8(%ebp), %eax
 1103 0076 81C20003 		addl	$768, %edx
 1103      0000
 1104 007c 8B0490   		movl	(%eax,%edx,4), %eax
 1105 007f 01C8     		addl	%ecx, %eax
 1106 0081 3145FC   		xorl	%eax, -4(%ebp)
 275:blowfish.c    ****   R (ctx, xr, xl, 1);
 1107              		.loc 1 275 3
 1108 0084 8B4508   		movl	8(%ebp), %eax
 1109 0087 8B800410 		movl	4100(%eax), %eax
 1109      0000
 1110 008d 3145FC   		xorl	%eax, -4(%ebp)
 1111 0090 8B45FC   		movl	-4(%ebp), %eax
 1112 0093 C1E818   		shrl	$24, %eax
 1113 0096 89C2     		movl	%eax, %edx
 1114 0098 8B4508   		movl	8(%ebp), %eax
 1115 009b 8B1490   		movl	(%eax,%edx,4), %edx
 1116 009e 8B45FC   		movl	-4(%ebp), %eax
 1117 00a1 C1E810   		shrl	$16, %eax
 1118 00a4 0FB6C8   		movzbl	%al, %ecx
 1119 00a7 8B4508   		movl	8(%ebp), %eax
 1120 00aa 81C10001 		addl	$256, %ecx
 1120      0000
 1121 00b0 8B0488   		movl	(%eax,%ecx,4), %eax
 1122 00b3 8D0C02   		leal	(%edx,%eax), %ecx
 1123 00b6 8B45FC   		movl	-4(%ebp), %eax
 1124 00b9 C1E808   		shrl	$8, %eax
 1125 00bc 0FB6D0   		movzbl	%al, %edx
 1126 00bf 8B4508   		movl	8(%ebp), %eax
 1127 00c2 81C20002 		addl	$512, %edx
 1127      0000
 1128 00c8 8B0490   		movl	(%eax,%edx,4), %eax
 1129 00cb 31C1     		xorl	%eax, %ecx
 1130 00cd 8B45FC   		movl	-4(%ebp), %eax
 1131 00d0 0FB6D0   		movzbl	%al, %edx
 1132 00d3 8B4508   		movl	8(%ebp), %eax
 1133 00d6 81C20003 		addl	$768, %edx
 1133      0000
 1134 00dc 8B0490   		movl	(%eax,%edx,4), %eax
 1135 00df 01C8     		addl	%ecx, %eax
 1136 00e1 3145F8   		xorl	%eax, -8(%ebp)
 276:blowfish.c    ****   R (ctx, xl, xr, 2);
 1137              		.loc 1 276 3
 1138 00e4 8B4508   		movl	8(%ebp), %eax
 1139 00e7 8B800810 		movl	4104(%eax), %eax
 1139      0000
 1140 00ed 3145F8   		xorl	%eax, -8(%ebp)
 1141 00f0 8B45F8   		movl	-8(%ebp), %eax
 1142 00f3 C1E818   		shrl	$24, %eax
 1143 00f6 89C2     		movl	%eax, %edx
 1144 00f8 8B4508   		movl	8(%ebp), %eax
 1145 00fb 8B1490   		movl	(%eax,%edx,4), %edx
 1146 00fe 8B45F8   		movl	-8(%ebp), %eax
 1147 0101 C1E810   		shrl	$16, %eax
 1148 0104 0FB6C8   		movzbl	%al, %ecx
 1149 0107 8B4508   		movl	8(%ebp), %eax
 1150 010a 81C10001 		addl	$256, %ecx
 1150      0000
 1151 0110 8B0488   		movl	(%eax,%ecx,4), %eax
 1152 0113 8D0C02   		leal	(%edx,%eax), %ecx
 1153 0116 8B45F8   		movl	-8(%ebp), %eax
 1154 0119 C1E808   		shrl	$8, %eax
 1155 011c 0FB6D0   		movzbl	%al, %edx
 1156 011f 8B4508   		movl	8(%ebp), %eax
 1157 0122 81C20002 		addl	$512, %edx
 1157      0000
 1158 0128 8B0490   		movl	(%eax,%edx,4), %eax
 1159 012b 31C1     		xorl	%eax, %ecx
 1160 012d 8B45F8   		movl	-8(%ebp), %eax
 1161 0130 0FB6D0   		movzbl	%al, %edx
 1162 0133 8B4508   		movl	8(%ebp), %eax
 1163 0136 81C20003 		addl	$768, %edx
 1163      0000
 1164 013c 8B0490   		movl	(%eax,%edx,4), %eax
 1165 013f 01C8     		addl	%ecx, %eax
 1166 0141 3145FC   		xorl	%eax, -4(%ebp)
 277:blowfish.c    ****   R (ctx, xr, xl, 3);
 1167              		.loc 1 277 3
 1168 0144 8B4508   		movl	8(%ebp), %eax
 1169 0147 8B800C10 		movl	4108(%eax), %eax
 1169      0000
 1170 014d 3145FC   		xorl	%eax, -4(%ebp)
 1171 0150 8B45FC   		movl	-4(%ebp), %eax
 1172 0153 C1E818   		shrl	$24, %eax
 1173 0156 89C2     		movl	%eax, %edx
 1174 0158 8B4508   		movl	8(%ebp), %eax
 1175 015b 8B1490   		movl	(%eax,%edx,4), %edx
 1176 015e 8B45FC   		movl	-4(%ebp), %eax
 1177 0161 C1E810   		shrl	$16, %eax
 1178 0164 0FB6C8   		movzbl	%al, %ecx
 1179 0167 8B4508   		movl	8(%ebp), %eax
 1180 016a 81C10001 		addl	$256, %ecx
 1180      0000
 1181 0170 8B0488   		movl	(%eax,%ecx,4), %eax
 1182 0173 8D0C02   		leal	(%edx,%eax), %ecx
 1183 0176 8B45FC   		movl	-4(%ebp), %eax
 1184 0179 C1E808   		shrl	$8, %eax
 1185 017c 0FB6D0   		movzbl	%al, %edx
 1186 017f 8B4508   		movl	8(%ebp), %eax
 1187 0182 81C20002 		addl	$512, %edx
 1187      0000
 1188 0188 8B0490   		movl	(%eax,%edx,4), %eax
 1189 018b 31C1     		xorl	%eax, %ecx
 1190 018d 8B45FC   		movl	-4(%ebp), %eax
 1191 0190 0FB6D0   		movzbl	%al, %edx
 1192 0193 8B4508   		movl	8(%ebp), %eax
 1193 0196 81C20003 		addl	$768, %edx
 1193      0000
 1194 019c 8B0490   		movl	(%eax,%edx,4), %eax
 1195 019f 01C8     		addl	%ecx, %eax
 1196 01a1 3145F8   		xorl	%eax, -8(%ebp)
 278:blowfish.c    ****   R (ctx, xl, xr, 4);
 1197              		.loc 1 278 3
 1198 01a4 8B4508   		movl	8(%ebp), %eax
 1199 01a7 8B801010 		movl	4112(%eax), %eax
 1199      0000
 1200 01ad 3145F8   		xorl	%eax, -8(%ebp)
 1201 01b0 8B45F8   		movl	-8(%ebp), %eax
 1202 01b3 C1E818   		shrl	$24, %eax
 1203 01b6 89C2     		movl	%eax, %edx
 1204 01b8 8B4508   		movl	8(%ebp), %eax
 1205 01bb 8B1490   		movl	(%eax,%edx,4), %edx
 1206 01be 8B45F8   		movl	-8(%ebp), %eax
 1207 01c1 C1E810   		shrl	$16, %eax
 1208 01c4 0FB6C8   		movzbl	%al, %ecx
 1209 01c7 8B4508   		movl	8(%ebp), %eax
 1210 01ca 81C10001 		addl	$256, %ecx
 1210      0000
 1211 01d0 8B0488   		movl	(%eax,%ecx,4), %eax
 1212 01d3 8D0C02   		leal	(%edx,%eax), %ecx
 1213 01d6 8B45F8   		movl	-8(%ebp), %eax
 1214 01d9 C1E808   		shrl	$8, %eax
 1215 01dc 0FB6D0   		movzbl	%al, %edx
 1216 01df 8B4508   		movl	8(%ebp), %eax
 1217 01e2 81C20002 		addl	$512, %edx
 1217      0000
 1218 01e8 8B0490   		movl	(%eax,%edx,4), %eax
 1219 01eb 31C1     		xorl	%eax, %ecx
 1220 01ed 8B45F8   		movl	-8(%ebp), %eax
 1221 01f0 0FB6D0   		movzbl	%al, %edx
 1222 01f3 8B4508   		movl	8(%ebp), %eax
 1223 01f6 81C20003 		addl	$768, %edx
 1223      0000
 1224 01fc 8B0490   		movl	(%eax,%edx,4), %eax
 1225 01ff 01C8     		addl	%ecx, %eax
 1226 0201 3145FC   		xorl	%eax, -4(%ebp)
 279:blowfish.c    ****   R (ctx, xr, xl, 5);
 1227              		.loc 1 279 3
 1228 0204 8B4508   		movl	8(%ebp), %eax
 1229 0207 8B801410 		movl	4116(%eax), %eax
 1229      0000
 1230 020d 3145FC   		xorl	%eax, -4(%ebp)
 1231 0210 8B45FC   		movl	-4(%ebp), %eax
 1232 0213 C1E818   		shrl	$24, %eax
 1233 0216 89C2     		movl	%eax, %edx
 1234 0218 8B4508   		movl	8(%ebp), %eax
 1235 021b 8B1490   		movl	(%eax,%edx,4), %edx
 1236 021e 8B45FC   		movl	-4(%ebp), %eax
 1237 0221 C1E810   		shrl	$16, %eax
 1238 0224 0FB6C8   		movzbl	%al, %ecx
 1239 0227 8B4508   		movl	8(%ebp), %eax
 1240 022a 81C10001 		addl	$256, %ecx
 1240      0000
 1241 0230 8B0488   		movl	(%eax,%ecx,4), %eax
 1242 0233 8D0C02   		leal	(%edx,%eax), %ecx
 1243 0236 8B45FC   		movl	-4(%ebp), %eax
 1244 0239 C1E808   		shrl	$8, %eax
 1245 023c 0FB6D0   		movzbl	%al, %edx
 1246 023f 8B4508   		movl	8(%ebp), %eax
 1247 0242 81C20002 		addl	$512, %edx
 1247      0000
 1248 0248 8B0490   		movl	(%eax,%edx,4), %eax
 1249 024b 31C1     		xorl	%eax, %ecx
 1250 024d 8B45FC   		movl	-4(%ebp), %eax
 1251 0250 0FB6D0   		movzbl	%al, %edx
 1252 0253 8B4508   		movl	8(%ebp), %eax
 1253 0256 81C20003 		addl	$768, %edx
 1253      0000
 1254 025c 8B0490   		movl	(%eax,%edx,4), %eax
 1255 025f 01C8     		addl	%ecx, %eax
 1256 0261 3145F8   		xorl	%eax, -8(%ebp)
 280:blowfish.c    ****   R (ctx, xl, xr, 6);
 1257              		.loc 1 280 3
 1258 0264 8B4508   		movl	8(%ebp), %eax
 1259 0267 8B801810 		movl	4120(%eax), %eax
 1259      0000
 1260 026d 3145F8   		xorl	%eax, -8(%ebp)
 1261 0270 8B45F8   		movl	-8(%ebp), %eax
 1262 0273 C1E818   		shrl	$24, %eax
 1263 0276 89C2     		movl	%eax, %edx
 1264 0278 8B4508   		movl	8(%ebp), %eax
 1265 027b 8B1490   		movl	(%eax,%edx,4), %edx
 1266 027e 8B45F8   		movl	-8(%ebp), %eax
 1267 0281 C1E810   		shrl	$16, %eax
 1268 0284 0FB6C8   		movzbl	%al, %ecx
 1269 0287 8B4508   		movl	8(%ebp), %eax
 1270 028a 81C10001 		addl	$256, %ecx
 1270      0000
 1271 0290 8B0488   		movl	(%eax,%ecx,4), %eax
 1272 0293 8D0C02   		leal	(%edx,%eax), %ecx
 1273 0296 8B45F8   		movl	-8(%ebp), %eax
 1274 0299 C1E808   		shrl	$8, %eax
 1275 029c 0FB6D0   		movzbl	%al, %edx
 1276 029f 8B4508   		movl	8(%ebp), %eax
 1277 02a2 81C20002 		addl	$512, %edx
 1277      0000
 1278 02a8 8B0490   		movl	(%eax,%edx,4), %eax
 1279 02ab 31C1     		xorl	%eax, %ecx
 1280 02ad 8B45F8   		movl	-8(%ebp), %eax
 1281 02b0 0FB6D0   		movzbl	%al, %edx
 1282 02b3 8B4508   		movl	8(%ebp), %eax
 1283 02b6 81C20003 		addl	$768, %edx
 1283      0000
 1284 02bc 8B0490   		movl	(%eax,%edx,4), %eax
 1285 02bf 01C8     		addl	%ecx, %eax
 1286 02c1 3145FC   		xorl	%eax, -4(%ebp)
 281:blowfish.c    ****   R (ctx, xr, xl, 7);
 1287              		.loc 1 281 3
 1288 02c4 8B4508   		movl	8(%ebp), %eax
 1289 02c7 8B801C10 		movl	4124(%eax), %eax
 1289      0000
 1290 02cd 3145FC   		xorl	%eax, -4(%ebp)
 1291 02d0 8B45FC   		movl	-4(%ebp), %eax
 1292 02d3 C1E818   		shrl	$24, %eax
 1293 02d6 89C2     		movl	%eax, %edx
 1294 02d8 8B4508   		movl	8(%ebp), %eax
 1295 02db 8B1490   		movl	(%eax,%edx,4), %edx
 1296 02de 8B45FC   		movl	-4(%ebp), %eax
 1297 02e1 C1E810   		shrl	$16, %eax
 1298 02e4 0FB6C8   		movzbl	%al, %ecx
 1299 02e7 8B4508   		movl	8(%ebp), %eax
 1300 02ea 81C10001 		addl	$256, %ecx
 1300      0000
 1301 02f0 8B0488   		movl	(%eax,%ecx,4), %eax
 1302 02f3 8D0C02   		leal	(%edx,%eax), %ecx
 1303 02f6 8B45FC   		movl	-4(%ebp), %eax
 1304 02f9 C1E808   		shrl	$8, %eax
 1305 02fc 0FB6D0   		movzbl	%al, %edx
 1306 02ff 8B4508   		movl	8(%ebp), %eax
 1307 0302 81C20002 		addl	$512, %edx
 1307      0000
 1308 0308 8B0490   		movl	(%eax,%edx,4), %eax
 1309 030b 31C1     		xorl	%eax, %ecx
 1310 030d 8B45FC   		movl	-4(%ebp), %eax
 1311 0310 0FB6D0   		movzbl	%al, %edx
 1312 0313 8B4508   		movl	8(%ebp), %eax
 1313 0316 81C20003 		addl	$768, %edx
 1313      0000
 1314 031c 8B0490   		movl	(%eax,%edx,4), %eax
 1315 031f 01C8     		addl	%ecx, %eax
 1316 0321 3145F8   		xorl	%eax, -8(%ebp)
 282:blowfish.c    ****   R (ctx, xl, xr, 8);
 1317              		.loc 1 282 3
 1318 0324 8B4508   		movl	8(%ebp), %eax
 1319 0327 8B802010 		movl	4128(%eax), %eax
 1319      0000
 1320 032d 3145F8   		xorl	%eax, -8(%ebp)
 1321 0330 8B45F8   		movl	-8(%ebp), %eax
 1322 0333 C1E818   		shrl	$24, %eax
 1323 0336 89C2     		movl	%eax, %edx
 1324 0338 8B4508   		movl	8(%ebp), %eax
 1325 033b 8B1490   		movl	(%eax,%edx,4), %edx
 1326 033e 8B45F8   		movl	-8(%ebp), %eax
 1327 0341 C1E810   		shrl	$16, %eax
 1328 0344 0FB6C8   		movzbl	%al, %ecx
 1329 0347 8B4508   		movl	8(%ebp), %eax
 1330 034a 81C10001 		addl	$256, %ecx
 1330      0000
 1331 0350 8B0488   		movl	(%eax,%ecx,4), %eax
 1332 0353 8D0C02   		leal	(%edx,%eax), %ecx
 1333 0356 8B45F8   		movl	-8(%ebp), %eax
 1334 0359 C1E808   		shrl	$8, %eax
 1335 035c 0FB6D0   		movzbl	%al, %edx
 1336 035f 8B4508   		movl	8(%ebp), %eax
 1337 0362 81C20002 		addl	$512, %edx
 1337      0000
 1338 0368 8B0490   		movl	(%eax,%edx,4), %eax
 1339 036b 31C1     		xorl	%eax, %ecx
 1340 036d 8B45F8   		movl	-8(%ebp), %eax
 1341 0370 0FB6D0   		movzbl	%al, %edx
 1342 0373 8B4508   		movl	8(%ebp), %eax
 1343 0376 81C20003 		addl	$768, %edx
 1343      0000
 1344 037c 8B0490   		movl	(%eax,%edx,4), %eax
 1345 037f 01C8     		addl	%ecx, %eax
 1346 0381 3145FC   		xorl	%eax, -4(%ebp)
 283:blowfish.c    ****   R (ctx, xr, xl, 9);
 1347              		.loc 1 283 3
 1348 0384 8B4508   		movl	8(%ebp), %eax
 1349 0387 8B802410 		movl	4132(%eax), %eax
 1349      0000
 1350 038d 3145FC   		xorl	%eax, -4(%ebp)
 1351 0390 8B45FC   		movl	-4(%ebp), %eax
 1352 0393 C1E818   		shrl	$24, %eax
 1353 0396 89C2     		movl	%eax, %edx
 1354 0398 8B4508   		movl	8(%ebp), %eax
 1355 039b 8B1490   		movl	(%eax,%edx,4), %edx
 1356 039e 8B45FC   		movl	-4(%ebp), %eax
 1357 03a1 C1E810   		shrl	$16, %eax
 1358 03a4 0FB6C8   		movzbl	%al, %ecx
 1359 03a7 8B4508   		movl	8(%ebp), %eax
 1360 03aa 81C10001 		addl	$256, %ecx
 1360      0000
 1361 03b0 8B0488   		movl	(%eax,%ecx,4), %eax
 1362 03b3 8D0C02   		leal	(%edx,%eax), %ecx
 1363 03b6 8B45FC   		movl	-4(%ebp), %eax
 1364 03b9 C1E808   		shrl	$8, %eax
 1365 03bc 0FB6D0   		movzbl	%al, %edx
 1366 03bf 8B4508   		movl	8(%ebp), %eax
 1367 03c2 81C20002 		addl	$512, %edx
 1367      0000
 1368 03c8 8B0490   		movl	(%eax,%edx,4), %eax
 1369 03cb 31C1     		xorl	%eax, %ecx
 1370 03cd 8B45FC   		movl	-4(%ebp), %eax
 1371 03d0 0FB6D0   		movzbl	%al, %edx
 1372 03d3 8B4508   		movl	8(%ebp), %eax
 1373 03d6 81C20003 		addl	$768, %edx
 1373      0000
 1374 03dc 8B0490   		movl	(%eax,%edx,4), %eax
 1375 03df 01C8     		addl	%ecx, %eax
 1376 03e1 3145F8   		xorl	%eax, -8(%ebp)
 284:blowfish.c    ****   R (ctx, xl, xr, 10);
 1377              		.loc 1 284 3
 1378 03e4 8B4508   		movl	8(%ebp), %eax
 1379 03e7 8B802810 		movl	4136(%eax), %eax
 1379      0000
 1380 03ed 3145F8   		xorl	%eax, -8(%ebp)
 1381 03f0 8B45F8   		movl	-8(%ebp), %eax
 1382 03f3 C1E818   		shrl	$24, %eax
 1383 03f6 89C2     		movl	%eax, %edx
 1384 03f8 8B4508   		movl	8(%ebp), %eax
 1385 03fb 8B1490   		movl	(%eax,%edx,4), %edx
 1386 03fe 8B45F8   		movl	-8(%ebp), %eax
 1387 0401 C1E810   		shrl	$16, %eax
 1388 0404 0FB6C8   		movzbl	%al, %ecx
 1389 0407 8B4508   		movl	8(%ebp), %eax
 1390 040a 81C10001 		addl	$256, %ecx
 1390      0000
 1391 0410 8B0488   		movl	(%eax,%ecx,4), %eax
 1392 0413 8D0C02   		leal	(%edx,%eax), %ecx
 1393 0416 8B45F8   		movl	-8(%ebp), %eax
 1394 0419 C1E808   		shrl	$8, %eax
 1395 041c 0FB6D0   		movzbl	%al, %edx
 1396 041f 8B4508   		movl	8(%ebp), %eax
 1397 0422 81C20002 		addl	$512, %edx
 1397      0000
 1398 0428 8B0490   		movl	(%eax,%edx,4), %eax
 1399 042b 31C1     		xorl	%eax, %ecx
 1400 042d 8B45F8   		movl	-8(%ebp), %eax
 1401 0430 0FB6D0   		movzbl	%al, %edx
 1402 0433 8B4508   		movl	8(%ebp), %eax
 1403 0436 81C20003 		addl	$768, %edx
 1403      0000
 1404 043c 8B0490   		movl	(%eax,%edx,4), %eax
 1405 043f 01C8     		addl	%ecx, %eax
 1406 0441 3145FC   		xorl	%eax, -4(%ebp)
 285:blowfish.c    ****   R (ctx, xr, xl, 11);
 1407              		.loc 1 285 3
 1408 0444 8B4508   		movl	8(%ebp), %eax
 1409 0447 8B802C10 		movl	4140(%eax), %eax
 1409      0000
 1410 044d 3145FC   		xorl	%eax, -4(%ebp)
 1411 0450 8B45FC   		movl	-4(%ebp), %eax
 1412 0453 C1E818   		shrl	$24, %eax
 1413 0456 89C2     		movl	%eax, %edx
 1414 0458 8B4508   		movl	8(%ebp), %eax
 1415 045b 8B1490   		movl	(%eax,%edx,4), %edx
 1416 045e 8B45FC   		movl	-4(%ebp), %eax
 1417 0461 C1E810   		shrl	$16, %eax
 1418 0464 0FB6C8   		movzbl	%al, %ecx
 1419 0467 8B4508   		movl	8(%ebp), %eax
 1420 046a 81C10001 		addl	$256, %ecx
 1420      0000
 1421 0470 8B0488   		movl	(%eax,%ecx,4), %eax
 1422 0473 8D0C02   		leal	(%edx,%eax), %ecx
 1423 0476 8B45FC   		movl	-4(%ebp), %eax
 1424 0479 C1E808   		shrl	$8, %eax
 1425 047c 0FB6D0   		movzbl	%al, %edx
 1426 047f 8B4508   		movl	8(%ebp), %eax
 1427 0482 81C20002 		addl	$512, %edx
 1427      0000
 1428 0488 8B0490   		movl	(%eax,%edx,4), %eax
 1429 048b 31C1     		xorl	%eax, %ecx
 1430 048d 8B45FC   		movl	-4(%ebp), %eax
 1431 0490 0FB6D0   		movzbl	%al, %edx
 1432 0493 8B4508   		movl	8(%ebp), %eax
 1433 0496 81C20003 		addl	$768, %edx
 1433      0000
 1434 049c 8B0490   		movl	(%eax,%edx,4), %eax
 1435 049f 01C8     		addl	%ecx, %eax
 1436 04a1 3145F8   		xorl	%eax, -8(%ebp)
 286:blowfish.c    ****   R (ctx, xl, xr, 12);
 1437              		.loc 1 286 3
 1438 04a4 8B4508   		movl	8(%ebp), %eax
 1439 04a7 8B803010 		movl	4144(%eax), %eax
 1439      0000
 1440 04ad 3145F8   		xorl	%eax, -8(%ebp)
 1441 04b0 8B45F8   		movl	-8(%ebp), %eax
 1442 04b3 C1E818   		shrl	$24, %eax
 1443 04b6 89C2     		movl	%eax, %edx
 1444 04b8 8B4508   		movl	8(%ebp), %eax
 1445 04bb 8B1490   		movl	(%eax,%edx,4), %edx
 1446 04be 8B45F8   		movl	-8(%ebp), %eax
 1447 04c1 C1E810   		shrl	$16, %eax
 1448 04c4 0FB6C8   		movzbl	%al, %ecx
 1449 04c7 8B4508   		movl	8(%ebp), %eax
 1450 04ca 81C10001 		addl	$256, %ecx
 1450      0000
 1451 04d0 8B0488   		movl	(%eax,%ecx,4), %eax
 1452 04d3 8D0C02   		leal	(%edx,%eax), %ecx
 1453 04d6 8B45F8   		movl	-8(%ebp), %eax
 1454 04d9 C1E808   		shrl	$8, %eax
 1455 04dc 0FB6D0   		movzbl	%al, %edx
 1456 04df 8B4508   		movl	8(%ebp), %eax
 1457 04e2 81C20002 		addl	$512, %edx
 1457      0000
 1458 04e8 8B0490   		movl	(%eax,%edx,4), %eax
 1459 04eb 31C1     		xorl	%eax, %ecx
 1460 04ed 8B45F8   		movl	-8(%ebp), %eax
 1461 04f0 0FB6D0   		movzbl	%al, %edx
 1462 04f3 8B4508   		movl	8(%ebp), %eax
 1463 04f6 81C20003 		addl	$768, %edx
 1463      0000
 1464 04fc 8B0490   		movl	(%eax,%edx,4), %eax
 1465 04ff 01C8     		addl	%ecx, %eax
 1466 0501 3145FC   		xorl	%eax, -4(%ebp)
 287:blowfish.c    ****   R (ctx, xr, xl, 13);
 1467              		.loc 1 287 3
 1468 0504 8B4508   		movl	8(%ebp), %eax
 1469 0507 8B803410 		movl	4148(%eax), %eax
 1469      0000
 1470 050d 3145FC   		xorl	%eax, -4(%ebp)
 1471 0510 8B45FC   		movl	-4(%ebp), %eax
 1472 0513 C1E818   		shrl	$24, %eax
 1473 0516 89C2     		movl	%eax, %edx
 1474 0518 8B4508   		movl	8(%ebp), %eax
 1475 051b 8B1490   		movl	(%eax,%edx,4), %edx
 1476 051e 8B45FC   		movl	-4(%ebp), %eax
 1477 0521 C1E810   		shrl	$16, %eax
 1478 0524 0FB6C8   		movzbl	%al, %ecx
 1479 0527 8B4508   		movl	8(%ebp), %eax
 1480 052a 81C10001 		addl	$256, %ecx
 1480      0000
 1481 0530 8B0488   		movl	(%eax,%ecx,4), %eax
 1482 0533 8D0C02   		leal	(%edx,%eax), %ecx
 1483 0536 8B45FC   		movl	-4(%ebp), %eax
 1484 0539 C1E808   		shrl	$8, %eax
 1485 053c 0FB6D0   		movzbl	%al, %edx
 1486 053f 8B4508   		movl	8(%ebp), %eax
 1487 0542 81C20002 		addl	$512, %edx
 1487      0000
 1488 0548 8B0490   		movl	(%eax,%edx,4), %eax
 1489 054b 31C1     		xorl	%eax, %ecx
 1490 054d 8B45FC   		movl	-4(%ebp), %eax
 1491 0550 0FB6D0   		movzbl	%al, %edx
 1492 0553 8B4508   		movl	8(%ebp), %eax
 1493 0556 81C20003 		addl	$768, %edx
 1493      0000
 1494 055c 8B0490   		movl	(%eax,%edx,4), %eax
 1495 055f 01C8     		addl	%ecx, %eax
 1496 0561 3145F8   		xorl	%eax, -8(%ebp)
 288:blowfish.c    ****   R (ctx, xl, xr, 14);
 1497              		.loc 1 288 3
 1498 0564 8B4508   		movl	8(%ebp), %eax
 1499 0567 8B803810 		movl	4152(%eax), %eax
 1499      0000
 1500 056d 3145F8   		xorl	%eax, -8(%ebp)
 1501 0570 8B45F8   		movl	-8(%ebp), %eax
 1502 0573 C1E818   		shrl	$24, %eax
 1503 0576 89C2     		movl	%eax, %edx
 1504 0578 8B4508   		movl	8(%ebp), %eax
 1505 057b 8B1490   		movl	(%eax,%edx,4), %edx
 1506 057e 8B45F8   		movl	-8(%ebp), %eax
 1507 0581 C1E810   		shrl	$16, %eax
 1508 0584 0FB6C8   		movzbl	%al, %ecx
 1509 0587 8B4508   		movl	8(%ebp), %eax
 1510 058a 81C10001 		addl	$256, %ecx
 1510      0000
 1511 0590 8B0488   		movl	(%eax,%ecx,4), %eax
 1512 0593 8D0C02   		leal	(%edx,%eax), %ecx
 1513 0596 8B45F8   		movl	-8(%ebp), %eax
 1514 0599 C1E808   		shrl	$8, %eax
 1515 059c 0FB6D0   		movzbl	%al, %edx
 1516 059f 8B4508   		movl	8(%ebp), %eax
 1517 05a2 81C20002 		addl	$512, %edx
 1517      0000
 1518 05a8 8B0490   		movl	(%eax,%edx,4), %eax
 1519 05ab 31C1     		xorl	%eax, %ecx
 1520 05ad 8B45F8   		movl	-8(%ebp), %eax
 1521 05b0 0FB6D0   		movzbl	%al, %edx
 1522 05b3 8B4508   		movl	8(%ebp), %eax
 1523 05b6 81C20003 		addl	$768, %edx
 1523      0000
 1524 05bc 8B0490   		movl	(%eax,%edx,4), %eax
 1525 05bf 01C8     		addl	%ecx, %eax
 1526 05c1 3145FC   		xorl	%eax, -4(%ebp)
 289:blowfish.c    ****   R (ctx, xr, xl, 15);
 1527              		.loc 1 289 3
 1528 05c4 8B4508   		movl	8(%ebp), %eax
 1529 05c7 8B803C10 		movl	4156(%eax), %eax
 1529      0000
 1530 05cd 3145FC   		xorl	%eax, -4(%ebp)
 1531 05d0 8B45FC   		movl	-4(%ebp), %eax
 1532 05d3 C1E818   		shrl	$24, %eax
 1533 05d6 89C2     		movl	%eax, %edx
 1534 05d8 8B4508   		movl	8(%ebp), %eax
 1535 05db 8B1490   		movl	(%eax,%edx,4), %edx
 1536 05de 8B45FC   		movl	-4(%ebp), %eax
 1537 05e1 C1E810   		shrl	$16, %eax
 1538 05e4 0FB6C8   		movzbl	%al, %ecx
 1539 05e7 8B4508   		movl	8(%ebp), %eax
 1540 05ea 81C10001 		addl	$256, %ecx
 1540      0000
 1541 05f0 8B0488   		movl	(%eax,%ecx,4), %eax
 1542 05f3 8D0C02   		leal	(%edx,%eax), %ecx
 1543 05f6 8B45FC   		movl	-4(%ebp), %eax
 1544 05f9 C1E808   		shrl	$8, %eax
 1545 05fc 0FB6D0   		movzbl	%al, %edx
 1546 05ff 8B4508   		movl	8(%ebp), %eax
 1547 0602 81C20002 		addl	$512, %edx
 1547      0000
 1548 0608 8B0490   		movl	(%eax,%edx,4), %eax
 1549 060b 31C1     		xorl	%eax, %ecx
 1550 060d 8B45FC   		movl	-4(%ebp), %eax
 1551 0610 0FB6D0   		movzbl	%al, %edx
 1552 0613 8B4508   		movl	8(%ebp), %eax
 1553 0616 81C20003 		addl	$768, %edx
 1553      0000
 1554 061c 8B0490   		movl	(%eax,%edx,4), %eax
 1555 061f 01C8     		addl	%ecx, %eax
 1556 0621 3145F8   		xorl	%eax, -8(%ebp)
 290:blowfish.c    **** 
 291:blowfish.c    ****   xl ^= ctx->p[_BLOWFISH_ROUNDS];
 1557              		.loc 1 291 15
 1558 0624 8B4508   		movl	8(%ebp), %eax
 1559 0627 8B804010 		movl	4160(%eax), %eax
 1559      0000
 1560              		.loc 1 291 6
 1561 062d 3145F8   		xorl	%eax, -8(%ebp)
 292:blowfish.c    ****   xr ^= ctx->p[_BLOWFISH_ROUNDS + 1];
 1562              		.loc 1 292 15
 1563 0630 8B4508   		movl	8(%ebp), %eax
 1564 0633 8B804410 		movl	4164(%eax), %eax
 1564      0000
 1565              		.loc 1 292 6
 1566 0639 3145FC   		xorl	%eax, -4(%ebp)
 293:blowfish.c    **** 
 294:blowfish.c    ****   *ret_xl = xr;
 1567              		.loc 1 294 11
 1568 063c 8B450C   		movl	12(%ebp), %eax
 1569 063f 8B55FC   		movl	-4(%ebp), %edx
 1570 0642 8910     		movl	%edx, (%eax)
 295:blowfish.c    ****   *ret_xr = xl;
 1571              		.loc 1 295 11
 1572 0644 8B4510   		movl	16(%ebp), %eax
 1573 0647 8B55F8   		movl	-8(%ebp), %edx
 1574 064a 8910     		movl	%edx, (%eax)
 296:blowfish.c    **** }
 1575              		.loc 1 296 1
 1576 064c 90       		nop
 1577 064d C9       		leave
 1578              		.cfi_restore 5
 1579              		.cfi_def_cfa 4, 4
 1580 064e C3       		ret
 1581              		.cfi_endproc
 1582              	.LFE0:
 1585              	decround:
 1586              	.LFB1:
 297:blowfish.c    **** 
 298:blowfish.c    **** static void
 299:blowfish.c    **** decround (const struct blowfish_ctx *ctx, uint32_t * ret_xl, uint32_t * ret_xr)
 300:blowfish.c    **** {
 1587              		.loc 1 300 1
 1588              		.cfi_startproc
 1589 064f F30F1EFB 		endbr32
 1590 0653 55       		pushl	%ebp
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 5, -8
 1593 0654 89E5     		movl	%esp, %ebp
 1594              		.cfi_def_cfa_register 5
 1595 0656 83EC10   		subl	$16, %esp
 1596 0659 E8FCFFFF 		call	__x86.get_pc_thunk.ax
 1596      FF
 1597 065e 05010000 		addl	$_GLOBAL_OFFSET_TABLE_, %eax
 1597      00
 301:blowfish.c    ****   uint32_t xl, xr;
 302:blowfish.c    **** 
 303:blowfish.c    ****   xl = *ret_xl;
 1598              		.loc 1 303 6
 1599 0663 8B450C   		movl	12(%ebp), %eax
 1600 0666 8B00     		movl	(%eax), %eax
 1601 0668 8945F8   		movl	%eax, -8(%ebp)
 304:blowfish.c    ****   xr = *ret_xr;
 1602              		.loc 1 304 6
 1603 066b 8B4510   		movl	16(%ebp), %eax
 1604 066e 8B00     		movl	(%eax), %eax
 1605 0670 8945FC   		movl	%eax, -4(%ebp)
 305:blowfish.c    **** 
 306:blowfish.c    ****   R (ctx, xl, xr, 17);
 1606              		.loc 1 306 3
 1607 0673 8B4508   		movl	8(%ebp), %eax
 1608 0676 8B804410 		movl	4164(%eax), %eax
 1608      0000
 1609 067c 3145F8   		xorl	%eax, -8(%ebp)
 1610 067f 8B45F8   		movl	-8(%ebp), %eax
 1611 0682 C1E818   		shrl	$24, %eax
 1612 0685 89C2     		movl	%eax, %edx
 1613 0687 8B4508   		movl	8(%ebp), %eax
 1614 068a 8B1490   		movl	(%eax,%edx,4), %edx
 1615 068d 8B45F8   		movl	-8(%ebp), %eax
 1616 0690 C1E810   		shrl	$16, %eax
 1617 0693 0FB6C8   		movzbl	%al, %ecx
 1618 0696 8B4508   		movl	8(%ebp), %eax
 1619 0699 81C10001 		addl	$256, %ecx
 1619      0000
 1620 069f 8B0488   		movl	(%eax,%ecx,4), %eax
 1621 06a2 8D0C02   		leal	(%edx,%eax), %ecx
 1622 06a5 8B45F8   		movl	-8(%ebp), %eax
 1623 06a8 C1E808   		shrl	$8, %eax
 1624 06ab 0FB6D0   		movzbl	%al, %edx
 1625 06ae 8B4508   		movl	8(%ebp), %eax
 1626 06b1 81C20002 		addl	$512, %edx
 1626      0000
 1627 06b7 8B0490   		movl	(%eax,%edx,4), %eax
 1628 06ba 31C1     		xorl	%eax, %ecx
 1629 06bc 8B45F8   		movl	-8(%ebp), %eax
 1630 06bf 0FB6D0   		movzbl	%al, %edx
 1631 06c2 8B4508   		movl	8(%ebp), %eax
 1632 06c5 81C20003 		addl	$768, %edx
 1632      0000
 1633 06cb 8B0490   		movl	(%eax,%edx,4), %eax
 1634 06ce 01C8     		addl	%ecx, %eax
 1635 06d0 3145FC   		xorl	%eax, -4(%ebp)
 307:blowfish.c    ****   R (ctx, xr, xl, 16);
 1636              		.loc 1 307 3
 1637 06d3 8B4508   		movl	8(%ebp), %eax
 1638 06d6 8B804010 		movl	4160(%eax), %eax
 1638      0000
 1639 06dc 3145FC   		xorl	%eax, -4(%ebp)
 1640 06df 8B45FC   		movl	-4(%ebp), %eax
 1641 06e2 C1E818   		shrl	$24, %eax
 1642 06e5 89C2     		movl	%eax, %edx
 1643 06e7 8B4508   		movl	8(%ebp), %eax
 1644 06ea 8B1490   		movl	(%eax,%edx,4), %edx
 1645 06ed 8B45FC   		movl	-4(%ebp), %eax
 1646 06f0 C1E810   		shrl	$16, %eax
 1647 06f3 0FB6C8   		movzbl	%al, %ecx
 1648 06f6 8B4508   		movl	8(%ebp), %eax
 1649 06f9 81C10001 		addl	$256, %ecx
 1649      0000
 1650 06ff 8B0488   		movl	(%eax,%ecx,4), %eax
 1651 0702 8D0C02   		leal	(%edx,%eax), %ecx
 1652 0705 8B45FC   		movl	-4(%ebp), %eax
 1653 0708 C1E808   		shrl	$8, %eax
 1654 070b 0FB6D0   		movzbl	%al, %edx
 1655 070e 8B4508   		movl	8(%ebp), %eax
 1656 0711 81C20002 		addl	$512, %edx
 1656      0000
 1657 0717 8B0490   		movl	(%eax,%edx,4), %eax
 1658 071a 31C1     		xorl	%eax, %ecx
 1659 071c 8B45FC   		movl	-4(%ebp), %eax
 1660 071f 0FB6D0   		movzbl	%al, %edx
 1661 0722 8B4508   		movl	8(%ebp), %eax
 1662 0725 81C20003 		addl	$768, %edx
 1662      0000
 1663 072b 8B0490   		movl	(%eax,%edx,4), %eax
 1664 072e 01C8     		addl	%ecx, %eax
 1665 0730 3145F8   		xorl	%eax, -8(%ebp)
 308:blowfish.c    ****   R (ctx, xl, xr, 15);
 1666              		.loc 1 308 3
 1667 0733 8B4508   		movl	8(%ebp), %eax
 1668 0736 8B803C10 		movl	4156(%eax), %eax
 1668      0000
 1669 073c 3145F8   		xorl	%eax, -8(%ebp)
 1670 073f 8B45F8   		movl	-8(%ebp), %eax
 1671 0742 C1E818   		shrl	$24, %eax
 1672 0745 89C2     		movl	%eax, %edx
 1673 0747 8B4508   		movl	8(%ebp), %eax
 1674 074a 8B1490   		movl	(%eax,%edx,4), %edx
 1675 074d 8B45F8   		movl	-8(%ebp), %eax
 1676 0750 C1E810   		shrl	$16, %eax
 1677 0753 0FB6C8   		movzbl	%al, %ecx
 1678 0756 8B4508   		movl	8(%ebp), %eax
 1679 0759 81C10001 		addl	$256, %ecx
 1679      0000
 1680 075f 8B0488   		movl	(%eax,%ecx,4), %eax
 1681 0762 8D0C02   		leal	(%edx,%eax), %ecx
 1682 0765 8B45F8   		movl	-8(%ebp), %eax
 1683 0768 C1E808   		shrl	$8, %eax
 1684 076b 0FB6D0   		movzbl	%al, %edx
 1685 076e 8B4508   		movl	8(%ebp), %eax
 1686 0771 81C20002 		addl	$512, %edx
 1686      0000
 1687 0777 8B0490   		movl	(%eax,%edx,4), %eax
 1688 077a 31C1     		xorl	%eax, %ecx
 1689 077c 8B45F8   		movl	-8(%ebp), %eax
 1690 077f 0FB6D0   		movzbl	%al, %edx
 1691 0782 8B4508   		movl	8(%ebp), %eax
 1692 0785 81C20003 		addl	$768, %edx
 1692      0000
 1693 078b 8B0490   		movl	(%eax,%edx,4), %eax
 1694 078e 01C8     		addl	%ecx, %eax
 1695 0790 3145FC   		xorl	%eax, -4(%ebp)
 309:blowfish.c    ****   R (ctx, xr, xl, 14);
 1696              		.loc 1 309 3
 1697 0793 8B4508   		movl	8(%ebp), %eax
 1698 0796 8B803810 		movl	4152(%eax), %eax
 1698      0000
 1699 079c 3145FC   		xorl	%eax, -4(%ebp)
 1700 079f 8B45FC   		movl	-4(%ebp), %eax
 1701 07a2 C1E818   		shrl	$24, %eax
 1702 07a5 89C2     		movl	%eax, %edx
 1703 07a7 8B4508   		movl	8(%ebp), %eax
 1704 07aa 8B1490   		movl	(%eax,%edx,4), %edx
 1705 07ad 8B45FC   		movl	-4(%ebp), %eax
 1706 07b0 C1E810   		shrl	$16, %eax
 1707 07b3 0FB6C8   		movzbl	%al, %ecx
 1708 07b6 8B4508   		movl	8(%ebp), %eax
 1709 07b9 81C10001 		addl	$256, %ecx
 1709      0000
 1710 07bf 8B0488   		movl	(%eax,%ecx,4), %eax
 1711 07c2 8D0C02   		leal	(%edx,%eax), %ecx
 1712 07c5 8B45FC   		movl	-4(%ebp), %eax
 1713 07c8 C1E808   		shrl	$8, %eax
 1714 07cb 0FB6D0   		movzbl	%al, %edx
 1715 07ce 8B4508   		movl	8(%ebp), %eax
 1716 07d1 81C20002 		addl	$512, %edx
 1716      0000
 1717 07d7 8B0490   		movl	(%eax,%edx,4), %eax
 1718 07da 31C1     		xorl	%eax, %ecx
 1719 07dc 8B45FC   		movl	-4(%ebp), %eax
 1720 07df 0FB6D0   		movzbl	%al, %edx
 1721 07e2 8B4508   		movl	8(%ebp), %eax
 1722 07e5 81C20003 		addl	$768, %edx
 1722      0000
 1723 07eb 8B0490   		movl	(%eax,%edx,4), %eax
 1724 07ee 01C8     		addl	%ecx, %eax
 1725 07f0 3145F8   		xorl	%eax, -8(%ebp)
 310:blowfish.c    ****   R (ctx, xl, xr, 13);
 1726              		.loc 1 310 3
 1727 07f3 8B4508   		movl	8(%ebp), %eax
 1728 07f6 8B803410 		movl	4148(%eax), %eax
 1728      0000
 1729 07fc 3145F8   		xorl	%eax, -8(%ebp)
 1730 07ff 8B45F8   		movl	-8(%ebp), %eax
 1731 0802 C1E818   		shrl	$24, %eax
 1732 0805 89C2     		movl	%eax, %edx
 1733 0807 8B4508   		movl	8(%ebp), %eax
 1734 080a 8B1490   		movl	(%eax,%edx,4), %edx
 1735 080d 8B45F8   		movl	-8(%ebp), %eax
 1736 0810 C1E810   		shrl	$16, %eax
 1737 0813 0FB6C8   		movzbl	%al, %ecx
 1738 0816 8B4508   		movl	8(%ebp), %eax
 1739 0819 81C10001 		addl	$256, %ecx
 1739      0000
 1740 081f 8B0488   		movl	(%eax,%ecx,4), %eax
 1741 0822 8D0C02   		leal	(%edx,%eax), %ecx
 1742 0825 8B45F8   		movl	-8(%ebp), %eax
 1743 0828 C1E808   		shrl	$8, %eax
 1744 082b 0FB6D0   		movzbl	%al, %edx
 1745 082e 8B4508   		movl	8(%ebp), %eax
 1746 0831 81C20002 		addl	$512, %edx
 1746      0000
 1747 0837 8B0490   		movl	(%eax,%edx,4), %eax
 1748 083a 31C1     		xorl	%eax, %ecx
 1749 083c 8B45F8   		movl	-8(%ebp), %eax
 1750 083f 0FB6D0   		movzbl	%al, %edx
 1751 0842 8B4508   		movl	8(%ebp), %eax
 1752 0845 81C20003 		addl	$768, %edx
 1752      0000
 1753 084b 8B0490   		movl	(%eax,%edx,4), %eax
 1754 084e 01C8     		addl	%ecx, %eax
 1755 0850 3145FC   		xorl	%eax, -4(%ebp)
 311:blowfish.c    ****   R (ctx, xr, xl, 12);
 1756              		.loc 1 311 3
 1757 0853 8B4508   		movl	8(%ebp), %eax
 1758 0856 8B803010 		movl	4144(%eax), %eax
 1758      0000
 1759 085c 3145FC   		xorl	%eax, -4(%ebp)
 1760 085f 8B45FC   		movl	-4(%ebp), %eax
 1761 0862 C1E818   		shrl	$24, %eax
 1762 0865 89C2     		movl	%eax, %edx
 1763 0867 8B4508   		movl	8(%ebp), %eax
 1764 086a 8B1490   		movl	(%eax,%edx,4), %edx
 1765 086d 8B45FC   		movl	-4(%ebp), %eax
 1766 0870 C1E810   		shrl	$16, %eax
 1767 0873 0FB6C8   		movzbl	%al, %ecx
 1768 0876 8B4508   		movl	8(%ebp), %eax
 1769 0879 81C10001 		addl	$256, %ecx
 1769      0000
 1770 087f 8B0488   		movl	(%eax,%ecx,4), %eax
 1771 0882 8D0C02   		leal	(%edx,%eax), %ecx
 1772 0885 8B45FC   		movl	-4(%ebp), %eax
 1773 0888 C1E808   		shrl	$8, %eax
 1774 088b 0FB6D0   		movzbl	%al, %edx
 1775 088e 8B4508   		movl	8(%ebp), %eax
 1776 0891 81C20002 		addl	$512, %edx
 1776      0000
 1777 0897 8B0490   		movl	(%eax,%edx,4), %eax
 1778 089a 31C1     		xorl	%eax, %ecx
 1779 089c 8B45FC   		movl	-4(%ebp), %eax
 1780 089f 0FB6D0   		movzbl	%al, %edx
 1781 08a2 8B4508   		movl	8(%ebp), %eax
 1782 08a5 81C20003 		addl	$768, %edx
 1782      0000
 1783 08ab 8B0490   		movl	(%eax,%edx,4), %eax
 1784 08ae 01C8     		addl	%ecx, %eax
 1785 08b0 3145F8   		xorl	%eax, -8(%ebp)
 312:blowfish.c    ****   R (ctx, xl, xr, 11);
 1786              		.loc 1 312 3
 1787 08b3 8B4508   		movl	8(%ebp), %eax
 1788 08b6 8B802C10 		movl	4140(%eax), %eax
 1788      0000
 1789 08bc 3145F8   		xorl	%eax, -8(%ebp)
 1790 08bf 8B45F8   		movl	-8(%ebp), %eax
 1791 08c2 C1E818   		shrl	$24, %eax
 1792 08c5 89C2     		movl	%eax, %edx
 1793 08c7 8B4508   		movl	8(%ebp), %eax
 1794 08ca 8B1490   		movl	(%eax,%edx,4), %edx
 1795 08cd 8B45F8   		movl	-8(%ebp), %eax
 1796 08d0 C1E810   		shrl	$16, %eax
 1797 08d3 0FB6C8   		movzbl	%al, %ecx
 1798 08d6 8B4508   		movl	8(%ebp), %eax
 1799 08d9 81C10001 		addl	$256, %ecx
 1799      0000
 1800 08df 8B0488   		movl	(%eax,%ecx,4), %eax
 1801 08e2 8D0C02   		leal	(%edx,%eax), %ecx
 1802 08e5 8B45F8   		movl	-8(%ebp), %eax
 1803 08e8 C1E808   		shrl	$8, %eax
 1804 08eb 0FB6D0   		movzbl	%al, %edx
 1805 08ee 8B4508   		movl	8(%ebp), %eax
 1806 08f1 81C20002 		addl	$512, %edx
 1806      0000
 1807 08f7 8B0490   		movl	(%eax,%edx,4), %eax
 1808 08fa 31C1     		xorl	%eax, %ecx
 1809 08fc 8B45F8   		movl	-8(%ebp), %eax
 1810 08ff 0FB6D0   		movzbl	%al, %edx
 1811 0902 8B4508   		movl	8(%ebp), %eax
 1812 0905 81C20003 		addl	$768, %edx
 1812      0000
 1813 090b 8B0490   		movl	(%eax,%edx,4), %eax
 1814 090e 01C8     		addl	%ecx, %eax
 1815 0910 3145FC   		xorl	%eax, -4(%ebp)
 313:blowfish.c    ****   R (ctx, xr, xl, 10);
 1816              		.loc 1 313 3
 1817 0913 8B4508   		movl	8(%ebp), %eax
 1818 0916 8B802810 		movl	4136(%eax), %eax
 1818      0000
 1819 091c 3145FC   		xorl	%eax, -4(%ebp)
 1820 091f 8B45FC   		movl	-4(%ebp), %eax
 1821 0922 C1E818   		shrl	$24, %eax
 1822 0925 89C2     		movl	%eax, %edx
 1823 0927 8B4508   		movl	8(%ebp), %eax
 1824 092a 8B1490   		movl	(%eax,%edx,4), %edx
 1825 092d 8B45FC   		movl	-4(%ebp), %eax
 1826 0930 C1E810   		shrl	$16, %eax
 1827 0933 0FB6C8   		movzbl	%al, %ecx
 1828 0936 8B4508   		movl	8(%ebp), %eax
 1829 0939 81C10001 		addl	$256, %ecx
 1829      0000
 1830 093f 8B0488   		movl	(%eax,%ecx,4), %eax
 1831 0942 8D0C02   		leal	(%edx,%eax), %ecx
 1832 0945 8B45FC   		movl	-4(%ebp), %eax
 1833 0948 C1E808   		shrl	$8, %eax
 1834 094b 0FB6D0   		movzbl	%al, %edx
 1835 094e 8B4508   		movl	8(%ebp), %eax
 1836 0951 81C20002 		addl	$512, %edx
 1836      0000
 1837 0957 8B0490   		movl	(%eax,%edx,4), %eax
 1838 095a 31C1     		xorl	%eax, %ecx
 1839 095c 8B45FC   		movl	-4(%ebp), %eax
 1840 095f 0FB6D0   		movzbl	%al, %edx
 1841 0962 8B4508   		movl	8(%ebp), %eax
 1842 0965 81C20003 		addl	$768, %edx
 1842      0000
 1843 096b 8B0490   		movl	(%eax,%edx,4), %eax
 1844 096e 01C8     		addl	%ecx, %eax
 1845 0970 3145F8   		xorl	%eax, -8(%ebp)
 314:blowfish.c    ****   R (ctx, xl, xr, 9);
 1846              		.loc 1 314 3
 1847 0973 8B4508   		movl	8(%ebp), %eax
 1848 0976 8B802410 		movl	4132(%eax), %eax
 1848      0000
 1849 097c 3145F8   		xorl	%eax, -8(%ebp)
 1850 097f 8B45F8   		movl	-8(%ebp), %eax
 1851 0982 C1E818   		shrl	$24, %eax
 1852 0985 89C2     		movl	%eax, %edx
 1853 0987 8B4508   		movl	8(%ebp), %eax
 1854 098a 8B1490   		movl	(%eax,%edx,4), %edx
 1855 098d 8B45F8   		movl	-8(%ebp), %eax
 1856 0990 C1E810   		shrl	$16, %eax
 1857 0993 0FB6C8   		movzbl	%al, %ecx
 1858 0996 8B4508   		movl	8(%ebp), %eax
 1859 0999 81C10001 		addl	$256, %ecx
 1859      0000
 1860 099f 8B0488   		movl	(%eax,%ecx,4), %eax
 1861 09a2 8D0C02   		leal	(%edx,%eax), %ecx
 1862 09a5 8B45F8   		movl	-8(%ebp), %eax
 1863 09a8 C1E808   		shrl	$8, %eax
 1864 09ab 0FB6D0   		movzbl	%al, %edx
 1865 09ae 8B4508   		movl	8(%ebp), %eax
 1866 09b1 81C20002 		addl	$512, %edx
 1866      0000
 1867 09b7 8B0490   		movl	(%eax,%edx,4), %eax
 1868 09ba 31C1     		xorl	%eax, %ecx
 1869 09bc 8B45F8   		movl	-8(%ebp), %eax
 1870 09bf 0FB6D0   		movzbl	%al, %edx
 1871 09c2 8B4508   		movl	8(%ebp), %eax
 1872 09c5 81C20003 		addl	$768, %edx
 1872      0000
 1873 09cb 8B0490   		movl	(%eax,%edx,4), %eax
 1874 09ce 01C8     		addl	%ecx, %eax
 1875 09d0 3145FC   		xorl	%eax, -4(%ebp)
 315:blowfish.c    ****   R (ctx, xr, xl, 8);
 1876              		.loc 1 315 3
 1877 09d3 8B4508   		movl	8(%ebp), %eax
 1878 09d6 8B802010 		movl	4128(%eax), %eax
 1878      0000
 1879 09dc 3145FC   		xorl	%eax, -4(%ebp)
 1880 09df 8B45FC   		movl	-4(%ebp), %eax
 1881 09e2 C1E818   		shrl	$24, %eax
 1882 09e5 89C2     		movl	%eax, %edx
 1883 09e7 8B4508   		movl	8(%ebp), %eax
 1884 09ea 8B1490   		movl	(%eax,%edx,4), %edx
 1885 09ed 8B45FC   		movl	-4(%ebp), %eax
 1886 09f0 C1E810   		shrl	$16, %eax
 1887 09f3 0FB6C8   		movzbl	%al, %ecx
 1888 09f6 8B4508   		movl	8(%ebp), %eax
 1889 09f9 81C10001 		addl	$256, %ecx
 1889      0000
 1890 09ff 8B0488   		movl	(%eax,%ecx,4), %eax
 1891 0a02 8D0C02   		leal	(%edx,%eax), %ecx
 1892 0a05 8B45FC   		movl	-4(%ebp), %eax
 1893 0a08 C1E808   		shrl	$8, %eax
 1894 0a0b 0FB6D0   		movzbl	%al, %edx
 1895 0a0e 8B4508   		movl	8(%ebp), %eax
 1896 0a11 81C20002 		addl	$512, %edx
 1896      0000
 1897 0a17 8B0490   		movl	(%eax,%edx,4), %eax
 1898 0a1a 31C1     		xorl	%eax, %ecx
 1899 0a1c 8B45FC   		movl	-4(%ebp), %eax
 1900 0a1f 0FB6D0   		movzbl	%al, %edx
 1901 0a22 8B4508   		movl	8(%ebp), %eax
 1902 0a25 81C20003 		addl	$768, %edx
 1902      0000
 1903 0a2b 8B0490   		movl	(%eax,%edx,4), %eax
 1904 0a2e 01C8     		addl	%ecx, %eax
 1905 0a30 3145F8   		xorl	%eax, -8(%ebp)
 316:blowfish.c    ****   R (ctx, xl, xr, 7);
 1906              		.loc 1 316 3
 1907 0a33 8B4508   		movl	8(%ebp), %eax
 1908 0a36 8B801C10 		movl	4124(%eax), %eax
 1908      0000
 1909 0a3c 3145F8   		xorl	%eax, -8(%ebp)
 1910 0a3f 8B45F8   		movl	-8(%ebp), %eax
 1911 0a42 C1E818   		shrl	$24, %eax
 1912 0a45 89C2     		movl	%eax, %edx
 1913 0a47 8B4508   		movl	8(%ebp), %eax
 1914 0a4a 8B1490   		movl	(%eax,%edx,4), %edx
 1915 0a4d 8B45F8   		movl	-8(%ebp), %eax
 1916 0a50 C1E810   		shrl	$16, %eax
 1917 0a53 0FB6C8   		movzbl	%al, %ecx
 1918 0a56 8B4508   		movl	8(%ebp), %eax
 1919 0a59 81C10001 		addl	$256, %ecx
 1919      0000
 1920 0a5f 8B0488   		movl	(%eax,%ecx,4), %eax
 1921 0a62 8D0C02   		leal	(%edx,%eax), %ecx
 1922 0a65 8B45F8   		movl	-8(%ebp), %eax
 1923 0a68 C1E808   		shrl	$8, %eax
 1924 0a6b 0FB6D0   		movzbl	%al, %edx
 1925 0a6e 8B4508   		movl	8(%ebp), %eax
 1926 0a71 81C20002 		addl	$512, %edx
 1926      0000
 1927 0a77 8B0490   		movl	(%eax,%edx,4), %eax
 1928 0a7a 31C1     		xorl	%eax, %ecx
 1929 0a7c 8B45F8   		movl	-8(%ebp), %eax
 1930 0a7f 0FB6D0   		movzbl	%al, %edx
 1931 0a82 8B4508   		movl	8(%ebp), %eax
 1932 0a85 81C20003 		addl	$768, %edx
 1932      0000
 1933 0a8b 8B0490   		movl	(%eax,%edx,4), %eax
 1934 0a8e 01C8     		addl	%ecx, %eax
 1935 0a90 3145FC   		xorl	%eax, -4(%ebp)
 317:blowfish.c    ****   R (ctx, xr, xl, 6);
 1936              		.loc 1 317 3
 1937 0a93 8B4508   		movl	8(%ebp), %eax
 1938 0a96 8B801810 		movl	4120(%eax), %eax
 1938      0000
 1939 0a9c 3145FC   		xorl	%eax, -4(%ebp)
 1940 0a9f 8B45FC   		movl	-4(%ebp), %eax
 1941 0aa2 C1E818   		shrl	$24, %eax
 1942 0aa5 89C2     		movl	%eax, %edx
 1943 0aa7 8B4508   		movl	8(%ebp), %eax
 1944 0aaa 8B1490   		movl	(%eax,%edx,4), %edx
 1945 0aad 8B45FC   		movl	-4(%ebp), %eax
 1946 0ab0 C1E810   		shrl	$16, %eax
 1947 0ab3 0FB6C8   		movzbl	%al, %ecx
 1948 0ab6 8B4508   		movl	8(%ebp), %eax
 1949 0ab9 81C10001 		addl	$256, %ecx
 1949      0000
 1950 0abf 8B0488   		movl	(%eax,%ecx,4), %eax
 1951 0ac2 8D0C02   		leal	(%edx,%eax), %ecx
 1952 0ac5 8B45FC   		movl	-4(%ebp), %eax
 1953 0ac8 C1E808   		shrl	$8, %eax
 1954 0acb 0FB6D0   		movzbl	%al, %edx
 1955 0ace 8B4508   		movl	8(%ebp), %eax
 1956 0ad1 81C20002 		addl	$512, %edx
 1956      0000
 1957 0ad7 8B0490   		movl	(%eax,%edx,4), %eax
 1958 0ada 31C1     		xorl	%eax, %ecx
 1959 0adc 8B45FC   		movl	-4(%ebp), %eax
 1960 0adf 0FB6D0   		movzbl	%al, %edx
 1961 0ae2 8B4508   		movl	8(%ebp), %eax
 1962 0ae5 81C20003 		addl	$768, %edx
 1962      0000
 1963 0aeb 8B0490   		movl	(%eax,%edx,4), %eax
 1964 0aee 01C8     		addl	%ecx, %eax
 1965 0af0 3145F8   		xorl	%eax, -8(%ebp)
 318:blowfish.c    ****   R (ctx, xl, xr, 5);
 1966              		.loc 1 318 3
 1967 0af3 8B4508   		movl	8(%ebp), %eax
 1968 0af6 8B801410 		movl	4116(%eax), %eax
 1968      0000
 1969 0afc 3145F8   		xorl	%eax, -8(%ebp)
 1970 0aff 8B45F8   		movl	-8(%ebp), %eax
 1971 0b02 C1E818   		shrl	$24, %eax
 1972 0b05 89C2     		movl	%eax, %edx
 1973 0b07 8B4508   		movl	8(%ebp), %eax
 1974 0b0a 8B1490   		movl	(%eax,%edx,4), %edx
 1975 0b0d 8B45F8   		movl	-8(%ebp), %eax
 1976 0b10 C1E810   		shrl	$16, %eax
 1977 0b13 0FB6C8   		movzbl	%al, %ecx
 1978 0b16 8B4508   		movl	8(%ebp), %eax
 1979 0b19 81C10001 		addl	$256, %ecx
 1979      0000
 1980 0b1f 8B0488   		movl	(%eax,%ecx,4), %eax
 1981 0b22 8D0C02   		leal	(%edx,%eax), %ecx
 1982 0b25 8B45F8   		movl	-8(%ebp), %eax
 1983 0b28 C1E808   		shrl	$8, %eax
 1984 0b2b 0FB6D0   		movzbl	%al, %edx
 1985 0b2e 8B4508   		movl	8(%ebp), %eax
 1986 0b31 81C20002 		addl	$512, %edx
 1986      0000
 1987 0b37 8B0490   		movl	(%eax,%edx,4), %eax
 1988 0b3a 31C1     		xorl	%eax, %ecx
 1989 0b3c 8B45F8   		movl	-8(%ebp), %eax
 1990 0b3f 0FB6D0   		movzbl	%al, %edx
 1991 0b42 8B4508   		movl	8(%ebp), %eax
 1992 0b45 81C20003 		addl	$768, %edx
 1992      0000
 1993 0b4b 8B0490   		movl	(%eax,%edx,4), %eax
 1994 0b4e 01C8     		addl	%ecx, %eax
 1995 0b50 3145FC   		xorl	%eax, -4(%ebp)
 319:blowfish.c    ****   R (ctx, xr, xl, 4);
 1996              		.loc 1 319 3
 1997 0b53 8B4508   		movl	8(%ebp), %eax
 1998 0b56 8B801010 		movl	4112(%eax), %eax
 1998      0000
 1999 0b5c 3145FC   		xorl	%eax, -4(%ebp)
 2000 0b5f 8B45FC   		movl	-4(%ebp), %eax
 2001 0b62 C1E818   		shrl	$24, %eax
 2002 0b65 89C2     		movl	%eax, %edx
 2003 0b67 8B4508   		movl	8(%ebp), %eax
 2004 0b6a 8B1490   		movl	(%eax,%edx,4), %edx
 2005 0b6d 8B45FC   		movl	-4(%ebp), %eax
 2006 0b70 C1E810   		shrl	$16, %eax
 2007 0b73 0FB6C8   		movzbl	%al, %ecx
 2008 0b76 8B4508   		movl	8(%ebp), %eax
 2009 0b79 81C10001 		addl	$256, %ecx
 2009      0000
 2010 0b7f 8B0488   		movl	(%eax,%ecx,4), %eax
 2011 0b82 8D0C02   		leal	(%edx,%eax), %ecx
 2012 0b85 8B45FC   		movl	-4(%ebp), %eax
 2013 0b88 C1E808   		shrl	$8, %eax
 2014 0b8b 0FB6D0   		movzbl	%al, %edx
 2015 0b8e 8B4508   		movl	8(%ebp), %eax
 2016 0b91 81C20002 		addl	$512, %edx
 2016      0000
 2017 0b97 8B0490   		movl	(%eax,%edx,4), %eax
 2018 0b9a 31C1     		xorl	%eax, %ecx
 2019 0b9c 8B45FC   		movl	-4(%ebp), %eax
 2020 0b9f 0FB6D0   		movzbl	%al, %edx
 2021 0ba2 8B4508   		movl	8(%ebp), %eax
 2022 0ba5 81C20003 		addl	$768, %edx
 2022      0000
 2023 0bab 8B0490   		movl	(%eax,%edx,4), %eax
 2024 0bae 01C8     		addl	%ecx, %eax
 2025 0bb0 3145F8   		xorl	%eax, -8(%ebp)
 320:blowfish.c    ****   R (ctx, xl, xr, 3);
 2026              		.loc 1 320 3
 2027 0bb3 8B4508   		movl	8(%ebp), %eax
 2028 0bb6 8B800C10 		movl	4108(%eax), %eax
 2028      0000
 2029 0bbc 3145F8   		xorl	%eax, -8(%ebp)
 2030 0bbf 8B45F8   		movl	-8(%ebp), %eax
 2031 0bc2 C1E818   		shrl	$24, %eax
 2032 0bc5 89C2     		movl	%eax, %edx
 2033 0bc7 8B4508   		movl	8(%ebp), %eax
 2034 0bca 8B1490   		movl	(%eax,%edx,4), %edx
 2035 0bcd 8B45F8   		movl	-8(%ebp), %eax
 2036 0bd0 C1E810   		shrl	$16, %eax
 2037 0bd3 0FB6C8   		movzbl	%al, %ecx
 2038 0bd6 8B4508   		movl	8(%ebp), %eax
 2039 0bd9 81C10001 		addl	$256, %ecx
 2039      0000
 2040 0bdf 8B0488   		movl	(%eax,%ecx,4), %eax
 2041 0be2 8D0C02   		leal	(%edx,%eax), %ecx
 2042 0be5 8B45F8   		movl	-8(%ebp), %eax
 2043 0be8 C1E808   		shrl	$8, %eax
 2044 0beb 0FB6D0   		movzbl	%al, %edx
 2045 0bee 8B4508   		movl	8(%ebp), %eax
 2046 0bf1 81C20002 		addl	$512, %edx
 2046      0000
 2047 0bf7 8B0490   		movl	(%eax,%edx,4), %eax
 2048 0bfa 31C1     		xorl	%eax, %ecx
 2049 0bfc 8B45F8   		movl	-8(%ebp), %eax
 2050 0bff 0FB6D0   		movzbl	%al, %edx
 2051 0c02 8B4508   		movl	8(%ebp), %eax
 2052 0c05 81C20003 		addl	$768, %edx
 2052      0000
 2053 0c0b 8B0490   		movl	(%eax,%edx,4), %eax
 2054 0c0e 01C8     		addl	%ecx, %eax
 2055 0c10 3145FC   		xorl	%eax, -4(%ebp)
 321:blowfish.c    ****   R (ctx, xr, xl, 2);
 2056              		.loc 1 321 3
 2057 0c13 8B4508   		movl	8(%ebp), %eax
 2058 0c16 8B800810 		movl	4104(%eax), %eax
 2058      0000
 2059 0c1c 3145FC   		xorl	%eax, -4(%ebp)
 2060 0c1f 8B45FC   		movl	-4(%ebp), %eax
 2061 0c22 C1E818   		shrl	$24, %eax
 2062 0c25 89C2     		movl	%eax, %edx
 2063 0c27 8B4508   		movl	8(%ebp), %eax
 2064 0c2a 8B1490   		movl	(%eax,%edx,4), %edx
 2065 0c2d 8B45FC   		movl	-4(%ebp), %eax
 2066 0c30 C1E810   		shrl	$16, %eax
 2067 0c33 0FB6C8   		movzbl	%al, %ecx
 2068 0c36 8B4508   		movl	8(%ebp), %eax
 2069 0c39 81C10001 		addl	$256, %ecx
 2069      0000
 2070 0c3f 8B0488   		movl	(%eax,%ecx,4), %eax
 2071 0c42 8D0C02   		leal	(%edx,%eax), %ecx
 2072 0c45 8B45FC   		movl	-4(%ebp), %eax
 2073 0c48 C1E808   		shrl	$8, %eax
 2074 0c4b 0FB6D0   		movzbl	%al, %edx
 2075 0c4e 8B4508   		movl	8(%ebp), %eax
 2076 0c51 81C20002 		addl	$512, %edx
 2076      0000
 2077 0c57 8B0490   		movl	(%eax,%edx,4), %eax
 2078 0c5a 31C1     		xorl	%eax, %ecx
 2079 0c5c 8B45FC   		movl	-4(%ebp), %eax
 2080 0c5f 0FB6D0   		movzbl	%al, %edx
 2081 0c62 8B4508   		movl	8(%ebp), %eax
 2082 0c65 81C20003 		addl	$768, %edx
 2082      0000
 2083 0c6b 8B0490   		movl	(%eax,%edx,4), %eax
 2084 0c6e 01C8     		addl	%ecx, %eax
 2085 0c70 3145F8   		xorl	%eax, -8(%ebp)
 322:blowfish.c    **** 
 323:blowfish.c    ****   xl ^= ctx->p[1];
 2086              		.loc 1 323 15
 2087 0c73 8B4508   		movl	8(%ebp), %eax
 2088 0c76 8B800410 		movl	4100(%eax), %eax
 2088      0000
 2089              		.loc 1 323 6
 2090 0c7c 3145F8   		xorl	%eax, -8(%ebp)
 324:blowfish.c    ****   xr ^= ctx->p[0];
 2091              		.loc 1 324 15
 2092 0c7f 8B4508   		movl	8(%ebp), %eax
 2093 0c82 8B800010 		movl	4096(%eax), %eax
 2093      0000
 2094              		.loc 1 324 6
 2095 0c88 3145FC   		xorl	%eax, -4(%ebp)
 325:blowfish.c    **** 
 326:blowfish.c    ****   *ret_xl = xr;
 2096              		.loc 1 326 11
 2097 0c8b 8B450C   		movl	12(%ebp), %eax
 2098 0c8e 8B55FC   		movl	-4(%ebp), %edx
 2099 0c91 8910     		movl	%edx, (%eax)
 327:blowfish.c    ****   *ret_xr = xl;
 2100              		.loc 1 327 11
 2101 0c93 8B4510   		movl	16(%ebp), %eax
 2102 0c96 8B55F8   		movl	-8(%ebp), %edx
 2103 0c99 8910     		movl	%edx, (%eax)
 328:blowfish.c    **** }
 2104              		.loc 1 328 1
 2105 0c9b 90       		nop
 2106 0c9c C9       		leave
 2107              		.cfi_restore 5
 2108              		.cfi_def_cfa 4, 4
 2109 0c9d C3       		ret
 2110              		.cfi_endproc
 2111              	.LFE1:
 2113              		.section	.rodata
 2114              	.LC0:
 2115 1048 626C6F77 		.string	"blowfish.c"
 2115      66697368 
 2115      2E6300
 2116              	.LC1:
 2117 1053 2128286C 		.string	"!((length) % (8))"
 2117      656E6774 
 2117      68292025 
 2117      20283829 
 2117      2900
 2118              		.text
 2119              		.globl	nettle_blowfish_encrypt
 2121              	nettle_blowfish_encrypt:
 2122              	.LFB2:
 329:blowfish.c    **** 
 330:blowfish.c    **** #undef F
 331:blowfish.c    **** #undef R
 332:blowfish.c    **** 
 333:blowfish.c    **** void
 334:blowfish.c    **** blowfish_encrypt (const struct blowfish_ctx *ctx,
 335:blowfish.c    **** 		  size_t length, uint8_t * dst, const uint8_t * src)
 336:blowfish.c    **** {
 2123              		.loc 1 336 1
 2124              		.cfi_startproc
 2125 0c9e F30F1EFB 		endbr32
 2126 0ca2 55       		pushl	%ebp
 2127              		.cfi_def_cfa_offset 8
 2128              		.cfi_offset 5, -8
 2129 0ca3 89E5     		movl	%esp, %ebp
 2130              		.cfi_def_cfa_register 5
 2131 0ca5 53       		pushl	%ebx
 2132 0ca6 83EC24   		subl	$36, %esp
 2133              		.cfi_offset 3, -12
 2134 0ca9 E8FCFFFF 		call	__x86.get_pc_thunk.ax
 2134      FF
 2135 0cae 05010000 		addl	$_GLOBAL_OFFSET_TABLE_, %eax
 2135      00
 2136 0cb3 8B5508   		movl	8(%ebp), %edx
 2137 0cb6 8955E4   		movl	%edx, -28(%ebp)
 2138 0cb9 8B5510   		movl	16(%ebp), %edx
 2139 0cbc 8955E0   		movl	%edx, -32(%ebp)
 2140 0cbf 8B5514   		movl	20(%ebp), %edx
 2141 0cc2 8955DC   		movl	%edx, -36(%ebp)
 2142              		.loc 1 336 1
 2143 0cc5 658B0D14 		movl	%gs:20, %ecx
 2143      000000
 2144 0ccc 894DF4   		movl	%ecx, -12(%ebp)
 2145 0ccf 31C9     		xorl	%ecx, %ecx
 337:blowfish.c    ****   FOR_BLOCKS (length, dst, src, BLOWFISH_BLOCK_SIZE)
 2146              		.loc 1 337 3
 2147 0cd1 8B550C   		movl	12(%ebp), %edx
 2148 0cd4 83E207   		andl	$7, %edx
 2149 0cd7 85D2     		testl	%edx, %edx
 2150 0cd9 0F843B01 		je	.L5
 2150      0000
 2151              		.loc 1 337 3 is_stmt 0 discriminator 1
 2152 0cdf 8D906810 		leal	__PRETTY_FUNCTION__.1732@GOTOFF(%eax), %edx
 2152      0000
 2153 0ce5 52       		pushl	%edx
 2154 0ce6 68510100 		pushl	$337
 2154      00
 2155 0ceb 8D904810 		leal	.LC0@GOTOFF(%eax), %edx
 2155      0000
 2156 0cf1 52       		pushl	%edx
 2157 0cf2 8D905310 		leal	.LC1@GOTOFF(%eax), %edx
 2157      0000
 2158 0cf8 52       		pushl	%edx
 2159 0cf9 89C3     		movl	%eax, %ebx
 2160 0cfb E8FCFFFF 		call	__assert_fail@PLT
 2160      FF
 2161              	.L6:
 2162              	.LBB2:
 338:blowfish.c    ****     {
 339:blowfish.c    ****       uint32_t d1, d2;
 340:blowfish.c    **** 
 341:blowfish.c    ****       d1 = READ_UINT32(src);
 2163              		.loc 1 341 12 is_stmt 1 discriminator 3
 2164 0d00 8B45DC   		movl	-36(%ebp), %eax
 2165 0d03 0FB600   		movzbl	(%eax), %eax
 2166 0d06 0FB6C0   		movzbl	%al, %eax
 2167 0d09 C1E018   		sall	$24, %eax
 2168 0d0c 89C2     		movl	%eax, %edx
 2169 0d0e 8B45DC   		movl	-36(%ebp), %eax
 2170 0d11 83C001   		addl	$1, %eax
 2171 0d14 0FB600   		movzbl	(%eax), %eax
 2172 0d17 0FB6C0   		movzbl	%al, %eax
 2173 0d1a C1E010   		sall	$16, %eax
 2174 0d1d 09C2     		orl	%eax, %edx
 2175 0d1f 8B45DC   		movl	-36(%ebp), %eax
 2176 0d22 83C002   		addl	$2, %eax
 2177 0d25 0FB600   		movzbl	(%eax), %eax
 2178 0d28 0FB6C0   		movzbl	%al, %eax
 2179 0d2b C1E008   		sall	$8, %eax
 2180 0d2e 09C2     		orl	%eax, %edx
 2181 0d30 8B45DC   		movl	-36(%ebp), %eax
 2182 0d33 83C003   		addl	$3, %eax
 2183 0d36 0FB600   		movzbl	(%eax), %eax
 2184 0d39 0FB6C0   		movzbl	%al, %eax
 2185 0d3c 09D0     		orl	%edx, %eax
 2186              		.loc 1 341 10 discriminator 3
 2187 0d3e 8945EC   		movl	%eax, -20(%ebp)
 342:blowfish.c    ****       d2 = READ_UINT32(src+4);
 2188              		.loc 1 342 12 discriminator 3
 2189 0d41 8B45DC   		movl	-36(%ebp), %eax
 2190 0d44 83C004   		addl	$4, %eax
 2191 0d47 0FB600   		movzbl	(%eax), %eax
 2192 0d4a 0FB6C0   		movzbl	%al, %eax
 2193 0d4d C1E018   		sall	$24, %eax
 2194 0d50 89C2     		movl	%eax, %edx
 2195 0d52 8B45DC   		movl	-36(%ebp), %eax
 2196 0d55 83C005   		addl	$5, %eax
 2197 0d58 0FB600   		movzbl	(%eax), %eax
 2198 0d5b 0FB6C0   		movzbl	%al, %eax
 2199 0d5e C1E010   		sall	$16, %eax
 2200 0d61 09C2     		orl	%eax, %edx
 2201 0d63 8B45DC   		movl	-36(%ebp), %eax
 2202 0d66 83C006   		addl	$6, %eax
 2203 0d69 0FB600   		movzbl	(%eax), %eax
 2204 0d6c 0FB6C0   		movzbl	%al, %eax
 2205 0d6f C1E008   		sall	$8, %eax
 2206 0d72 09C2     		orl	%eax, %edx
 2207 0d74 8B45DC   		movl	-36(%ebp), %eax
 2208 0d77 83C007   		addl	$7, %eax
 2209 0d7a 0FB600   		movzbl	(%eax), %eax
 2210 0d7d 0FB6C0   		movzbl	%al, %eax
 2211 0d80 09D0     		orl	%edx, %eax
 2212              		.loc 1 342 10 discriminator 3
 2213 0d82 8945F0   		movl	%eax, -16(%ebp)
 343:blowfish.c    ****       _nettle_blowfish_encround (ctx, &d1, &d2);
 2214              		.loc 1 343 7 discriminator 3
 2215 0d85 83EC04   		subl	$4, %esp
 2216 0d88 8D45F0   		leal	-16(%ebp), %eax
 2217 0d8b 50       		pushl	%eax
 2218 0d8c 8D45EC   		leal	-20(%ebp), %eax
 2219 0d8f 50       		pushl	%eax
 2220 0d90 FF75E4   		pushl	-28(%ebp)
 2221 0d93 E8FCFFFF 		call	_nettle_blowfish_encround
 2221      FF
 2222 0d98 83C410   		addl	$16, %esp
 344:blowfish.c    ****       dst[0] = (d1 >> 24) & 0xff;
 2223              		.loc 1 344 27 discriminator 3
 2224 0d9b 8B45EC   		movl	-20(%ebp), %eax
 2225 0d9e C1E818   		shrl	$24, %eax
 2226              		.loc 1 344 14 discriminator 3
 2227 0da1 89C2     		movl	%eax, %edx
 2228 0da3 8B45E0   		movl	-32(%ebp), %eax
 2229 0da6 8810     		movb	%dl, (%eax)
 345:blowfish.c    ****       dst[1] = (d1 >> 16) & 0xff;
 2230              		.loc 1 345 20 discriminator 3
 2231 0da8 8B45EC   		movl	-20(%ebp), %eax
 2232 0dab C1E810   		shrl	$16, %eax
 2233 0dae 89C2     		movl	%eax, %edx
 2234              		.loc 1 345 10 discriminator 3
 2235 0db0 8B45E0   		movl	-32(%ebp), %eax
 2236 0db3 83C001   		addl	$1, %eax
 2237              		.loc 1 345 14 discriminator 3
 2238 0db6 8810     		movb	%dl, (%eax)
 346:blowfish.c    ****       dst[2] = (d1 >> 8) & 0xff;
 2239              		.loc 1 346 20 discriminator 3
 2240 0db8 8B45EC   		movl	-20(%ebp), %eax
 2241 0dbb C1E808   		shrl	$8, %eax
 2242 0dbe 89C2     		movl	%eax, %edx
 2243              		.loc 1 346 10 discriminator 3
 2244 0dc0 8B45E0   		movl	-32(%ebp), %eax
 2245 0dc3 83C002   		addl	$2, %eax
 2246              		.loc 1 346 14 discriminator 3
 2247 0dc6 8810     		movb	%dl, (%eax)
 347:blowfish.c    ****       dst[3] = d1 & 0xff;
 2248              		.loc 1 347 14 discriminator 3
 2249 0dc8 8B55EC   		movl	-20(%ebp), %edx
 2250              		.loc 1 347 10 discriminator 3
 2251 0dcb 8B45E0   		movl	-32(%ebp), %eax
 2252 0dce 83C003   		addl	$3, %eax
 2253              		.loc 1 347 14 discriminator 3
 2254 0dd1 8810     		movb	%dl, (%eax)
 348:blowfish.c    ****       dst[4] = (d2 >> 24) & 0xff;
 2255              		.loc 1 348 27 discriminator 3
 2256 0dd3 8B45F0   		movl	-16(%ebp), %eax
 2257 0dd6 C1E818   		shrl	$24, %eax
 2258 0dd9 89C2     		movl	%eax, %edx
 2259              		.loc 1 348 10 discriminator 3
 2260 0ddb 8B45E0   		movl	-32(%ebp), %eax
 2261 0dde 83C004   		addl	$4, %eax
 2262              		.loc 1 348 14 discriminator 3
 2263 0de1 8810     		movb	%dl, (%eax)
 349:blowfish.c    ****       dst[5] = (d2 >> 16) & 0xff;
 2264              		.loc 1 349 20 discriminator 3
 2265 0de3 8B45F0   		movl	-16(%ebp), %eax
 2266 0de6 C1E810   		shrl	$16, %eax
 2267 0de9 89C2     		movl	%eax, %edx
 2268              		.loc 1 349 10 discriminator 3
 2269 0deb 8B45E0   		movl	-32(%ebp), %eax
 2270 0dee 83C005   		addl	$5, %eax
 2271              		.loc 1 349 14 discriminator 3
 2272 0df1 8810     		movb	%dl, (%eax)
 350:blowfish.c    ****       dst[6] = (d2 >> 8) & 0xff;
 2273              		.loc 1 350 20 discriminator 3
 2274 0df3 8B45F0   		movl	-16(%ebp), %eax
 2275 0df6 C1E808   		shrl	$8, %eax
 2276 0df9 89C2     		movl	%eax, %edx
 2277              		.loc 1 350 10 discriminator 3
 2278 0dfb 8B45E0   		movl	-32(%ebp), %eax
 2279 0dfe 83C006   		addl	$6, %eax
 2280              		.loc 1 350 14 discriminator 3
 2281 0e01 8810     		movb	%dl, (%eax)
 351:blowfish.c    ****       dst[7] = d2 & 0xff;
 2282              		.loc 1 351 14 discriminator 3
 2283 0e03 8B55F0   		movl	-16(%ebp), %edx
 2284              		.loc 1 351 10 discriminator 3
 2285 0e06 8B45E0   		movl	-32(%ebp), %eax
 2286 0e09 83C007   		addl	$7, %eax
 2287              		.loc 1 351 14 discriminator 3
 2288 0e0c 8810     		movb	%dl, (%eax)
 2289              	.LBE2:
 337:blowfish.c    ****     {
 2290              		.loc 1 337 3 discriminator 3
 2291 0e0e 836D0C08 		subl	$8, 12(%ebp)
 2292 0e12 8345E008 		addl	$8, -32(%ebp)
 2293 0e16 8345DC08 		addl	$8, -36(%ebp)
 2294              	.L5:
 337:blowfish.c    ****     {
 2295              		.loc 1 337 3 is_stmt 0 discriminator 2
 2296 0e1a 837D0C00 		cmpl	$0, 12(%ebp)
 2297 0e1e 0F85DCFE 		jne	.L6
 2297      FFFF
 352:blowfish.c    ****     }
 353:blowfish.c    **** }
 2298              		.loc 1 353 1 is_stmt 1
 2299 0e24 90       		nop
 2300 0e25 8B45F4   		movl	-12(%ebp), %eax
 2301 0e28 65330514 		xorl	%gs:20, %eax
 2301      000000
 2302 0e2f 7405     		je	.L7
 2303 0e31 E8FCFFFF 		call	__stack_chk_fail_local
 2303      FF
 2304              	.L7:
 2305 0e36 8B5DFC   		movl	-4(%ebp), %ebx
 2306 0e39 C9       		leave
 2307              		.cfi_restore 5
 2308              		.cfi_restore 3
 2309              		.cfi_def_cfa 4, 4
 2310 0e3a C3       		ret
 2311              		.cfi_endproc
 2312              	.LFE2:
 2314              		.globl	nettle_blowfish_decrypt
 2316              	nettle_blowfish_decrypt:
 2317              	.LFB3:
 354:blowfish.c    **** 
 355:blowfish.c    **** void
 356:blowfish.c    **** blowfish_decrypt (const struct blowfish_ctx *ctx,
 357:blowfish.c    **** 		  size_t length, uint8_t * dst, const uint8_t * src)
 358:blowfish.c    **** {
 2318              		.loc 1 358 1
 2319              		.cfi_startproc
 2320 0e3b F30F1EFB 		endbr32
 2321 0e3f 55       		pushl	%ebp
 2322              		.cfi_def_cfa_offset 8
 2323              		.cfi_offset 5, -8
 2324 0e40 89E5     		movl	%esp, %ebp
 2325              		.cfi_def_cfa_register 5
 2326 0e42 53       		pushl	%ebx
 2327 0e43 83EC24   		subl	$36, %esp
 2328              		.cfi_offset 3, -12
 2329 0e46 E8FCFFFF 		call	__x86.get_pc_thunk.ax
 2329      FF
 2330 0e4b 05010000 		addl	$_GLOBAL_OFFSET_TABLE_, %eax
 2330      00
 2331 0e50 8B5508   		movl	8(%ebp), %edx
 2332 0e53 8955E4   		movl	%edx, -28(%ebp)
 2333 0e56 8B5510   		movl	16(%ebp), %edx
 2334 0e59 8955E0   		movl	%edx, -32(%ebp)
 2335 0e5c 8B5514   		movl	20(%ebp), %edx
 2336 0e5f 8955DC   		movl	%edx, -36(%ebp)
 2337              		.loc 1 358 1
 2338 0e62 658B0D14 		movl	%gs:20, %ecx
 2338      000000
 2339 0e69 894DF4   		movl	%ecx, -12(%ebp)
 2340 0e6c 31C9     		xorl	%ecx, %ecx
 359:blowfish.c    ****   FOR_BLOCKS (length, dst, src, BLOWFISH_BLOCK_SIZE)
 2341              		.loc 1 359 3
 2342 0e6e 8B550C   		movl	12(%ebp), %edx
 2343 0e71 83E207   		andl	$7, %edx
 2344 0e74 85D2     		testl	%edx, %edx
 2345 0e76 0F843B01 		je	.L10
 2345      0000
 2346              		.loc 1 359 3 is_stmt 0 discriminator 1
 2347 0e7c 8D908010 		leal	__PRETTY_FUNCTION__.1744@GOTOFF(%eax), %edx
 2347      0000
 2348 0e82 52       		pushl	%edx
 2349 0e83 68670100 		pushl	$359
 2349      00
 2350 0e88 8D904810 		leal	.LC0@GOTOFF(%eax), %edx
 2350      0000
 2351 0e8e 52       		pushl	%edx
 2352 0e8f 8D905310 		leal	.LC1@GOTOFF(%eax), %edx
 2352      0000
 2353 0e95 52       		pushl	%edx
 2354 0e96 89C3     		movl	%eax, %ebx
 2355 0e98 E8FCFFFF 		call	__assert_fail@PLT
 2355      FF
 2356              	.L11:
 2357              	.LBB3:
 360:blowfish.c    ****     {
 361:blowfish.c    ****       uint32_t d1, d2;
 362:blowfish.c    **** 
 363:blowfish.c    ****       d1 = READ_UINT32(src);
 2358              		.loc 1 363 12 is_stmt 1 discriminator 3
 2359 0e9d 8B45DC   		movl	-36(%ebp), %eax
 2360 0ea0 0FB600   		movzbl	(%eax), %eax
 2361 0ea3 0FB6C0   		movzbl	%al, %eax
 2362 0ea6 C1E018   		sall	$24, %eax
 2363 0ea9 89C2     		movl	%eax, %edx
 2364 0eab 8B45DC   		movl	-36(%ebp), %eax
 2365 0eae 83C001   		addl	$1, %eax
 2366 0eb1 0FB600   		movzbl	(%eax), %eax
 2367 0eb4 0FB6C0   		movzbl	%al, %eax
 2368 0eb7 C1E010   		sall	$16, %eax
 2369 0eba 09C2     		orl	%eax, %edx
 2370 0ebc 8B45DC   		movl	-36(%ebp), %eax
 2371 0ebf 83C002   		addl	$2, %eax
 2372 0ec2 0FB600   		movzbl	(%eax), %eax
 2373 0ec5 0FB6C0   		movzbl	%al, %eax
 2374 0ec8 C1E008   		sall	$8, %eax
 2375 0ecb 09C2     		orl	%eax, %edx
 2376 0ecd 8B45DC   		movl	-36(%ebp), %eax
 2377 0ed0 83C003   		addl	$3, %eax
 2378 0ed3 0FB600   		movzbl	(%eax), %eax
 2379 0ed6 0FB6C0   		movzbl	%al, %eax
 2380 0ed9 09D0     		orl	%edx, %eax
 2381              		.loc 1 363 10 discriminator 3
 2382 0edb 8945EC   		movl	%eax, -20(%ebp)
 364:blowfish.c    ****       d2 = READ_UINT32(src+4);
 2383              		.loc 1 364 12 discriminator 3
 2384 0ede 8B45DC   		movl	-36(%ebp), %eax
 2385 0ee1 83C004   		addl	$4, %eax
 2386 0ee4 0FB600   		movzbl	(%eax), %eax
 2387 0ee7 0FB6C0   		movzbl	%al, %eax
 2388 0eea C1E018   		sall	$24, %eax
 2389 0eed 89C2     		movl	%eax, %edx
 2390 0eef 8B45DC   		movl	-36(%ebp), %eax
 2391 0ef2 83C005   		addl	$5, %eax
 2392 0ef5 0FB600   		movzbl	(%eax), %eax
 2393 0ef8 0FB6C0   		movzbl	%al, %eax
 2394 0efb C1E010   		sall	$16, %eax
 2395 0efe 09C2     		orl	%eax, %edx
 2396 0f00 8B45DC   		movl	-36(%ebp), %eax
 2397 0f03 83C006   		addl	$6, %eax
 2398 0f06 0FB600   		movzbl	(%eax), %eax
 2399 0f09 0FB6C0   		movzbl	%al, %eax
 2400 0f0c C1E008   		sall	$8, %eax
 2401 0f0f 09C2     		orl	%eax, %edx
 2402 0f11 8B45DC   		movl	-36(%ebp), %eax
 2403 0f14 83C007   		addl	$7, %eax
 2404 0f17 0FB600   		movzbl	(%eax), %eax
 2405 0f1a 0FB6C0   		movzbl	%al, %eax
 2406 0f1d 09D0     		orl	%edx, %eax
 2407              		.loc 1 364 10 discriminator 3
 2408 0f1f 8945F0   		movl	%eax, -16(%ebp)
 365:blowfish.c    ****       decround (ctx, &d1, &d2);
 2409              		.loc 1 365 7 discriminator 3
 2410 0f22 83EC04   		subl	$4, %esp
 2411 0f25 8D45F0   		leal	-16(%ebp), %eax
 2412 0f28 50       		pushl	%eax
 2413 0f29 8D45EC   		leal	-20(%ebp), %eax
 2414 0f2c 50       		pushl	%eax
 2415 0f2d FF75E4   		pushl	-28(%ebp)
 2416 0f30 E81AF7FF 		call	decround
 2416      FF
 2417 0f35 83C410   		addl	$16, %esp
 366:blowfish.c    ****       dst[0] = (d1 >> 24) & 0xff;
 2418              		.loc 1 366 27 discriminator 3
 2419 0f38 8B45EC   		movl	-20(%ebp), %eax
 2420 0f3b C1E818   		shrl	$24, %eax
 2421              		.loc 1 366 14 discriminator 3
 2422 0f3e 89C2     		movl	%eax, %edx
 2423 0f40 8B45E0   		movl	-32(%ebp), %eax
 2424 0f43 8810     		movb	%dl, (%eax)
 367:blowfish.c    ****       dst[1] = (d1 >> 16) & 0xff;
 2425              		.loc 1 367 20 discriminator 3
 2426 0f45 8B45EC   		movl	-20(%ebp), %eax
 2427 0f48 C1E810   		shrl	$16, %eax
 2428 0f4b 89C2     		movl	%eax, %edx
 2429              		.loc 1 367 10 discriminator 3
 2430 0f4d 8B45E0   		movl	-32(%ebp), %eax
 2431 0f50 83C001   		addl	$1, %eax
 2432              		.loc 1 367 14 discriminator 3
 2433 0f53 8810     		movb	%dl, (%eax)
 368:blowfish.c    ****       dst[2] = (d1 >> 8) & 0xff;
 2434              		.loc 1 368 20 discriminator 3
 2435 0f55 8B45EC   		movl	-20(%ebp), %eax
 2436 0f58 C1E808   		shrl	$8, %eax
 2437 0f5b 89C2     		movl	%eax, %edx
 2438              		.loc 1 368 10 discriminator 3
 2439 0f5d 8B45E0   		movl	-32(%ebp), %eax
 2440 0f60 83C002   		addl	$2, %eax
 2441              		.loc 1 368 14 discriminator 3
 2442 0f63 8810     		movb	%dl, (%eax)
 369:blowfish.c    ****       dst[3] = d1 & 0xff;
 2443              		.loc 1 369 14 discriminator 3
 2444 0f65 8B55EC   		movl	-20(%ebp), %edx
 2445              		.loc 1 369 10 discriminator 3
 2446 0f68 8B45E0   		movl	-32(%ebp), %eax
 2447 0f6b 83C003   		addl	$3, %eax
 2448              		.loc 1 369 14 discriminator 3
 2449 0f6e 8810     		movb	%dl, (%eax)
 370:blowfish.c    ****       dst[4] = (d2 >> 24) & 0xff;
 2450              		.loc 1 370 27 discriminator 3
 2451 0f70 8B45F0   		movl	-16(%ebp), %eax
 2452 0f73 C1E818   		shrl	$24, %eax
 2453 0f76 89C2     		movl	%eax, %edx
 2454              		.loc 1 370 10 discriminator 3
 2455 0f78 8B45E0   		movl	-32(%ebp), %eax
 2456 0f7b 83C004   		addl	$4, %eax
 2457              		.loc 1 370 14 discriminator 3
 2458 0f7e 8810     		movb	%dl, (%eax)
 371:blowfish.c    ****       dst[5] = (d2 >> 16) & 0xff;
 2459              		.loc 1 371 20 discriminator 3
 2460 0f80 8B45F0   		movl	-16(%ebp), %eax
 2461 0f83 C1E810   		shrl	$16, %eax
 2462 0f86 89C2     		movl	%eax, %edx
 2463              		.loc 1 371 10 discriminator 3
 2464 0f88 8B45E0   		movl	-32(%ebp), %eax
 2465 0f8b 83C005   		addl	$5, %eax
 2466              		.loc 1 371 14 discriminator 3
 2467 0f8e 8810     		movb	%dl, (%eax)
 372:blowfish.c    ****       dst[6] = (d2 >> 8) & 0xff;
 2468              		.loc 1 372 20 discriminator 3
 2469 0f90 8B45F0   		movl	-16(%ebp), %eax
 2470 0f93 C1E808   		shrl	$8, %eax
 2471 0f96 89C2     		movl	%eax, %edx
 2472              		.loc 1 372 10 discriminator 3
 2473 0f98 8B45E0   		movl	-32(%ebp), %eax
 2474 0f9b 83C006   		addl	$6, %eax
 2475              		.loc 1 372 14 discriminator 3
 2476 0f9e 8810     		movb	%dl, (%eax)
 373:blowfish.c    ****       dst[7] = d2 & 0xff;
 2477              		.loc 1 373 14 discriminator 3
 2478 0fa0 8B55F0   		movl	-16(%ebp), %edx
 2479              		.loc 1 373 10 discriminator 3
 2480 0fa3 8B45E0   		movl	-32(%ebp), %eax
 2481 0fa6 83C007   		addl	$7, %eax
 2482              		.loc 1 373 14 discriminator 3
 2483 0fa9 8810     		movb	%dl, (%eax)
 2484              	.LBE3:
 359:blowfish.c    ****     {
 2485              		.loc 1 359 3 discriminator 3
 2486 0fab 836D0C08 		subl	$8, 12(%ebp)
 2487 0faf 8345E008 		addl	$8, -32(%ebp)
 2488 0fb3 8345DC08 		addl	$8, -36(%ebp)
 2489              	.L10:
 359:blowfish.c    ****     {
 2490              		.loc 1 359 3 is_stmt 0 discriminator 2
 2491 0fb7 837D0C00 		cmpl	$0, 12(%ebp)
 2492 0fbb 0F85DCFE 		jne	.L11
 2492      FFFF
 374:blowfish.c    ****     }
 375:blowfish.c    **** }
 2493              		.loc 1 375 1 is_stmt 1
 2494 0fc1 90       		nop
 2495 0fc2 8B45F4   		movl	-12(%ebp), %eax
 2496 0fc5 65330514 		xorl	%gs:20, %eax
 2496      000000
 2497 0fcc 7405     		je	.L12
 2498 0fce E8FCFFFF 		call	__stack_chk_fail_local
 2498      FF
 2499              	.L12:
 2500 0fd3 8B5DFC   		movl	-4(%ebp), %ebx
 2501 0fd6 C9       		leave
 2502              		.cfi_restore 5
 2503              		.cfi_restore 3
 2504              		.cfi_def_cfa 4, 4
 2505 0fd7 C3       		ret
 2506              		.cfi_endproc
 2507              	.LFE3:
 2509              		.globl	nettle_blowfish_set_key
 2511              	nettle_blowfish_set_key:
 2512              	.LFB4:
 376:blowfish.c    **** 
 377:blowfish.c    **** int
 378:blowfish.c    **** blowfish_set_key (struct blowfish_ctx *ctx,
 379:blowfish.c    **** 		  size_t length, const uint8_t * key)
 380:blowfish.c    **** {
 2513              		.loc 1 380 1
 2514              		.cfi_startproc
 2515 0fd8 F30F1EFB 		endbr32
 2516 0fdc 55       		pushl	%ebp
 2517              		.cfi_def_cfa_offset 8
 2518              		.cfi_offset 5, -8
 2519 0fdd 89E5     		movl	%esp, %ebp
 2520              		.cfi_def_cfa_register 5
 2521 0fdf 57       		pushl	%edi
 2522 0fe0 56       		pushl	%esi
 2523 0fe1 53       		pushl	%ebx
 2524 0fe2 83EC3C   		subl	$60, %esp
 2525              		.cfi_offset 7, -12
 2526              		.cfi_offset 6, -16
 2527              		.cfi_offset 3, -20
 2528 0fe5 E8FCFFFF 		call	__x86.get_pc_thunk.ax
 2528      FF
 2529 0fea 05010000 		addl	$_GLOBAL_OFFSET_TABLE_, %eax
 2529      00
 2530 0fef 8B5508   		movl	8(%ebp), %edx
 2531 0ff2 8955C4   		movl	%edx, -60(%ebp)
 2532 0ff5 8B5510   		movl	16(%ebp), %edx
 2533 0ff8 8955C0   		movl	%edx, -64(%ebp)
 2534              		.loc 1 380 1
 2535 0ffb 658B3514 		movl	%gs:20, %esi
 2535      000000
 2536 1002 8975E4   		movl	%esi, -28(%ebp)
 2537 1005 31F6     		xorl	%esi, %esi
 381:blowfish.c    ****   int i, j;
 382:blowfish.c    ****   uint32_t data, datal, datar;
 383:blowfish.c    **** 
 384:blowfish.c    ****   *ctx = _nettle_blowfish_initial_ctx;
 2538              		.loc 1 384 8
 2539 1007 8B55C4   		movl	-60(%ebp), %edx
 2540 100a 89D3     		movl	%edx, %ebx
 2541 100c 8D800000 		leal	_nettle_blowfish_initial_ctx@GOTOFF(%eax), %eax
 2541      0000
 2542 1012 BA120400 		movl	$1042, %edx
 2542      00
 2543 1017 89DF     		movl	%ebx, %edi
 2544 1019 89C6     		movl	%eax, %esi
 2545 101b 89D1     		movl	%edx, %ecx
 2546 101d F3A5     		rep movsl
 385:blowfish.c    **** 
 386:blowfish.c    ****   for (i = j = 0; i < _BLOWFISH_ROUNDS + 2; i++)
 2547              		.loc 1 386 14
 2548 101f C745DC00 		movl	$0, -36(%ebp)
 2548      000000
 2549              		.loc 1 386 10
 2550 1026 8B45DC   		movl	-36(%ebp), %eax
 2551 1029 8945D8   		movl	%eax, -40(%ebp)
 2552              		.loc 1 386 3
 2553 102c E9A70000 		jmp	.L14
 2553      00
 2554              	.L15:
 387:blowfish.c    ****     {
 388:blowfish.c    ****       data = ((uint32_t) key[j] << 24)
 2555              		.loc 1 388 29 discriminator 3
 2556 1031 8B55DC   		movl	-36(%ebp), %edx
 2557 1034 8B45C0   		movl	-64(%ebp), %eax
 2558 1037 01D0     		addl	%edx, %eax
 2559 1039 0FB600   		movzbl	(%eax), %eax
 2560              		.loc 1 388 15 discriminator 3
 2561 103c 0FB6C0   		movzbl	%al, %eax
 2562              		.loc 1 388 33 discriminator 3
 2563 103f C1E018   		sall	$24, %eax
 2564 1042 89C1     		movl	%eax, %ecx
 389:blowfish.c    **** 	| ((uint32_t) key[(j+1) % length] << 16)
 2565              		.loc 1 389 22 discriminator 3
 2566 1044 8B45DC   		movl	-36(%ebp), %eax
 2567 1047 83C001   		addl	$1, %eax
 2568              		.loc 1 389 26 discriminator 3
 2569 104a BA000000 		movl	$0, %edx
 2569      00
 2570 104f F7750C   		divl	12(%ebp)
 2571              		.loc 1 389 19 discriminator 3
 2572 1052 8B45C0   		movl	-64(%ebp), %eax
 2573 1055 01D0     		addl	%edx, %eax
 2574 1057 0FB600   		movzbl	(%eax), %eax
 2575              		.loc 1 389 5 discriminator 3
 2576 105a 0FB6C0   		movzbl	%al, %eax
 2577              		.loc 1 389 36 discriminator 3
 2578 105d C1E010   		sall	$16, %eax
 2579              		.loc 1 389 2 discriminator 3
 2580 1060 09C1     		orl	%eax, %ecx
 390:blowfish.c    **** 	| ((uint32_t) key[(j+2) % length] << 8)
 2581              		.loc 1 390 22 discriminator 3
 2582 1062 8B45DC   		movl	-36(%ebp), %eax
 2583 1065 83C002   		addl	$2, %eax
 2584              		.loc 1 390 26 discriminator 3
 2585 1068 BA000000 		movl	$0, %edx
 2585      00
 2586 106d F7750C   		divl	12(%ebp)
 2587              		.loc 1 390 19 discriminator 3
 2588 1070 8B45C0   		movl	-64(%ebp), %eax
 2589 1073 01D0     		addl	%edx, %eax
 2590 1075 0FB600   		movzbl	(%eax), %eax
 2591              		.loc 1 390 5 discriminator 3
 2592 1078 0FB6C0   		movzbl	%al, %eax
 2593              		.loc 1 390 36 discriminator 3
 2594 107b C1E008   		sall	$8, %eax
 2595              		.loc 1 390 2 discriminator 3
 2596 107e 09C1     		orl	%eax, %ecx
 391:blowfish.c    **** 	| (uint32_t) key[(j+3) % length];
 2597              		.loc 1 391 21 discriminator 3
 2598 1080 8B45DC   		movl	-36(%ebp), %eax
 2599 1083 83C003   		addl	$3, %eax
 2600              		.loc 1 391 25 discriminator 3
 2601 1086 BA000000 		movl	$0, %edx
 2601      00
 2602 108b F7750C   		divl	12(%ebp)
 2603              		.loc 1 391 18 discriminator 3
 2604 108e 8B45C0   		movl	-64(%ebp), %eax
 2605 1091 01D0     		addl	%edx, %eax
 2606 1093 0FB600   		movzbl	(%eax), %eax
 2607              		.loc 1 391 4 discriminator 3
 2608 1096 0FB6C0   		movzbl	%al, %eax
 388:blowfish.c    **** 	| ((uint32_t) key[(j+1) % length] << 16)
 2609              		.loc 1 388 12 discriminator 3
 2610 1099 09C8     		orl	%ecx, %eax
 2611 109b 8945E0   		movl	%eax, -32(%ebp)
 392:blowfish.c    ****       ctx->p[i] ^= data;
 2612              		.loc 1 392 17 discriminator 3
 2613 109e 8B45C4   		movl	-60(%ebp), %eax
 2614 10a1 8B55D8   		movl	-40(%ebp), %edx
 2615 10a4 81C20004 		addl	$1024, %edx
 2615      0000
 2616 10aa 8B0490   		movl	(%eax,%edx,4), %eax
 2617 10ad 3345E0   		xorl	-32(%ebp), %eax
 2618 10b0 89C2     		movl	%eax, %edx
 2619 10b2 8B45C4   		movl	-60(%ebp), %eax
 2620 10b5 8B4DD8   		movl	-40(%ebp), %ecx
 2621 10b8 81C10004 		addl	$1024, %ecx
 2621      0000
 2622 10be 891488   		movl	%edx, (%eax,%ecx,4)
 393:blowfish.c    ****       j = (j + 4) % length;
 2623              		.loc 1 393 14 discriminator 3
 2624 10c1 8B45DC   		movl	-36(%ebp), %eax
 2625 10c4 83C004   		addl	$4, %eax
 2626              		.loc 1 393 19 discriminator 3
 2627 10c7 BA000000 		movl	$0, %edx
 2627      00
 2628 10cc F7750C   		divl	12(%ebp)
 2629 10cf 89D0     		movl	%edx, %eax
 2630              		.loc 1 393 9 discriminator 3
 2631 10d1 8945DC   		movl	%eax, -36(%ebp)
 386:blowfish.c    ****     {
 2632              		.loc 1 386 46 discriminator 3
 2633 10d4 8345D801 		addl	$1, -40(%ebp)
 2634              	.L14:
 386:blowfish.c    ****     {
 2635              		.loc 1 386 3 discriminator 1
 2636 10d8 837DD811 		cmpl	$17, -40(%ebp)
 2637 10dc 0F8E4FFF 		jle	.L15
 2637      FFFF
 394:blowfish.c    ****     }
 395:blowfish.c    **** 
 396:blowfish.c    ****   datal = datar = 0;
 2638              		.loc 1 396 17
 2639 10e2 C745D400 		movl	$0, -44(%ebp)
 2639      000000
 2640              		.loc 1 396 9
 2641 10e9 8B45D4   		movl	-44(%ebp), %eax
 2642 10ec 8945D0   		movl	%eax, -48(%ebp)
 397:blowfish.c    ****   for (i = 0; i < _BLOWFISH_ROUNDS + 2; i += 2)
 2643              		.loc 1 397 10
 2644 10ef C745D800 		movl	$0, -40(%ebp)
 2644      000000
 2645              		.loc 1 397 3
 2646 10f6 EB3E     		jmp	.L16
 2647              	.L17:
 398:blowfish.c    ****     {
 399:blowfish.c    ****       _nettle_blowfish_encround (ctx, &datal, &datar);
 2648              		.loc 1 399 7 discriminator 3
 2649 10f8 8D45D4   		leal	-44(%ebp), %eax
 2650 10fb 50       		pushl	%eax
 2651 10fc 8D45D0   		leal	-48(%ebp), %eax
 2652 10ff 50       		pushl	%eax
 2653 1100 FF75C4   		pushl	-60(%ebp)
 2654 1103 E8FCFFFF 		call	_nettle_blowfish_encround
 2654      FF
 2655 1108 83C40C   		addl	$12, %esp
 400:blowfish.c    ****       ctx->p[i] = datal;
 2656              		.loc 1 400 17 discriminator 3
 2657 110b 8B55D0   		movl	-48(%ebp), %edx
 2658 110e 8B45C4   		movl	-60(%ebp), %eax
 2659 1111 8B4DD8   		movl	-40(%ebp), %ecx
 2660 1114 81C10004 		addl	$1024, %ecx
 2660      0000
 2661 111a 891488   		movl	%edx, (%eax,%ecx,4)
 401:blowfish.c    ****       ctx->p[i + 1] = datar;
 2662              		.loc 1 401 16 discriminator 3
 2663 111d 8B45D8   		movl	-40(%ebp), %eax
 2664 1120 8D4801   		leal	1(%eax), %ecx
 2665              		.loc 1 401 21 discriminator 3
 2666 1123 8B55D4   		movl	-44(%ebp), %edx
 2667 1126 8B45C4   		movl	-60(%ebp), %eax
 2668 1129 81C10004 		addl	$1024, %ecx
 2668      0000
 2669 112f 891488   		movl	%edx, (%eax,%ecx,4)
 397:blowfish.c    ****     {
 2670              		.loc 1 397 43 discriminator 3
 2671 1132 8345D802 		addl	$2, -40(%ebp)
 2672              	.L16:
 397:blowfish.c    ****     {
 2673              		.loc 1 397 3 discriminator 1
 2674 1136 837DD811 		cmpl	$17, -40(%ebp)
 2675 113a 7EBC     		jle	.L17
 402:blowfish.c    ****     }
 403:blowfish.c    **** 
 404:blowfish.c    ****   for (j = 0; j < 4; j++)
 2676              		.loc 1 404 10
 2677 113c C745DC00 		movl	$0, -36(%ebp)
 2677      000000
 2678              		.loc 1 404 3
 2679 1143 EB5A     		jmp	.L18
 2680              	.L21:
 405:blowfish.c    ****     for (i = 0; i < 256; i += 2)
 2681              		.loc 1 405 12
 2682 1145 C745D800 		movl	$0, -40(%ebp)
 2682      000000
 2683              		.loc 1 405 5
 2684 114c EB44     		jmp	.L19
 2685              	.L20:
 406:blowfish.c    ****       {
 407:blowfish.c    **** 	_nettle_blowfish_encround (ctx, &datal, &datar);
 2686              		.loc 1 407 2 discriminator 3
 2687 114e 8D45D4   		leal	-44(%ebp), %eax
 2688 1151 50       		pushl	%eax
 2689 1152 8D45D0   		leal	-48(%ebp), %eax
 2690 1155 50       		pushl	%eax
 2691 1156 FF75C4   		pushl	-60(%ebp)
 2692 1159 E8FCFFFF 		call	_nettle_blowfish_encround
 2692      FF
 2693 115e 83C40C   		addl	$12, %esp
 408:blowfish.c    **** 	ctx->s[j][i] = datal;
 2694              		.loc 1 408 15 discriminator 3
 2695 1161 8B55D0   		movl	-48(%ebp), %edx
 2696 1164 8B45C4   		movl	-60(%ebp), %eax
 2697 1167 8B4DDC   		movl	-36(%ebp), %ecx
 2698 116a 89CB     		movl	%ecx, %ebx
 2699 116c C1E308   		sall	$8, %ebx
 2700 116f 8B4DD8   		movl	-40(%ebp), %ecx
 2701 1172 01D9     		addl	%ebx, %ecx
 2702 1174 891488   		movl	%edx, (%eax,%ecx,4)
 409:blowfish.c    **** 	ctx->s[j][i + 1] = datar;
 2703              		.loc 1 409 14 discriminator 3
 2704 1177 8B45D8   		movl	-40(%ebp), %eax
 2705 117a 8D5801   		leal	1(%eax), %ebx
 2706              		.loc 1 409 19 discriminator 3
 2707 117d 8B55D4   		movl	-44(%ebp), %edx
 2708 1180 8B45C4   		movl	-60(%ebp), %eax
 2709 1183 8B4DDC   		movl	-36(%ebp), %ecx
 2710 1186 C1E108   		sall	$8, %ecx
 2711 1189 01D9     		addl	%ebx, %ecx
 2712 118b 891488   		movl	%edx, (%eax,%ecx,4)
 405:blowfish.c    ****       {
 2713              		.loc 1 405 28 discriminator 3
 2714 118e 8345D802 		addl	$2, -40(%ebp)
 2715              	.L19:
 405:blowfish.c    ****       {
 2716              		.loc 1 405 5 discriminator 1
 2717 1192 817DD8FF 		cmpl	$255, -40(%ebp)
 2717      000000
 2718 1199 7EB3     		jle	.L20
 404:blowfish.c    ****     for (i = 0; i < 256; i += 2)
 2719              		.loc 1 404 23 discriminator 2
 2720 119b 8345DC01 		addl	$1, -36(%ebp)
 2721              	.L18:
 404:blowfish.c    ****     for (i = 0; i < 256; i += 2)
 2722              		.loc 1 404 3 discriminator 1
 2723 119f 837DDC03 		cmpl	$3, -36(%ebp)
 2724 11a3 7EA0     		jle	.L21
 410:blowfish.c    ****     }
 411:blowfish.c    **** 
 412:blowfish.c    ****   /* Check for weak key.  A weak key is a key in which a value in
 413:blowfish.c    ****      the P-array (here c) occurs more than once per table.  */
 414:blowfish.c    ****   for (i = 0; i < 255; i++)
 2725              		.loc 1 414 10
 2726 11a5 C745D800 		movl	$0, -40(%ebp)
 2726      000000
 2727              		.loc 1 414 3
 2728 11ac E9A60000 		jmp	.L22
 2728      00
 2729              	.L28:
 415:blowfish.c    ****     {
 416:blowfish.c    ****       for (j = i + 1; j < 256; j++)
 2730              		.loc 1 416 14
 2731 11b1 8B45D8   		movl	-40(%ebp), %eax
 2732 11b4 83C001   		addl	$1, %eax
 2733 11b7 8945DC   		movl	%eax, -36(%ebp)
 2734              		.loc 1 416 7
 2735 11ba E9870000 		jmp	.L23
 2735      00
 2736              	.L27:
 417:blowfish.c    **** 	{
 418:blowfish.c    **** 	  if ((ctx->s[0][i] == ctx->s[0][j])
 2737              		.loc 1 418 18
 2738 11bf 8B45C4   		movl	-60(%ebp), %eax
 2739 11c2 8B55D8   		movl	-40(%ebp), %edx
 2740 11c5 8B0C90   		movl	(%eax,%edx,4), %ecx
 2741              		.loc 1 418 34
 2742 11c8 8B45C4   		movl	-60(%ebp), %eax
 2743 11cb 8B55DC   		movl	-36(%ebp), %edx
 2744 11ce 8B0490   		movl	(%eax,%edx,4), %eax
 2745              		.loc 1 418 7
 2746 11d1 39C1     		cmpl	%eax, %ecx
 2747 11d3 7466     		je	.L24
 419:blowfish.c    **** 	      || (ctx->s[1][i] == ctx->s[1][j])
 2748              		.loc 1 419 21
 2749 11d5 8B45C4   		movl	-60(%ebp), %eax
 2750 11d8 8B55D8   		movl	-40(%ebp), %edx
 2751 11db 81C20001 		addl	$256, %edx
 2751      0000
 2752 11e1 8B1490   		movl	(%eax,%edx,4), %edx
 2753              		.loc 1 419 37
 2754 11e4 8B45C4   		movl	-60(%ebp), %eax
 2755 11e7 8B4DDC   		movl	-36(%ebp), %ecx
 2756 11ea 81C10001 		addl	$256, %ecx
 2756      0000
 2757 11f0 8B0488   		movl	(%eax,%ecx,4), %eax
 2758              		.loc 1 419 8
 2759 11f3 39C2     		cmpl	%eax, %edx
 2760 11f5 7444     		je	.L24
 420:blowfish.c    **** 	      || (ctx->s[2][i] == ctx->s[2][j])
 2761              		.loc 1 420 21
 2762 11f7 8B45C4   		movl	-60(%ebp), %eax
 2763 11fa 8B55D8   		movl	-40(%ebp), %edx
 2764 11fd 81C20002 		addl	$512, %edx
 2764      0000
 2765 1203 8B1490   		movl	(%eax,%edx,4), %edx
 2766              		.loc 1 420 37
 2767 1206 8B45C4   		movl	-60(%ebp), %eax
 2768 1209 8B4DDC   		movl	-36(%ebp), %ecx
 2769 120c 81C10002 		addl	$512, %ecx
 2769      0000
 2770 1212 8B0488   		movl	(%eax,%ecx,4), %eax
 2771              		.loc 1 420 8
 2772 1215 39C2     		cmpl	%eax, %edx
 2773 1217 7422     		je	.L24
 421:blowfish.c    **** 	      || (ctx->s[3][i] == ctx->s[3][j]))
 2774              		.loc 1 421 21
 2775 1219 8B45C4   		movl	-60(%ebp), %eax
 2776 121c 8B55D8   		movl	-40(%ebp), %edx
 2777 121f 81C20003 		addl	$768, %edx
 2777      0000
 2778 1225 8B1490   		movl	(%eax,%edx,4), %edx
 2779              		.loc 1 421 37
 2780 1228 8B45C4   		movl	-60(%ebp), %eax
 2781 122b 8B4DDC   		movl	-36(%ebp), %ecx
 2782 122e 81C10003 		addl	$768, %ecx
 2782      0000
 2783 1234 8B0488   		movl	(%eax,%ecx,4), %eax
 2784              		.loc 1 421 8
 2785 1237 39C2     		cmpl	%eax, %edx
 2786 1239 7507     		jne	.L25
 2787              	.L24:
 422:blowfish.c    **** 	    return 0;
 2788              		.loc 1 422 13
 2789 123b B8000000 		movl	$0, %eax
 2789      00
 2790 1240 EB27     		jmp	.L29
 2791              	.L25:
 416:blowfish.c    **** 	{
 2792              		.loc 1 416 33 discriminator 2
 2793 1242 8345DC01 		addl	$1, -36(%ebp)
 2794              	.L23:
 416:blowfish.c    **** 	{
 2795              		.loc 1 416 7 discriminator 1
 2796 1246 817DDCFF 		cmpl	$255, -36(%ebp)
 2796      000000
 2797 124d 0F8E6CFF 		jle	.L27
 2797      FFFF
 414:blowfish.c    ****     {
 2798              		.loc 1 414 25 discriminator 2
 2799 1253 8345D801 		addl	$1, -40(%ebp)
 2800              	.L22:
 414:blowfish.c    ****     {
 2801              		.loc 1 414 3 discriminator 1
 2802 1257 817DD8FE 		cmpl	$254, -40(%ebp)
 2802      000000
 2803 125e 0F8E4DFF 		jle	.L28
 2803      FFFF
 423:blowfish.c    **** 	}
 424:blowfish.c    ****     }
 425:blowfish.c    **** 
 426:blowfish.c    ****   return 1;
 2804              		.loc 1 426 10
 2805 1264 B8010000 		movl	$1, %eax
 2805      00
 2806              	.L29:
 427:blowfish.c    **** }
 2807              		.loc 1 427 1 discriminator 1
 2808 1269 8B7DE4   		movl	-28(%ebp), %edi
 2809 126c 65333D14 		xorl	%gs:20, %edi
 2809      000000
 2810 1273 7405     		je	.L30
 2811              		.loc 1 427 1 is_stmt 0
 2812 1275 E8FCFFFF 		call	__stack_chk_fail_local
 2812      FF
 2813              	.L30:
 2814 127a 8D65F4   		leal	-12(%ebp), %esp
 2815 127d 5B       		popl	%ebx
 2816              		.cfi_restore 3
 2817 127e 5E       		popl	%esi
 2818              		.cfi_restore 6
 2819 127f 5F       		popl	%edi
 2820              		.cfi_restore 7
 2821 1280 5D       		popl	%ebp
 2822              		.cfi_restore 5
 2823              		.cfi_def_cfa 4, 4
 2824 1281 C3       		ret
 2825              		.cfi_endproc
 2826              	.LFE4:
 2828              		.globl	nettle_blowfish128_set_key
 2830              	nettle_blowfish128_set_key:
 2831              	.LFB5:
 428:blowfish.c    **** 
 429:blowfish.c    **** int
 430:blowfish.c    **** blowfish128_set_key(struct blowfish_ctx *ctx, const uint8_t *key)
 431:blowfish.c    **** {
 2832              		.loc 1 431 1 is_stmt 1
 2833              		.cfi_startproc
 2834 1282 F30F1EFB 		endbr32
 2835 1286 55       		pushl	%ebp
 2836              		.cfi_def_cfa_offset 8
 2837              		.cfi_offset 5, -8
 2838 1287 89E5     		movl	%esp, %ebp
 2839              		.cfi_def_cfa_register 5
 2840 1289 83EC08   		subl	$8, %esp
 2841 128c E8FCFFFF 		call	__x86.get_pc_thunk.ax
 2841      FF
 2842 1291 05010000 		addl	$_GLOBAL_OFFSET_TABLE_, %eax
 2842      00
 432:blowfish.c    ****   return blowfish_set_key (ctx, BLOWFISH128_KEY_SIZE, key);
 2843              		.loc 1 432 10
 2844 1296 83EC04   		subl	$4, %esp
 2845 1299 FF750C   		pushl	12(%ebp)
 2846 129c 6A10     		pushl	$16
 2847 129e FF7508   		pushl	8(%ebp)
 2848 12a1 E8FCFFFF 		call	nettle_blowfish_set_key
 2848      FF
 2849 12a6 83C410   		addl	$16, %esp
 433:blowfish.c    **** }
 2850              		.loc 1 433 1
 2851 12a9 C9       		leave
 2852              		.cfi_restore 5
 2853              		.cfi_def_cfa 4, 4
 2854 12aa C3       		ret
 2855              		.cfi_endproc
 2856              	.LFE5:
 2858              		.section	.rodata
 2859 1065 000000   		.align 4
 2862              	__PRETTY_FUNCTION__.1732:
 2863 1068 6E657474 		.string	"nettle_blowfish_encrypt"
 2863      6C655F62 
 2863      6C6F7766 
 2863      6973685F 
 2863      656E6372 
 2864              		.align 4
 2867              	__PRETTY_FUNCTION__.1744:
 2868 1080 6E657474 		.string	"nettle_blowfish_decrypt"
 2868      6C655F62 
 2868      6C6F7766 
 2868      6973685F 
 2868      64656372 
 2869              		.section	.text.__x86.get_pc_thunk.ax,"axG",@progbits,__x86.get_pc_thunk.ax,comdat
 2870              		.globl	__x86.get_pc_thunk.ax
 2871              		.hidden	__x86.get_pc_thunk.ax
 2873              	__x86.get_pc_thunk.ax:
 2874              	.LFB6:
 2875              		.cfi_startproc
 2876 0000 8B0424   		movl	(%esp), %eax
 2877 0003 C3       		ret
 2878              		.cfi_endproc
 2879              	.LFE6:
 2880              		.text
 2881              	.Letext0:
 2882              		.file 2 "/usr/lib/gcc-cross/i686-linux-gnu/9/include/stddef.h"
 2883              		.file 3 "/usr/i686-linux-gnu/include/bits/types.h"
 2884              		.file 4 "/usr/i686-linux-gnu/include/bits/stdint-uintn.h"
 2885              		.file 5 "blowfish.h"
 2886              		.file 6 "blowfish-internal.h"
 3904              		.section	.note.gnu.property,"a"
 3905              		.align 4
 3906 0000 04000000 		.long	 1f - 0f
 3907 0004 0C000000 		.long	 4f - 1f
 3908 0008 05000000 		.long	 5
 3909              	0:
 3910 000c 474E5500 		.string	 "GNU"
 3911              	1:
 3912              		.align 4
 3913 0010 020000C0 		.long	 0xc0000002
 3914 0014 04000000 		.long	 3f - 2f
 3915              	2:
 3916 0018 03000000 		.long	 0x3
 3917              	3:
 3918              		.align 4
 3919              	4:
